{{- if .Values.backend.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "bookedbarber.fullname" . }}-backend-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "bookedbarber.backend.labels" . | nindent 4 }}
data:
  {{- range $key, $value := .Values.backend.env }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
  NEXT_PUBLIC_API_URL: {{ printf "https://api.%s" (index .Values.ingress.hosts 0).host | quote }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bookedbarber.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "bookedbarber.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "bookedbarber.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bookedbarber.backend.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bookedbarber.serviceAccountName" . }}
      securityContext:
        {{- include "bookedbarber.podSecurityContext" . | nindent 8 }}
        {{- with .Values.backend.securityContext }}
        runAsUser: {{ .runAsUser }}
        runAsGroup: {{ .runAsGroup }}
        fsGroup: {{ .fsGroup }}
        {{- end }}
      containers:
      - name: backend
        image: {{ include "bookedbarber.image" (dict "repository" .Values.backend.image.repository "tag" .Values.backend.image.tag "Chart" .Chart "Values" .Values) }}
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.backend.securityContext | nindent 10 }}
        ports:
        - containerPort: {{ .Values.backend.service.targetPort }}
          name: http
          protocol: TCP
        env:
        # Configuration from ConfigMap
        {{- range $key, $value := .Values.backend.env }}
        - name: {{ $key }}
          valueFrom:
            configMapKeyRef:
              name: {{ include "bookedbarber.fullname" $ }}-backend-config
              key: {{ $key }}
        {{- end }}
        # Secrets
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: REDIS_URL
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: JWT_SECRET_KEY
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: STRIPE_SECRET_KEY
        - name: STRIPE_PUBLISHABLE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: STRIPE_PUBLISHABLE_KEY
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: STRIPE_WEBHOOK_SECRET
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: SENDGRID_API_KEY
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: TWILIO_ACCOUNT_SID
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: TWILIO_AUTH_TOKEN
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: GOOGLE_CLIENT_ID
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: GOOGLE_CLIENT_SECRET
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: {{ include "bookedbarber.fullname" . }}-secrets
              key: SENTRY_DSN
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /app/temp
        livenessProbe:
          {{- toYaml .Values.backend.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.backend.readinessProbe | nindent 10 }}
        startupProbe:
          httpGet:
            path: /health
            port: {{ .Values.backend.service.targetPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      - name: temp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}