apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookedbarber-backend
  labels:
    app: bookedbarber-backend
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: bookedbarber-backend
  template:
    metadata:
      labels:
        app: bookedbarber-backend
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: backend
        image: ghcr.io/github_repository/backend-v2:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: PORT
          value: "8000"
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: bookedbarber-config
              key: environment
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: database-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: secret-key
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: redis-url
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: stripe-secret-key
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: stripe-webhook-secret
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: sendgrid-api-key
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: sentry-dsn
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: bookedbarber-config
              key: cors-origins
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: bookedbarber-backend
  labels:
    app: bookedbarber-backend
    tier: backend
spec:
  selector:
    app: bookedbarber-backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bookedbarber-backend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bookedbarber-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60