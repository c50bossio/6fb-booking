apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bookedbarber-production
  namespace: argocd
  labels:
    app: bookedbarber
    environment: production
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/bookedbarber/6fb-booking.git
    targetRevision: main
    path: gitops/environments/production
    helm:
      valueFiles:
        - values.yaml
        - values-production.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: production
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
      - RespectIgnoreDifferences=true
      - ApplyOutOfSyncOnly=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 10
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
    - group: autoscaling
      kind: HorizontalPodAutoscaler
      jsonPointers:
        - /spec/minReplicas
        - /spec/maxReplicas

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bookedbarber-staging
  namespace: argocd
  labels:
    app: bookedbarber
    environment: staging
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/bookedbarber/6fb-booking.git
    targetRevision: main
    path: gitops/environments/staging
    helm:
      valueFiles:
        - values.yaml
        - values-staging.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: staging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 2m
  revisionHistoryLimit: 5

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bookedbarber-blue-green
  namespace: argocd
  labels:
    app: bookedbarber
    environment: production
    deployment-strategy: blue-green
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/bookedbarber/6fb-booking.git
    targetRevision: main
    path: deploy/blue-green
  destination:
    server: https://kubernetes.default.svc
    namespace: production-blue
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
    retry:
      limit: 2
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 1m
  revisionHistoryLimit: 3

---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: bookedbarber
  namespace: argocd
  labels:
    project: bookedbarber
spec:
  description: BookedBarber Application Project
  sourceRepos:
    - 'https://github.com/bookedbarber/*'
    - 'https://charts.bitnami.com/bitnami'
    - 'https://kubernetes-sigs.github.io/metrics-server/'
  destinations:
    - namespace: 'production*'
      server: https://kubernetes.default.svc
    - namespace: 'staging*'
      server: https://kubernetes.default.svc
    - namespace: 'development*'
      server: https://kubernetes.default.svc
  clusterResourceWhitelist:
    - group: ''
      kind: Namespace
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRole
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRoleBinding
    - group: 'apiextensions.k8s.io'
      kind: CustomResourceDefinition
  namespaceResourceWhitelist:
    - group: ''
      kind: ConfigMap
    - group: ''
      kind: Secret
    - group: ''
      kind: Service
    - group: 'apps'
      kind: Deployment
    - group: 'apps'
      kind: ReplicaSet
    - group: 'networking.k8s.io'
      kind: Ingress
    - group: 'autoscaling'
      kind: HorizontalPodAutoscaler
    - group: 'policy'
      kind: PodDisruptionBudget
    - group: 'argoproj.io'
      kind: Rollout
    - group: 'argoproj.io'
      kind: AnalysisTemplate
  roles:
    - name: admin
      description: Admin access to BookedBarber project
      policies:
        - p, proj:bookedbarber:admin, applications, *, bookedbarber/*, allow
        - p, proj:bookedbarber:admin, repositories, *, *, allow
        - p, proj:bookedbarber:admin, logs, get, bookedbarber/*, allow
        - p, proj:bookedbarber:admin, exec, create, bookedbarber/*, allow
      groups:
        - bookedbarber:admins
    - name: developer
      description: Developer access to BookedBarber project
      policies:
        - p, proj:bookedbarber:developer, applications, get, bookedbarber/*, allow
        - p, proj:bookedbarber:developer, applications, sync, bookedbarber/*, allow
        - p, proj:bookedbarber:developer, logs, get, bookedbarber/*, allow
        - p, proj:bookedbarber:developer, repositories, get, *, allow
      groups:
        - bookedbarber:developers
    - name: readonly
      description: Read-only access to BookedBarber project
      policies:
        - p, proj:bookedbarber:readonly, applications, get, bookedbarber/*, allow
        - p, proj:bookedbarber:readonly, logs, get, bookedbarber/*, allow
      groups:
        - bookedbarber:viewers

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: bookedbarber-environments
  namespace: argocd
  labels:
    app: bookedbarber
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          env: bookedbarber
  - list:
      elements:
      - env: development
        namespace: development
        replicaCount: 1
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
      - env: staging
        namespace: staging
        replicaCount: 2
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      - env: production
        namespace: production
        replicaCount: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
  template:
    metadata:
      name: 'bookedbarber-{{env}}'
      labels:
        app: bookedbarber
        environment: '{{env}}'
    spec:
      project: bookedbarber
      source:
        repoURL: https://github.com/bookedbarber/6fb-booking.git
        targetRevision: HEAD
        path: gitops/environments/{{env}}
        helm:
          valueFiles:
            - values.yaml
            - 'values-{{env}}.yaml'
          parameters:
            - name: replicaCount
              value: '{{replicaCount}}'
            - name: resources.requests.memory
              value: '{{resources.requests.memory}}'
            - name: resources.requests.cpu
              value: '{{resources.requests.cpu}}'
            - name: resources.limits.memory
              value: '{{resources.limits.memory}}'
            - name: resources.limits.cpu
              value: '{{resources.limits.cpu}}'
      destination:
        server: '{{server}}'
        namespace: '{{namespace}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
        retry:
          limit: 3