# Prometheus Configuration for BookedBarber V2

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    environment: '{{ .Values.environment | default "production" }}'
    cluster: 'bookedbarber-v2'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      path_prefix: /
      scheme: http

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # BookedBarber API
  - job_name: 'bookedbarber-api'
    static_configs:
      - targets: ['api:8000']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 5s
    honor_labels: true

  # BookedBarber Frontend
  - job_name: 'bookedbarber-frontend'
    static_configs:
      - targets: ['frontend:3000']
    scrape_interval: 15s
    metrics_path: /_next/static/metrics
    scrape_timeout: 5s

  # PostgreSQL Exporter
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 15s
    metrics_path: /metrics

  # Redis Exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s
    metrics_path: /metrics

  # Node Exporter (System metrics)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # Nginx Exporter
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 15s
    metrics_path: /metrics

  # Blackbox Exporter (External monitoring)
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.bookedbarber.com/health
        - https://app.bookedbarber.com
        - https://api.bookedbarber.com/docs
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # SSL Certificate Monitoring
  - job_name: 'ssl-certificates'
    metrics_path: /probe
    params:
      module: [ssl_expire]
    static_configs:
      - targets:
        - api.bookedbarber.com:443
        - app.bookedbarber.com:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Kubernetes metrics (if running on K8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  # Custom application metrics
  - job_name: 'bookedbarber-business-metrics'
    static_configs:
      - targets: ['business-metrics-exporter:8080']
    scrape_interval: 60s
    metrics_path: /metrics

  # Backup monitoring
  - job_name: 'backup-metrics'
    static_configs:
      - targets: ['backup-monitor:9201']
    scrape_interval: 300s  # 5 minutes
    metrics_path: /metrics

# Remote write for long-term storage
remote_write:
  - url: "{{ .Values.remote_write_url | default "" }}"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 50GB
    path: /prometheus/data