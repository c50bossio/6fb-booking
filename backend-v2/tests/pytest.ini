[tool:pytest]
# Pytest Configuration for BookedBarber V2 Comprehensive Test Suite
# =================================================================

# Test discovery settings
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum Python version
minversion = 6.0

# Add current directory to Python path
addopts = --strict-markers
          --strict-config
          --verbosity=2
          --tb=short
          --cov=.
          --cov-report=html:coverage/html
          --cov-report=term-missing
          --cov-report=xml:coverage/coverage.xml
          --cov-fail-under=80
          --durations=20
          --maxfail=5

# Test markers for categorization
markers =
    # Test type markers
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    e2e: End-to-end workflow tests
    frontend: Frontend component tests
    
    # Feature area markers
    auth: Authentication and authorization tests
    security: Security and vulnerability tests
    performance: Performance and load tests
    api: API endpoint tests
    ai: AI Dashboard transformation tests
    dashboard: Dashboard component tests
    booking: Booking and appointment tests
    payment: Payment processing tests
    
    # Testing framework markers
    playwright: Playwright browser automation tests
    react: React component tests
    nextjs: Next.js routing tests
    
    # Test execution markers
    slow: Slow running tests (>30 seconds)
    fast: Fast running tests (<5 seconds)
    smoke: Smoke tests for basic functionality
    regression: Regression tests for bug prevention
    
    # External dependency markers
    stripe: Tests requiring Stripe integration
    sendgrid: Tests requiring SendGrid integration
    twilio: Tests requiring Twilio integration
    oauth: Tests requiring OAuth integration
    
    # Environment markers
    dev: Tests that run in development environment only
    staging: Tests that run in staging environment
    prod: Tests that can run in production
    
    # Priority markers
    critical: Critical path tests that must pass
    high: High priority tests
    medium: Medium priority tests
    low: Low priority tests

# Coverage settings
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */env/*
    */.venv/*
    */migrations/*
    */alembic/*
    */node_modules/*
    */__pycache__/*
    */.*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# HTML coverage report settings
[coverage:html]
directory = coverage/html
title = BookedBarber V2 Test Coverage Report

# XML coverage report settings  
[coverage:xml]
output = coverage/coverage.xml

# Filterwarnings - suppress known warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*coroutine.*was never awaited:RuntimeWarning

# Asyncio settings
asyncio_mode = auto

# Timeout settings (in seconds)
timeout = 300
timeout_method = thread

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test collection settings
collect_ignore = [
    "setup.py",
    frontend-v2/node_modules
    frontend-v2/.next
    .venv
    env
    venv
]

# Parallel execution settings
[tool:pytest-xdist]
# Number of parallel workers (auto-detect CPU cores)
-n = auto

# Test ordering
[tool:pytest-order]
# Run smoke tests first, then unit, integration, e2e
order_dependencies = true