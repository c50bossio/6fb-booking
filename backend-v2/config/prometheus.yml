# =============================================================================
# Prometheus Configuration for BookedBarber V2
# =============================================================================
# ðŸŽ¯ Comprehensive metrics collection from all services
# ðŸ“Š Custom scrape configs for application-specific metrics
# ðŸš¨ Alert rules for proactive monitoring
# =============================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'bookedbarber-v2'
    environment: 'development'

rule_files:
  - "alert-rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # =============================================================================
  # System and Infrastructure Metrics
  # =============================================================================
  
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # cAdvisor - Container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: /metrics

  # =============================================================================
  # Database Metrics
  # =============================================================================
  
  # PostgreSQL Exporter
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /metrics

  # Redis Exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /metrics

  # =============================================================================
  # Application Metrics
  # =============================================================================
  
  # FastAPI Backend Metrics
  - job_name: 'backend'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'backend-api'

  # Next.js Frontend Metrics (if metrics endpoint exists)
  - job_name: 'frontend'
    static_configs:
      - targets: ['frontend:3000']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /api/metrics
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'frontend-app'

  # =============================================================================
  # Custom Application Metrics
  # =============================================================================
  
  # Booking Service Metrics
  - job_name: 'booking-service'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /api/v2/metrics/booking
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'booking'

  # Payment Service Metrics
  - job_name: 'payment-service'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /api/v2/metrics/payment
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'payment'

  # User Service Metrics
  - job_name: 'user-service'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /api/v2/metrics/user
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'user'

  # =============================================================================
  # Health Check Monitoring
  # =============================================================================
  
  # Application Health Checks
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'backend:8000'
        - 'frontend:3000'
    scrape_interval: 30s
    metrics_path: /health
    honor_labels: true
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'up'
        target_label: __name__
        replacement: 'service_up'

  # =============================================================================
  # External Service Monitoring
  # =============================================================================
  
  # Stripe API Health (synthetic monitoring)
  - job_name: 'stripe-health'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 60s
    metrics_path: /api/v2/metrics/external/stripe
    honor_labels: true

  # Google Calendar API Health
  - job_name: 'google-calendar-health'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 60s
    metrics_path: /api/v2/metrics/external/google-calendar
    honor_labels: true

  # SendGrid API Health
  - job_name: 'sendgrid-health'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 60s
    metrics_path: /api/v2/metrics/external/sendgrid
    honor_labels: true

  # =============================================================================
  # Business Metrics
  # =============================================================================
  
  # Business KPIs and Metrics
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 300s  # 5 minutes
    scrape_timeout: 30s
    metrics_path: /api/v2/metrics/business
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'business-intelligence'

# =============================================================================
# Remote Write Configuration (for external storage if needed)
# =============================================================================
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.com/api/v1/write"
#     basic_auth:
#       username: "your_username"
#       password: "your_password"