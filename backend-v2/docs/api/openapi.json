{
  "openapi": "3.1.0",
  "info": {
    "title": "BookedBarber V2 API",
    "version": "2.0.0",
    "description": "\nBookedBarber V2 is a comprehensive barbershop booking and business management platform.\n\n## Features\n\n- **Smart Booking System**: Real-time availability management with conflict detection\n- **AI-Powered Analytics**: Cross-user benchmarking with privacy compliance  \n- **Marketing Integrations**: Google My Business, conversion tracking, review automation\n- **Payment Processing**: Stripe Connect with automated onboarding\n- **GDPR Compliance**: Complete data protection and privacy management\n- **Multi-Factor Authentication**: TOTP support for enhanced security\n\n## Authentication\n\nMost endpoints require JWT authentication. Include the access token in the Authorization header:\n\n```\nAuthorization: Bearer <access_token>\n```\n\n## Rate Limiting\n\nAPI endpoints are rate limited to ensure fair usage:\n- Default: 100 requests per minute\n- Authentication: 10 requests per minute  \n- Payment: 20 requests per minute\n\n## Support\n\n- Documentation: https://docs.bookedbarber.com\n- Email: support@bookedbarber.com\n- Status: https://status.bookedbarber.com\n",
    "contact": {
      "name": "BookedBarber Support",
      "email": "support@bookedbarber.com",
      "url": "https://docs.bookedbarber.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/api/v1/auth/test": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Test Auth Route",
        "description": "Simple test endpoint to verify auth router is working",
        "operationId": "test_auth_route_api_v1_auth_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login",
        "description": "Login endpoint that returns a JWT access token.",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token.",
        "operationId": "refresh_token_api_v1_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Me",
        "description": "Get current user information.",
        "operationId": "get_me_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Forgot Password",
        "description": "Request a password reset token via email.",
        "operationId": "forgot_password_api_v1_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Reset Password",
        "description": "Reset password using a valid reset token.",
        "operationId": "reset_password_api_v1_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Register",
        "description": "Register a new user.",
        "operationId": "register_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Change Password",
        "description": "Change the password for the authenticated user.",
        "operationId": "change_password_api_v1_auth_change_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePasswordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/timezone": {
      "put": {
        "tags": [
          "authentication"
        ],
        "summary": "Update User Timezone",
        "description": "Update the user's preferred timezone.",
        "operationId": "update_user_timezone_api_v1_auth_timezone_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimezoneUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth-simple/test": {
      "get": {
        "tags": [
          "authentication-simple"
        ],
        "summary": "Test Auth Route",
        "description": "Simple test endpoint to verify auth router is working",
        "operationId": "test_auth_route_api_v1_auth_simple_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/auth-simple/login": {
      "post": {
        "tags": [
          "authentication-simple"
        ],
        "summary": "Login Simple",
        "description": "Simple login endpoint that works with current database schema.",
        "operationId": "login_simple_api_v1_auth_simple_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/setup": {
      "post": {
        "tags": [
          "Multi-Factor Authentication"
        ],
        "summary": "Setup Mfa",
        "description": "Initialize MFA setup for the current user.\n\nCurrently supports TOTP method. Returns QR code and secret for manual entry.\nBackup codes are generated but not active until MFA is enabled.",
        "operationId": "setup_mfa_api_v1_mfa_setup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFASetupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MFASetupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/mfa/enable": {
      "post": {
        "tags": [
          "Multi-Factor Authentication"
        ],
        "summary": "Enable Mfa",
        "description": "Verify the setup code and enable MFA for the user.\n\nThis endpoint completes the MFA setup process by verifying\nthe user can generate valid TOTP codes.",
        "operationId": "enable_mfa_api_v1_mfa_enable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAEnableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MFAEnableResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/mfa/verify": {
      "post": {
        "tags": [
          "Multi-Factor Authentication"
        ],
        "summary": "Verify Mfa",
        "description": "Verify MFA code during login process.\n\nThis endpoint is called after initial password authentication\nto complete the login with 2FA verification.",
        "operationId": "verify_mfa_api_v1_mfa_verify_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User ID from login session",
              "title": "User Id"
            },
            "description": "User ID from login session"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MFAVerificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/disable": {
      "post": {
        "tags": [
          "Multi-Factor Authentication"
        ],
        "summary": "Disable Mfa",
        "description": "Disable MFA for the current user.\n\nRequires password confirmation and optionally current MFA code\nfor additional security.",
        "operationId": "disable_mfa_api_v1_mfa_disable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFADisableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MFADisableResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/mfa/status": {
      "get": {
        "tags": [
          "Multi-Factor Authentication"
        ],
        "summary": "Get Mfa Status",
        "description": "Get the current MFA status for the user.\n\nReturns information about MFA enablement, backup codes,\nand trusted devices.",
        "operationId": "get_mfa_status_api_v1_mfa_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MFAStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/mfa/backup-codes": {
      "post": {
        "tags": [
          "Multi-Factor Authentication"
        ],
        "summary": "Regenerate Backup Codes",
        "description": "Generate new backup codes for the user.\n\nThis will invalidate all existing unused backup codes.\nRequires password and MFA verification.",
        "operationId": "regenerate_backup_codes_api_v1_mfa_backup_codes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupCodesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupCodesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/mfa/trusted-devices": {
      "get": {
        "tags": [
          "Multi-Factor Authentication"
        ],
        "summary": "List Trusted Devices",
        "description": "List all trusted devices for the current user.\n\nReturns active devices that have been trusted for MFA bypass.",
        "operationId": "list_trusted_devices_api_v1_mfa_trusted_devices_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustedDevicesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/mfa/trusted-devices/{device_id}": {
      "delete": {
        "tags": [
          "Multi-Factor Authentication"
        ],
        "summary": "Revoke Trusted Device",
        "description": "Revoke trust for a specific device.\n\nThe device will need to complete MFA verification on next login.",
        "operationId": "revoke_trusted_device_api_v1_mfa_trusted_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/events": {
      "get": {
        "tags": [
          "Multi-Factor Authentication"
        ],
        "summary": "Get Mfa Events",
        "description": "Get MFA audit events for the current user.\n\nReturns a paginated list of MFA-related security events.",
        "operationId": "get_mfa_events_api_v1_mfa_events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "exclusiveMinimum": 0,
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MFAEventLogsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/slots": {
      "get": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Get Available Slots",
        "description": "Get available time slots for a specific date with enhanced information.",
        "operationId": "get_available_slots_api_v1_bookings_slots_get",
        "deprecated": true,
        "parameters": [
          {
            "name": "booking_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Date to check availability (YYYY-MM-DD)",
              "title": "Booking Date"
            },
            "description": "Date to check availability (YYYY-MM-DD)"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone.",
              "title": "Timezone"
            },
            "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone."
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/": {
      "get": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Get User Bookings",
        "description": "Get all bookings for the current user.",
        "operationId": "get_user_bookings_api_v1_bookings__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentListResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Create Booking",
        "description": "Create a new booking.",
        "operationId": "create_booking_api_v1_bookings__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/bookings/{booking_id}": {
      "get": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Get Booking Details",
        "description": "Get details of a specific booking.",
        "operationId": "get_booking_details_api_v1_bookings__booking_id__get",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Update Booking",
        "description": "Update an existing booking.",
        "operationId": "update_booking_api_v1_bookings__booking_id__put",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}/cancel": {
      "put": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Cancel Booking",
        "description": "Cancel a booking.",
        "operationId": "cancel_booking_api_v1_bookings__booking_id__cancel_put",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}/reschedule": {
      "put": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Reschedule Booking",
        "description": "Reschedule an existing booking to a new date and time.",
        "operationId": "reschedule_booking_api_v1_bookings__booking_id__reschedule_put",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentReschedule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/quick": {
      "post": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Quick Booking",
        "description": "Create a booking for the next available slot.",
        "operationId": "quick_booking_api_v1_bookings_quick_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickAppointmentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/bookings/slots/next-available": {
      "get": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Get Next Available Slot",
        "description": "Get the next available booking slot across multiple days.",
        "operationId": "get_next_available_slot_api_v1_bookings_slots_next_available_get",
        "deprecated": true,
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date to start searching from (defaults to today)",
              "title": "Start Date"
            },
            "description": "Date to start searching from (defaults to today)"
          },
          {
            "name": "max_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 30,
              "minimum": 1,
              "description": "Maximum days ahead to search",
              "default": 7,
              "title": "Max Days"
            },
            "description": "Maximum days ahead to search"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone.",
              "title": "Timezone"
            },
            "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone."
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextAvailableSlot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/slots/barber/{barber_id}": {
      "get": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Get Available Slots For Barber",
        "description": "Get available time slots for a specific barber on a specific date.",
        "operationId": "get_available_slots_for_barber_api_v1_bookings_slots_barber__barber_id__get",
        "deprecated": true,
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "booking_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Date to check availability (YYYY-MM-DD)",
              "title": "Booking Date"
            },
            "description": "Date to check availability (YYYY-MM-DD)"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone.",
              "title": "Timezone"
            },
            "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone."
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/slots/all-barbers": {
      "get": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Get Available Slots All Barbers",
        "description": "Get available time slots for all barbers on a specific date.",
        "operationId": "get_available_slots_all_barbers_api_v1_bookings_slots_all_barbers_get",
        "deprecated": true,
        "parameters": [
          {
            "name": "booking_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Date to check availability (YYYY-MM-DD)",
              "title": "Booking Date"
            },
            "description": "Date to check availability (YYYY-MM-DD)"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone.",
              "title": "Timezone"
            },
            "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone."
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarberAvailabilityByDateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/enhanced": {
      "post": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Create Enhanced Booking",
        "description": "Create a new booking with enhanced features (barber selection, buffer times).",
        "operationId": "create_enhanced_booking_api_v1_bookings_enhanced_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnhancedAppointmentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/bookings/settings/booking": {
      "get": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Get Booking Settings",
        "description": "Get current booking settings. Requires authentication.",
        "operationId": "get_booking_settings_api_v1_bookings_settings_booking_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingSettingsResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Update Booking Settings",
        "description": "Update booking settings. Requires admin role.",
        "operationId": "update_booking_settings_api_v1_bookings_settings_booking_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingSettingsUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingSettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/bookings/guest": {
      "post": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Create Guest Booking",
        "description": "Create a booking for a guest user (no authentication required).",
        "operationId": "create_guest_booking_api_v1_bookings_guest_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestBookingCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuestBookingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/bookings/guest/quick": {
      "post": {
        "tags": [
          "bookings (deprecated)"
        ],
        "summary": "Create Guest Quick Booking",
        "description": "Create a quick booking for guest user (next available slot, no authentication required).",
        "operationId": "create_guest_quick_booking_api_v1_bookings_guest_quick_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestQuickBookingCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuestBookingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/appointments/slots": {
      "get": {
        "tags": [
          "appointments"
        ],
        "summary": "Get Available Appointment Slots",
        "description": "Get available time slots for appointments on a specific date.",
        "operationId": "get_available_appointment_slots_api_v1_appointments_slots_get",
        "parameters": [
          {
            "name": "appointment_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Date to check availability (YYYY-MM-DD)",
              "title": "Appointment Date"
            },
            "description": "Date to check availability (YYYY-MM-DD)"
          },
          {
            "name": "barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific barber ID to filter availability",
              "title": "Barber Id"
            },
            "description": "Specific barber ID to filter availability"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Service ID to check duration-specific availability",
              "title": "Service Id"
            },
            "description": "Service ID to check duration-specific availability"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone.",
              "title": "Timezone"
            },
            "description": "User's timezone (e.g., 'America/New_York'). If not provided, uses business timezone."
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/": {
      "post": {
        "tags": [
          "appointments"
        ],
        "summary": "Create Appointment",
        "description": "Create a new appointment.",
        "operationId": "create_appointment_api_v1_appointments__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "appointments"
        ],
        "summary": "Get User Appointments",
        "description": "Get current user's appointments.",
        "operationId": "get_user_appointments_api_v1_appointments__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of appointments to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of appointments to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of appointments to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of appointments to return"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by appointment status",
              "title": "Status"
            },
            "description": "Filter by appointment status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/quick": {
      "post": {
        "tags": [
          "appointments"
        ],
        "summary": "Create Quick Appointment",
        "description": "Create a quick appointment (next available slot).",
        "operationId": "create_quick_appointment_api_v1_appointments_quick_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickAppointmentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/appointments/{appointment_id}": {
      "get": {
        "tags": [
          "appointments"
        ],
        "summary": "Get Appointment",
        "description": "Get a specific appointment by ID.",
        "operationId": "get_appointment_api_v1_appointments__appointment_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "appointments"
        ],
        "summary": "Update Appointment",
        "description": "Update an existing appointment.",
        "operationId": "update_appointment_api_v1_appointments__appointment_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "appointments"
        ],
        "summary": "Cancel Appointment",
        "description": "Cancel an appointment.",
        "operationId": "cancel_appointment_api_v1_appointments__appointment_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/{appointment_id}/reschedule": {
      "post": {
        "tags": [
          "appointments"
        ],
        "summary": "Reschedule Appointment",
        "description": "Reschedule an appointment to a new date and time.",
        "operationId": "reschedule_appointment_api_v1_appointments__appointment_id__reschedule_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentReschedule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/all/list": {
      "get": {
        "tags": [
          "appointments"
        ],
        "summary": "Get All Appointments",
        "description": "Get all appointments (admin/staff only).",
        "operationId": "get_all_appointments_api_v1_appointments_all_list_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of appointments to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of appointments to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of appointments to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of appointments to return"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by appointment status",
              "title": "Status"
            },
            "description": "Filter by appointment status"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date filter",
              "title": "Date From"
            },
            "description": "Start date filter"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date filter",
              "title": "Date To"
            },
            "description": "End date filter"
          },
          {
            "name": "barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by barber ID",
              "title": "Barber Id"
            },
            "description": "Filter by barber ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/enhanced": {
      "post": {
        "tags": [
          "appointments"
        ],
        "summary": "Create Enhanced Appointment",
        "description": "Create an enhanced appointment with full options (admin/staff only).",
        "operationId": "create_enhanced_appointment_api_v1_appointments_enhanced_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnhancedAppointmentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/appointments/validate": {
      "post": {
        "tags": [
          "appointments"
        ],
        "summary": "Validate Appointment",
        "description": "Validate appointment data against business rules.",
        "operationId": "validate_appointment_api_v1_appointments_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentValidationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentValidationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/appointments/slots/next-available": {
      "get": {
        "tags": [
          "appointments"
        ],
        "summary": "Get Next Available Appointment Slot",
        "description": "Get the next available appointment slot.",
        "operationId": "get_next_available_appointment_slot_api_v1_appointments_slots_next_available_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextAvailableSlot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/settings": {
      "get": {
        "tags": [
          "appointments"
        ],
        "summary": "Get Appointment Settings",
        "description": "Get appointment booking settings.",
        "operationId": "get_appointment_settings_api_v1_appointments_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingSettingsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "appointments"
        ],
        "summary": "Update Appointment Settings",
        "description": "Update appointment booking settings (admin only).",
        "operationId": "update_appointment_settings_api_v1_appointments_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingSettingsUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingSettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/appointments/{appointment_id}/cancel": {
      "put": {
        "tags": [
          "appointments"
        ],
        "summary": "Cancel Appointment Alt",
        "description": "Cancel an appointment.",
        "operationId": "cancel_appointment_alt_api_v1_appointments__appointment_id__cancel_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/guest": {
      "post": {
        "tags": [
          "appointments"
        ],
        "summary": "Create Guest Appointment",
        "description": "Create appointment for guest user (no authentication required).",
        "operationId": "create_guest_appointment_api_v1_appointments_guest_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestBookingCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuestBookingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/guest/quick": {
      "post": {
        "tags": [
          "appointments"
        ],
        "summary": "Create Guest Quick Appointment",
        "description": "Create quick appointment for guest user (next available slot).",
        "operationId": "create_guest_quick_appointment_api_v1_appointments_guest_quick_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestQuickBookingCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuestBookingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments/guest/captcha-status": {
      "post": {
        "tags": [
          "appointments"
        ],
        "summary": "Check Guest Captcha Status",
        "description": "Check if CAPTCHA is required for a guest based on their booking attempts.",
        "operationId": "check_guest_captcha_status_api_v1_appointments_guest_captcha_status_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/create-intent": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create Payment Intent",
        "description": "Create a payment intent for a booking",
        "operationId": "create_payment_intent_api_v1_payments_create_intent_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIntentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/confirm": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Confirm Payment",
        "description": "Confirm payment and finalize booking",
        "operationId": "confirm_payment_api_v1_payments_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentConfirm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Confirm Payment Api V1 Payments Confirm Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/refund": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create Refund",
        "description": "Process a refund for a payment (admin/barber only)",
        "operationId": "create_refund_api_v1_payments_refund_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/gift-certificates": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "List Gift Certificates",
        "description": "List gift certificates (admin only)",
        "operationId": "list_gift_certificates_api_v1_payments_gift_certificates_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GiftCertificateResponse"
                  },
                  "type": "array",
                  "title": "Response List Gift Certificates Api V1 Payments Gift Certificates Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create Gift Certificate",
        "description": "Create a new gift certificate",
        "operationId": "create_gift_certificate_api_v1_payments_gift_certificates_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GiftCertificateCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftCertificateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/gift-certificates/validate": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Validate Gift Certificate",
        "description": "Validate a gift certificate code",
        "operationId": "validate_gift_certificate_api_v1_payments_gift_certificates_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GiftCertificateValidate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/history": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get Payment History",
        "description": "Get payment history with filtering and pagination",
        "operationId": "get_payment_history_api_v1_payments_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by user ID",
              "title": "User Id"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by barber ID",
              "title": "Barber Id"
            },
            "description": "Filter by barber ID"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date filter",
              "title": "Start Date"
            },
            "description": "Start date filter"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date filter",
              "title": "End Date"
            },
            "description": "End date filter"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Payment status filter",
              "title": "Status"
            },
            "description": "Payment status filter"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Items per page",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentHistoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/reports": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Generate Payment Report",
        "description": "Generate comprehensive payment reports (admin/barber only)",
        "operationId": "generate_payment_report_api_v1_payments_reports_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/payouts": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Process Payout",
        "description": "Process payout for a barber with optional retail commissions (admin only)",
        "operationId": "process_payout_api_v1_payments_payouts_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_retail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include retail commissions in payout",
              "default": false,
              "title": "Include Retail"
            },
            "description": "Include retail commissions in payout"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/payouts/enhanced": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Process Enhanced Payout",
        "description": "Process enhanced payout for a barber including retail commissions (admin only)",
        "operationId": "process_enhanced_payout_api_v1_payments_payouts_enhanced_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_retail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include retail commissions in payout",
              "default": true,
              "title": "Include Retail"
            },
            "description": "Include retail commissions in payout"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/stripe-connect/onboard": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create Stripe Connect Account",
        "description": "Create Stripe Connect account for barber onboarding",
        "operationId": "create_stripe_connect_account_api_v1_payments_stripe_connect_onboard_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConnectOnboardingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/stripe-connect/status": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get Stripe Connect Status",
        "description": "Get Stripe Connect account status for current user",
        "operationId": "get_stripe_connect_status_api_v1_payments_stripe_connect_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConnectStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/clients/": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Create Client",
        "description": "Create a new client",
        "operationId": "create_client_api_v1_clients__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "List Clients",
        "description": "List clients with pagination and filtering",
        "operationId": "list_clients_api_v1_clients__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "customer_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Type"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client",
        "description": "Get a specific client by ID",
        "operationId": "get_client_api_v1_clients__client_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Update Client",
        "description": "Update client information",
        "operationId": "update_client_api_v1_clients__client_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clients"
        ],
        "summary": "Delete Client",
        "description": "Delete a client (admin only)",
        "operationId": "delete_client_api_v1_clients__client_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/history": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client History",
        "description": "Get client appointment history and statistics",
        "operationId": "get_client_history_api_v1_clients__client_id__history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientHistory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/customer-type": {
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Update Customer Type",
        "description": "Update customer type (new, returning, vip, at_risk)",
        "operationId": "update_customer_type_api_v1_clients__client_id__customer_type_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          },
          {
            "name": "customer_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customer Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/search": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Search Clients",
        "description": "Quick search for clients (for autocomplete)",
        "operationId": "search_clients_api_v1_clients_search_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/analytics": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client Analytics",
        "description": "Get comprehensive analytics for a client",
        "operationId": "get_client_analytics_api_v1_clients__client_id__analytics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/recommendations": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client Recommendations",
        "description": "Get personalized recommendations for a client",
        "operationId": "get_client_recommendations_api_v1_clients__client_id__recommendations_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/communication-preferences": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client Communication Preferences",
        "description": "Get client communication preferences",
        "operationId": "get_client_communication_preferences_api_v1_clients__client_id__communication_preferences_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Update Client Communication Preferences",
        "description": "Update client communication preferences",
        "operationId": "update_client_communication_preferences_api_v1_clients__client_id__communication_preferences_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Preferences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/notes": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Add Client Note",
        "description": "Add a note to a client's record",
        "operationId": "add_client_note_api_v1_clients__client_id__notes_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Note Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/tags": {
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Update Client Tags",
        "description": "Update client tags",
        "operationId": "update_client_tags_api_v1_clients__client_id__tags_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Tag Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/dashboard/metrics": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client Dashboard Metrics",
        "description": "Get dashboard metrics for client management",
        "operationId": "get_client_dashboard_metrics_api_v1_clients_dashboard_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/clients/advanced-search": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Advanced Client Search",
        "description": "Advanced client search with multiple filters",
        "operationId": "advanced_client_search_api_v1_clients_advanced_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Query"
            }
          },
          {
            "name": "customer_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Type"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          },
          {
            "name": "min_visits",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Visits"
            }
          },
          {
            "name": "max_days_since_visit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Days Since Visit"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Current User Profile",
        "description": "Get current user's profile including timezone",
        "operationId": "get_current_user_profile_api_v1_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/timezone": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Timezone",
        "description": "Get current user's timezone setting",
        "operationId": "get_user_timezone_api_v1_users_timezone_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get User Timezone Api V1 Users Timezone Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User Timezone",
        "description": "Update current user's timezone",
        "operationId": "update_user_timezone_api_v1_users_timezone_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimezoneUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Update User Timezone Api V1 Users Timezone Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/profile": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User Profile",
        "description": "Update user profile (name, email, etc.)",
        "operationId": "update_user_profile_api_v1_users_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Profile Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get All Users",
        "description": "Get all users. Optionally filter by role.",
        "operationId": "get_all_users_api_v1_users__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  },
                  "title": "Response Get All Users Api V1 Users  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/role": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User Role",
        "description": "Update a user's role (admin only)",
        "operationId": "update_user_role_api_v1_users__user_id__role_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timezones": {
      "get": {
        "tags": [
          "timezones"
        ],
        "summary": "List All Timezones",
        "description": "List all available timezones with search and pagination.\nReturns timezone names, current UTC offsets, and display names.",
        "operationId": "list_all_timezones_api_v1_timezones_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search timezones by name",
              "title": "Search"
            },
            "description": "Search timezones by name"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Maximum number of results",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset for pagination",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimezoneListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timezones/common": {
      "get": {
        "tags": [
          "timezones"
        ],
        "summary": "List Common Timezones",
        "description": "List commonly used timezones for quick selection.\nIncludes major cities and regions.",
        "operationId": "list_common_timezones_api_v1_timezones_common_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimezoneListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/timezones/{timezone_name}": {
      "get": {
        "tags": [
          "timezones"
        ],
        "summary": "Get Timezone Details",
        "description": "Get details for a specific timezone.\nTimezone name should be URL-encoded if it contains slashes (e.g., America%2FNew_York).",
        "operationId": "get_timezone_details_api_v1_timezones__timezone_name__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "timezone_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Timezone Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimezoneInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/calendar/auth": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Calendar Auth",
        "description": "Initiate Google Calendar OAuth2 flow.",
        "operationId": "calendar_auth_api_v1_api_calendar_auth_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/calendar/callback": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Calendar Callback",
        "description": "Handle Google Calendar OAuth2 callback.",
        "operationId": "calendar_callback_api_v1_api_calendar_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/calendar/disconnect": {
      "delete": {
        "tags": [
          "calendar"
        ],
        "summary": "Disconnect Calendar",
        "description": "Disconnect Google Calendar integration.",
        "operationId": "disconnect_calendar_api_v1_api_calendar_disconnect_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/calendar/status": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Calendar Status",
        "description": "Check Google Calendar connection status.",
        "operationId": "calendar_status_api_v1_api_calendar_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarConnectionStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/calendar/list": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "List Calendars",
        "description": "List user's Google Calendars.",
        "operationId": "list_calendars_api_v1_api_calendar_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/calendar/select-calendar": {
      "post": {
        "tags": [
          "calendar"
        ],
        "summary": "Select Calendar",
        "description": "Select which calendar to use for syncing.",
        "operationId": "select_calendar_api_v1_api_calendar_select_calendar_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarSelectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/calendar/availability": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Check Availability",
        "description": "Check availability in Google Calendar for a time slot.",
        "operationId": "check_availability_api_v1_api_calendar_availability_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarAvailabilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/calendar/free-busy": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Get Free Busy",
        "description": "Get free/busy times from Google Calendar.",
        "operationId": "get_free_busy_api_v1_api_calendar_free_busy_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarFreeBusyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/calendar/sync-appointment/{appointment_id}": {
      "post": {
        "tags": [
          "calendar"
        ],
        "summary": "Sync Appointment To Google",
        "description": "Sync a specific appointment to Google Calendar.",
        "operationId": "sync_appointment_to_google_api_v1_api_calendar_sync_appointment__appointment_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/calendar/sync-appointments": {
      "post": {
        "tags": [
          "calendar"
        ],
        "summary": "Sync Appointments To Google",
        "description": "Sync all appointments in a date range to Google Calendar.",
        "operationId": "sync_appointments_to_google_api_v1_api_calendar_sync_appointments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarSyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarSyncResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/calendar/unsync-appointment/{appointment_id}": {
      "delete": {
        "tags": [
          "calendar"
        ],
        "summary": "Unsync Appointment From Google",
        "description": "Remove appointment sync from Google Calendar.",
        "operationId": "unsync_appointment_from_google_api_v1_api_calendar_unsync_appointment__appointment_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/calendar/validate": {
      "post": {
        "tags": [
          "calendar"
        ],
        "summary": "Validate Calendar Integration",
        "description": "Validate Google Calendar integration setup.",
        "operationId": "validate_calendar_integration_api_v1_api_calendar_validate_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarValidationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/calendar/sync-status": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Get Sync Status",
        "description": "Get calendar sync status for the current user.",
        "operationId": "get_sync_status_api_v1_api_calendar_sync_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/calendar/check-conflicts/{appointment_id}": {
      "post": {
        "tags": [
          "calendar"
        ],
        "summary": "Check Appointment Conflicts",
        "description": "Check for calendar conflicts for a specific appointment.",
        "operationId": "check_appointment_conflicts_api_v1_api_calendar_check_conflicts__appointment_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/calendar/bulk-sync": {
      "post": {
        "tags": [
          "calendar"
        ],
        "summary": "Bulk Sync Appointments",
        "description": "Bulk sync appointments with conflict checking.",
        "operationId": "bulk_sync_appointments_api_v1_api_calendar_bulk_sync_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarSyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/calendar/cleanup-orphaned": {
      "post": {
        "tags": [
          "calendar"
        ],
        "summary": "Cleanup Orphaned Events",
        "description": "Clean up orphaned Google Calendar events.",
        "operationId": "cleanup_orphaned_events_api_v1_api_calendar_cleanup_orphaned_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/services/categories": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Get Service Categories",
        "description": "Get all available service categories",
        "operationId": "get_service_categories_api_v1_services_categories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Service Categories Api V1 Services Categories Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/services/": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Get Services",
        "description": "Get all services with optional filtering",
        "operationId": "get_services_api_v1_services__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ServiceCategoryEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Barber Id"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": true,
              "title": "Is Active"
            }
          },
          {
            "name": "is_bookable_online",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Bookable Online"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceResponse"
                  },
                  "title": "Response Get Services Api V1 Services  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Create Service",
        "description": "Create a new service (admin or barber only)",
        "operationId": "create_service_api_v1_services__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Get Service",
        "description": "Get a specific service by ID",
        "operationId": "get_service_api_v1_services__service_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Barber Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "services"
        ],
        "summary": "Update Service",
        "description": "Update a service (admin or barber only)",
        "operationId": "update_service_api_v1_services__service_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "services"
        ],
        "summary": "Delete Service",
        "description": "Delete a service (admin only)",
        "operationId": "delete_service_api_v1_services__service_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}/pricing-rules": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Create Pricing Rule",
        "description": "Create a pricing rule for a service",
        "operationId": "create_pricing_rule_api_v1_services__service_id__pricing_rules_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServicePricingRuleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Pricing Rule Api V1 Services  Service Id  Pricing Rules Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Get Pricing Rules",
        "description": "Get all pricing rules for a service",
        "operationId": "get_pricing_rules_api_v1_services__service_id__pricing_rules_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}/pricing-rules/{rule_id}": {
      "delete": {
        "tags": [
          "services"
        ],
        "summary": "Delete Pricing Rule",
        "description": "Delete a pricing rule",
        "operationId": "delete_pricing_rule_api_v1_services__service_id__pricing_rules__rule_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}/booking-rules": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Create Booking Rule",
        "description": "Create a booking rule for a service",
        "operationId": "create_booking_rule_api_v1_services__service_id__booking_rules_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBookingRuleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Booking Rule Api V1 Services  Service Id  Booking Rules Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Get Booking Rules",
        "description": "Get all booking rules for a service",
        "operationId": "get_booking_rules_api_v1_services__service_id__booking_rules_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}/booking-rules/{rule_id}": {
      "delete": {
        "tags": [
          "services"
        ],
        "summary": "Delete Booking Rule",
        "description": "Delete a booking rule",
        "operationId": "delete_booking_rule_api_v1_services__service_id__booking_rules__rule_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}/barbers/{barber_id}": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Assign Service To Barber",
        "description": "Assign a service to a barber with optional custom pricing/duration",
        "operationId": "assign_service_to_barber_api_v1_services__service_id__barbers__barber_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "custom_price",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Price"
            }
          },
          {
            "name": "custom_duration",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "services"
        ],
        "summary": "Remove Service From Barber",
        "description": "Remove a service from a barber",
        "operationId": "remove_service_from_barber_api_v1_services__service_id__barbers__barber_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/barbers/{barber_id}": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Get Barber Services",
        "description": "Get all services offered by a specific barber",
        "operationId": "get_barber_services_api_v1_services_barbers__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "is_available",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": true,
              "title": "Is Available"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}/calculate-price": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Calculate Service Price",
        "description": "Calculate the dynamic price for a service based on various factors",
        "operationId": "calculate_service_price_api_v1_services__service_id__calculate_price_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Barber Id"
            }
          },
          {
            "name": "booking_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Booking Date"
            }
          },
          {
            "name": "booking_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Booking Time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/barbers/": {
      "get": {
        "tags": [
          "barbers"
        ],
        "summary": "Get All Barbers",
        "description": "Get all active barbers (public endpoint for booking)",
        "operationId": "get_all_barbers_api_v1_barbers__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/barbers/{barber_id}": {
      "get": {
        "tags": [
          "barbers"
        ],
        "summary": "Get Barber",
        "description": "Get a specific barber by ID",
        "operationId": "get_barber_api_v1_barbers__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/barber-availability/schedule/{barber_id}": {
      "get": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Get Barber Schedule",
        "description": "Get comprehensive schedule for a barber",
        "operationId": "get_barber_schedule_api_v1_barber_availability_schedule__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Start date for schedule",
              "title": "Start Date"
            },
            "description": "Start date for schedule"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "End date for schedule",
              "title": "End Date"
            },
            "description": "End date for schedule"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Timezone for display",
              "default": "UTC",
              "title": "Timezone"
            },
            "description": "Timezone for display"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Barber Schedule Api V1 Barber Availability Schedule  Barber Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/barber-availability/availability/{barber_id}": {
      "get": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Get Barber Availability",
        "description": "Get regular weekly availability for a barber",
        "operationId": "get_barber_availability_api_v1_barber_availability_availability__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "day_of_week",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 6,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Day of week (0=Monday, 6=Sunday)",
              "title": "Day Of Week"
            },
            "description": "Day of week (0=Monday, 6=Sunday)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BarberAvailabilityResponse"
                  },
                  "title": "Response Get Barber Availability Api V1 Barber Availability Availability  Barber Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Create Barber Availability",
        "description": "Create or update regular availability for a barber",
        "operationId": "create_barber_availability_api_v1_barber_availability_availability__barber_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarberAvailabilityCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarberAvailabilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/barber-availability/availability/{availability_id}": {
      "put": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Update Barber Availability",
        "description": "Update barber availability",
        "operationId": "update_barber_availability_api_v1_barber_availability_availability__availability_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "availability_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Availability Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarberAvailabilityUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarberAvailabilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Delete Barber Availability",
        "description": "Delete barber availability",
        "operationId": "delete_barber_availability_api_v1_barber_availability_availability__availability_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "availability_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Availability Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/barber-availability/time-off/{barber_id}": {
      "get": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Get Barber Time Off",
        "description": "Get time off requests for a barber",
        "operationId": "get_barber_time_off_api_v1_barber_availability_time_off__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter from this date",
              "title": "Start Date"
            },
            "description": "Filter from this date"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to this date",
              "title": "End Date"
            },
            "description": "Filter to this date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BarberTimeOffResponse"
                  },
                  "title": "Response Get Barber Time Off Api V1 Barber Availability Time Off  Barber Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Create Time Off Request",
        "description": "Create a time off request for a barber",
        "operationId": "create_time_off_request_api_v1_barber_availability_time_off__barber_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarberTimeOffCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarberTimeOffResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/barber-availability/special/{barber_id}": {
      "get": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Get Special Availability",
        "description": "Get special availability for a barber",
        "operationId": "get_special_availability_api_v1_barber_availability_special__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific date",
              "title": "Date"
            },
            "description": "Filter by specific date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BarberSpecialAvailabilityResponse"
                  },
                  "title": "Response Get Special Availability Api V1 Barber Availability Special  Barber Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Create Special Availability",
        "description": "Create special availability for a specific date",
        "operationId": "create_special_availability_api_v1_barber_availability_special__barber_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarberSpecialAvailabilityCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarberSpecialAvailabilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/barber-availability/check/{barber_id}": {
      "get": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Check Barber Availability",
        "description": "Check if a barber is available during a specific time slot",
        "operationId": "check_barber_availability_api_v1_barber_availability_check__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "check_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Date to check",
              "title": "Check Date"
            },
            "description": "Date to check"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "time",
              "description": "Start time to check",
              "title": "Start Time"
            },
            "description": "Start time to check"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "time",
              "description": "End time to check",
              "title": "End Time"
            },
            "description": "End time to check"
          },
          {
            "name": "exclude_appointment_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Appointment ID to exclude from check",
              "title": "Exclude Appointment Id"
            },
            "description": "Appointment ID to exclude from check"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/barber-availability/available-barbers": {
      "get": {
        "tags": [
          "barber-availability"
        ],
        "summary": "Get Available Barbers",
        "description": "Get all barbers available for a specific time slot",
        "operationId": "get_available_barbers_api_v1_barber_availability_available_barbers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "check_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Date to check",
              "title": "Check Date"
            },
            "description": "Date to check"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "time",
              "description": "Start time",
              "title": "Start Time"
            },
            "description": "Start time"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "time",
              "description": "End time",
              "title": "End Time"
            },
            "description": "End time"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Service ID to filter barbers",
              "title": "Service Id"
            },
            "description": "Service ID to filter barbers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarberAvailabilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/patterns": {
      "post": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Create Recurring Pattern",
        "description": "Create a new recurring appointment pattern",
        "operationId": "create_recurring_pattern_api_v1_recurring_appointments_patterns_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPatternCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPatternResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Get Recurring Patterns",
        "description": "Get all recurring patterns for the current user",
        "operationId": "get_recurring_patterns_api_v1_recurring_appointments_patterns_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringPatternResponse"
                  },
                  "title": "Response Get Recurring Patterns Api V1 Recurring Appointments Patterns Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/patterns/{pattern_id}": {
      "get": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Get Recurring Pattern",
        "description": "Get a specific recurring pattern",
        "operationId": "get_recurring_pattern_api_v1_recurring_appointments_patterns__pattern_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pattern Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPatternResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Update Recurring Pattern",
        "description": "Update a recurring pattern",
        "operationId": "update_recurring_pattern_api_v1_recurring_appointments_patterns__pattern_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pattern Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPatternUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPatternResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Delete Recurring Pattern",
        "description": "Delete (deactivate) a recurring pattern",
        "operationId": "delete_recurring_pattern_api_v1_recurring_appointments_patterns__pattern_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pattern Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/patterns/{pattern_id}/generate": {
      "post": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Generate Appointments",
        "description": "Generate appointments from a recurring pattern",
        "operationId": "generate_appointments_api_v1_recurring_appointments_patterns__pattern_id__generate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pattern Id"
            }
          },
          {
            "name": "preview_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Preview appointments without creating them",
              "default": false,
              "title": "Preview Only"
            },
            "description": "Preview appointments without creating them"
          },
          {
            "name": "max_appointments",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of appointments to generate",
              "default": 50,
              "title": "Max Appointments"
            },
            "description": "Maximum number of appointments to generate"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/upcoming": {
      "get": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Get Upcoming Appointments",
        "description": "Get upcoming appointments from all recurring patterns",
        "operationId": "get_upcoming_appointments_api_v1_recurring_appointments_upcoming_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_ahead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Number of days ahead to look",
              "default": 30,
              "title": "Days Ahead"
            },
            "description": "Number of days ahead to look"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/patterns/{pattern_id}/cancel": {
      "post": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Cancel Recurring Series",
        "description": "Cancel a recurring appointment series",
        "operationId": "cancel_recurring_series_api_v1_recurring_appointments_patterns__pattern_id__cancel_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pattern Id"
            }
          },
          {
            "name": "cancel_future_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Cancel only future appointments",
              "default": true,
              "title": "Cancel Future Only"
            },
            "description": "Cancel only future appointments"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/appointments/{appointment_id}/modify": {
      "put": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Modify Single Occurrence",
        "description": "Modify a single occurrence of a recurring appointment",
        "operationId": "modify_single_occurrence_api_v1_recurring_appointments_appointments__appointment_id__modify_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          },
          {
            "name": "new_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "New date for the appointment",
              "title": "New Date"
            },
            "description": "New date for the appointment"
          },
          {
            "name": "new_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "New time for the appointment",
              "title": "New Time"
            },
            "description": "New time for the appointment"
          },
          {
            "name": "new_barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "New barber for the appointment",
              "title": "New Barber Id"
            },
            "description": "New barber for the appointment"
          },
          {
            "name": "cancel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Cancel this single occurrence",
              "default": false,
              "title": "Cancel"
            },
            "description": "Cancel this single occurrence"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/patterns/{pattern_id}/preview": {
      "get": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Preview Pattern Occurrences",
        "description": "Preview upcoming occurrences for a recurring pattern",
        "operationId": "preview_pattern_occurrences_api_v1_recurring_appointments_patterns__pattern_id__preview_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pattern Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of occurrences to preview",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of occurrences to preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/patterns/{pattern_id}/generate-enhanced": {
      "post": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Generate Appointments Enhanced",
        "description": "Generate appointments using enhanced service with conflict detection and resolution",
        "operationId": "generate_appointments_enhanced_api_v1_recurring_appointments_patterns__pattern_id__generate_enhanced_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Pattern Id"
            }
          },
          {
            "name": "preview_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Preview appointments without creating them",
              "default": false,
              "title": "Preview Only"
            },
            "description": "Preview appointments without creating them"
          },
          {
            "name": "max_appointments",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of appointments to generate",
              "default": 50,
              "title": "Max Appointments"
            },
            "description": "Maximum number of appointments to generate"
          },
          {
            "name": "auto_resolve_conflicts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Automatically resolve conflicts where possible",
              "default": true,
              "title": "Auto Resolve Conflicts"
            },
            "description": "Automatically resolve conflicts where possible"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/series": {
      "post": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Create Recurring Series",
        "description": "Create a new recurring appointment series",
        "operationId": "create_recurring_series_api_v1_recurring_appointments_series_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringSeriesCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringSeriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Get Recurring Series",
        "description": "Get all recurring series for the current user",
        "operationId": "get_recurring_series_api_v1_recurring_appointments_series_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "series_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by series status",
              "title": "Series Status"
            },
            "description": "Filter by series status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringSeriesResponse"
                  },
                  "title": "Response Get Recurring Series Api V1 Recurring Appointments Series Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/series/{series_id}": {
      "get": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Get Recurring Series Details",
        "description": "Get details of a specific recurring series",
        "operationId": "get_recurring_series_details_api_v1_recurring_appointments_series__series_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "series_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Series Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringSeriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Update Recurring Series",
        "description": "Update a recurring series",
        "operationId": "update_recurring_series_api_v1_recurring_appointments_series__series_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "series_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Series Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringSeriesUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringSeriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/appointments/manage": {
      "post": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Manage Appointment Series",
        "description": "Manage individual appointments or entire series (reschedule, cancel, etc.)",
        "operationId": "manage_appointment_series_api_v1_recurring_appointments_appointments_manage_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentSeriesManagement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/recurring-appointments/appointments/{appointment_id}/series-info": {
      "get": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Get Appointment Series Info",
        "description": "Get series information for a specific appointment",
        "operationId": "get_appointment_series_info_api_v1_recurring_appointments_appointments__appointment_id__series_info_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/conflicts/detect": {
      "post": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Detect Appointment Conflicts",
        "description": "Detect conflicts for a proposed appointment slot",
        "operationId": "detect_appointment_conflicts_api_v1_recurring_appointments_conflicts_detect_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_detect_appointment_conflicts_api_v1_recurring_appointments_conflicts_detect_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/recurring-appointments/blackouts": {
      "post": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Create Blackout Date",
        "description": "Create a new blackout date",
        "operationId": "create_blackout_date_api_v1_recurring_appointments_blackouts_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlackoutDateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlackoutDateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Get Blackout Dates",
        "description": "Get blackout dates based on criteria",
        "operationId": "get_blackout_dates_api_v1_recurring_appointments_blackouts_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Barber Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "include_recurring",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Recurring"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlackoutDateResponse"
                  },
                  "title": "Response Get Blackout Dates Api V1 Recurring Appointments Blackouts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/blackouts/{blackout_id}": {
      "put": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Update Blackout Date",
        "description": "Update a blackout date",
        "operationId": "update_blackout_date_api_v1_recurring_appointments_blackouts__blackout_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "blackout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Blackout Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlackoutDateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlackoutDateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Delete Blackout Date",
        "description": "Delete (deactivate) a blackout date",
        "operationId": "delete_blackout_date_api_v1_recurring_appointments_blackouts__blackout_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "blackout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Blackout Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/blackouts/{blackout_id}/impact": {
      "get": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Get Blackout Impact",
        "description": "Get impact report for a blackout date",
        "operationId": "get_blackout_impact_api_v1_recurring_appointments_blackouts__blackout_id__impact_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "blackout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Blackout Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring-appointments/blackouts/check": {
      "post": {
        "tags": [
          "recurring-appointments"
        ],
        "summary": "Check Blackout Conflicts",
        "description": "Check if a date/time conflicts with blackout dates",
        "operationId": "check_blackout_conflicts_api_v1_recurring_appointments_blackouts_check_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_check_blackout_conflicts_api_v1_recurring_appointments_blackouts_check_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/stripe": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Handle Stripe Webhook",
        "description": "Handle Stripe webhook events",
        "operationId": "handle_stripe_webhook_api_v1_webhooks_stripe_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/sms": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Handle Sms Webhook",
        "description": "Handle incoming SMS webhooks from Twilio\n\nThis endpoint processes two-way SMS communication for appointment management.\nTwilio sends form-encoded data with From, Body, and other parameters.",
        "operationId": "handle_sms_webhook_api_v1_webhooks_sms_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_handle_sms_webhook_api_v1_webhooks_sms_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/sms/status": {
      "post": {
        "tags": [
          "sms_webhooks"
        ],
        "summary": "Handle Sms Status",
        "description": "Handle SMS delivery status updates from Twilio\nTracks when messages are delivered, failed, etc.",
        "operationId": "handle_sms_status_api_v1_webhooks_sms_status_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/health": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Webhook Health",
        "description": "Health check for webhook endpoint",
        "operationId": "webhook_health_api_v1_webhooks_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/dashboard": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Dashboard Analytics",
        "description": "Get comprehensive dashboard analytics\n\nReturns key metrics, trends, and insights for the dashboard",
        "operationId": "get_dashboard_analytics_api_v1_analytics_dashboard_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to filter analytics (admin only)",
              "title": "User Id"
            },
            "description": "User ID to filter analytics (admin only)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics range",
              "title": "Start Date"
            },
            "description": "Start date for analytics range"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics range",
              "title": "End Date"
            },
            "description": "End date for analytics range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Dashboard Analytics Api V1 Analytics Dashboard Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/revenue": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Revenue Analytics",
        "description": "Get detailed revenue analytics\n\nReturns revenue trends, transaction counts, and average values",
        "operationId": "get_revenue_analytics_api_v1_analytics_revenue_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Group by period: day, week, month, year",
              "default": "month",
              "title": "Group By"
            },
            "description": "Group by period: day, week, month, year"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to filter analytics (admin only)",
              "title": "User Id"
            },
            "description": "User ID to filter analytics (admin only)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics range",
              "title": "Start Date"
            },
            "description": "Start date for analytics range"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics range",
              "title": "End Date"
            },
            "description": "End date for analytics range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Revenue Analytics Api V1 Analytics Revenue Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/appointments": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Appointment Analytics",
        "description": "Get appointment analytics including completion rates, no-shows, and service breakdown",
        "operationId": "get_appointment_analytics_api_v1_analytics_appointments_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to filter analytics (admin only)",
              "title": "User Id"
            },
            "description": "User ID to filter analytics (admin only)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics range",
              "title": "Start Date"
            },
            "description": "Start date for analytics range"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics range",
              "title": "End Date"
            },
            "description": "End date for analytics range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Appointment Analytics Api V1 Analytics Appointments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/appointment-patterns": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Appointment Patterns",
        "description": "Get detailed appointment booking patterns and no-show analysis",
        "operationId": "get_appointment_patterns_api_v1_analytics_appointment_patterns_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to filter analytics (admin only)",
              "title": "User Id"
            },
            "description": "User ID to filter analytics (admin only)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics range",
              "title": "Start Date"
            },
            "description": "Start date for analytics range"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics range",
              "title": "End Date"
            },
            "description": "End date for analytics range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Appointment Patterns Api V1 Analytics Appointment Patterns Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/client-retention": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Client Retention Analytics",
        "description": "Get client retention metrics and segmentation",
        "operationId": "get_client_retention_analytics_api_v1_analytics_client_retention_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to filter analytics (admin only)",
              "title": "User Id"
            },
            "description": "User ID to filter analytics (admin only)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics range",
              "title": "Start Date"
            },
            "description": "Start date for analytics range"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics range",
              "title": "End Date"
            },
            "description": "End date for analytics range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Client Retention Analytics Api V1 Analytics Client Retention Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/client-lifetime-value": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Client Lifetime Value Analytics",
        "description": "Get comprehensive client lifetime value analytics and segmentation",
        "operationId": "get_client_lifetime_value_analytics_api_v1_analytics_client_lifetime_value_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to filter analytics (admin only)",
              "title": "User Id"
            },
            "description": "User ID to filter analytics (admin only)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics range",
              "title": "Start Date"
            },
            "description": "Start date for analytics range"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics range",
              "title": "End Date"
            },
            "description": "End date for analytics range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Client Lifetime Value Analytics Api V1 Analytics Client Lifetime Value Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/barber-performance": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Barber Performance Metrics",
        "description": "Get comprehensive user performance metrics (works for barbers and other users)",
        "operationId": "get_barber_performance_metrics_api_v1_analytics_barber_performance_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to analyze (defaults to current user)",
              "title": "User Id"
            },
            "description": "User ID to analyze (defaults to current user)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics range",
              "title": "Start Date"
            },
            "description": "Start date for analytics range"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics range",
              "title": "End Date"
            },
            "description": "End date for analytics range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Barber Performance Metrics Api V1 Analytics Barber Performance Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/six-figure-barber": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Six Figure Barber Metrics",
        "description": "Get Six Figure Barber methodology metrics and recommendations",
        "operationId": "get_six_figure_barber_metrics_api_v1_analytics_six_figure_barber_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_annual_income",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Target annual income goal",
              "default": 100000.0,
              "title": "Target Annual Income"
            },
            "description": "Target annual income goal"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to analyze (defaults to current user)",
              "title": "User Id"
            },
            "description": "User ID to analyze (defaults to current user)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Six Figure Barber Metrics Api V1 Analytics Six Figure Barber Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/comparative": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Comparative Analytics",
        "description": "Get comparative analytics between current and previous periods",
        "operationId": "get_comparative_analytics_api_v1_analytics_comparative_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "comparison_period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Comparison period: previous_month, previous_quarter, previous_year",
              "default": "previous_month",
              "title": "Comparison Period"
            },
            "description": "Comparison period: previous_month, previous_quarter, previous_year"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to filter analytics (admin only)",
              "title": "User Id"
            },
            "description": "User ID to filter analytics (admin only)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Comparative Analytics Api V1 Analytics Comparative Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/export": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Export Analytics Data",
        "description": "Export analytics data in various formats",
        "operationId": "export_analytics_data_api_v1_analytics_export_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "export_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Type of data to export: dashboard, revenue, appointments, clients",
              "default": "dashboard",
              "title": "Export Type"
            },
            "description": "Type of data to export: dashboard, revenue, appointments, clients"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Export format: json, csv",
              "default": "json",
              "title": "Format"
            },
            "description": "Export format: json, csv"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for export range",
              "title": "Start Date"
            },
            "description": "Start date for export range"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for export range",
              "title": "End Date"
            },
            "description": "End date for export range"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to filter analytics (admin only)",
              "title": "User Id"
            },
            "description": "User ID to filter analytics (admin only)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Export Analytics Data Api V1 Analytics Export Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/insights": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Business Insights",
        "description": "Get AI-powered business insights and recommendations",
        "operationId": "get_business_insights_api_v1_analytics_insights_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to filter analytics (admin only)",
              "title": "User Id"
            },
            "description": "User ID to filter analytics (admin only)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics range",
              "title": "Start Date"
            },
            "description": "Start date for analytics range"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics range",
              "title": "End Date"
            },
            "description": "End date for analytics range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Business Insights Api V1 Analytics Insights Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-rules/": {
      "get": {
        "tags": [
          "booking-rules"
        ],
        "summary": "Get Booking Rules",
        "description": "Get all booking rules (admin only)",
        "operationId": "get_booking_rules_api_v1_booking_rules__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rule_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by rule type",
              "title": "Rule Type"
            },
            "description": "Filter by rule type"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingRuleResponse"
                  },
                  "title": "Response Get Booking Rules Api V1 Booking Rules  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "booking-rules"
        ],
        "summary": "Create Booking Rule",
        "description": "Create a new booking rule (admin only)",
        "operationId": "create_booking_rule_api_v1_booking_rules__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRuleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-rules/{rule_id}": {
      "get": {
        "tags": [
          "booking-rules"
        ],
        "summary": "Get Booking Rule",
        "description": "Get a specific booking rule (admin only)",
        "operationId": "get_booking_rule_api_v1_booking_rules__rule_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "booking-rules"
        ],
        "summary": "Update Booking Rule",
        "description": "Update a booking rule (admin only)",
        "operationId": "update_booking_rule_api_v1_booking_rules__rule_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rule Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRuleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "booking-rules"
        ],
        "summary": "Delete Booking Rule",
        "description": "Delete (deactivate) a booking rule (admin only)",
        "operationId": "delete_booking_rule_api_v1_booking_rules__rule_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-rules/validate": {
      "post": {
        "tags": [
          "booking-rules"
        ],
        "summary": "Validate Booking",
        "description": "Validate a booking against all applicable rules",
        "operationId": "validate_booking_api_v1_booking_rules_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentValidationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentValidationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/booking-rules/services/{service_id}/rules": {
      "get": {
        "tags": [
          "booking-rules"
        ],
        "summary": "Get Service Booking Rules",
        "description": "Get booking rules for a specific service",
        "operationId": "get_service_booking_rules_api_v1_booking_rules_services__service_id__rules_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/schemas__ServiceBookingRuleResponse__2"
                  },
                  "title": "Response Get Service Booking Rules Api V1 Booking Rules Services  Service Id  Rules Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "booking-rules"
        ],
        "summary": "Create Service Booking Rule",
        "description": "Create a booking rule for a specific service (admin only)",
        "operationId": "create_service_booking_rule_api_v1_booking_rules_services__service_id__rules_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceBookingRuleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas__ServiceBookingRuleResponse__2"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-rules/rule-types": {
      "get": {
        "tags": [
          "booking-rules"
        ],
        "summary": "Get Rule Types",
        "description": "Get available rule types and their descriptions",
        "operationId": "get_rule_types_api_v1_booking_rules_rule_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Rule Types Api V1 Booking Rules Rule Types Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/preferences": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Preferences",
        "description": "Get current user's notification preferences",
        "operationId": "get_notification_preferences_api_v1_notifications_preferences_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferenceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "notifications"
        ],
        "summary": "Update Notification Preferences",
        "description": "Update current user's notification preferences",
        "operationId": "update_notification_preferences_api_v1_notifications_preferences_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPreferenceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/templates": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Templates",
        "description": "Get available notification templates",
        "operationId": "get_notification_templates_api_v1_notifications_templates_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by template type (email/sms)",
              "title": "Template Type"
            },
            "description": "Filter by template type (email/sms)"
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return only active templates",
              "default": true,
              "title": "Active Only"
            },
            "description": "Return only active templates"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationTemplateResponse"
                  },
                  "title": "Response Get Notification Templates Api V1 Notifications Templates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/history": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification History",
        "description": "Get notification history for current user",
        "operationId": "get_notification_history_api_v1_notifications_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "description": "Maximum number of notifications to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of notifications to return"
          },
          {
            "name": "appointment_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by appointment ID",
              "title": "Appointment Id"
            },
            "description": "Filter by appointment ID"
          },
          {
            "name": "notification_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by type (email/sms)",
              "title": "Notification Type"
            },
            "description": "Filter by type (email/sms)"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status"
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHistoryResponse"
                  },
                  "title": "Response Get Notification History Api V1 Notifications History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/stats": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Stats",
        "description": "Get notification statistics",
        "operationId": "get_notification_stats_api_v1_notifications_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 90,
              "minimum": 1,
              "description": "Number of days to include in stats",
              "default": 7,
              "title": "Days"
            },
            "description": "Number of days to include in stats"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/test-email": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Test Email",
        "description": "Send a test email notification",
        "operationId": "send_test_email_api_v1_notifications_test_email_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/test-sms": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Send Test Sms",
        "description": "Send a test SMS notification",
        "operationId": "send_test_sms_api_v1_notifications_test_sms_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/process-queue": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Process Notification Queue",
        "description": "Manually process the notification queue (admin only)",
        "operationId": "process_notification_queue_api_v1_notifications_process_queue_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "batch_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Number of notifications to process",
              "default": 50,
              "title": "Batch Size"
            },
            "description": "Number of notifications to process"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/history/{notification_id}": {
      "delete": {
        "tags": [
          "notifications"
        ],
        "summary": "Cancel Notification",
        "description": "Cancel a pending notification",
        "operationId": "cancel_notification_api_v1_notifications_history__notification_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/imports/upload": {
      "post": {
        "tags": [
          "imports"
        ],
        "summary": "Upload Import File",
        "description": "Upload a file for data import.\n\nSupported formats:\n- CSV files with proper headers\n- JSON files with structured data\n- Booksy export files\n- Square export files\n- Acuity export files\n- MindBody export files\n\nReturns an import_id for tracking progress.",
        "operationId": "upload_import_file_api_v1_imports_upload_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ImportSourceType",
              "default": "csv"
            }
          },
          {
            "name": "import_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of data to import: clients, appointments, services",
              "title": "Import Type"
            },
            "description": "Type of data to import: clients, appointments, services"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_import_file_api_v1_imports_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/imports/{import_id}/status": {
      "get": {
        "tags": [
          "imports"
        ],
        "summary": "Get Import Status",
        "description": "Get the current status and progress of an import job.\n\nReturns detailed progress information including:\n- Overall status (uploaded, validating, validated, importing, completed, failed)\n- Progress percentage\n- Record counts (total, processed, successful, failed)\n- Error and warning messages",
        "operationId": "get_import_status_api_v1_imports__import_id__status_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Import Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/imports/{import_id}/preview": {
      "post": {
        "tags": [
          "imports"
        ],
        "summary": "Preview Import Data",
        "description": "Preview the data that will be imported before executing the import.\n\nShows:\n- Sample records from the file\n- Field mapping validation\n- Data validation results\n- Potential conflicts or duplicates\n- Import recommendations",
        "operationId": "preview_import_data_api_v1_imports__import_id__preview_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Import Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportPreviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportPreviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/imports/{import_id}/execute": {
      "post": {
        "tags": [
          "imports"
        ],
        "summary": "Execute Import",
        "description": "Start the actual import process using the validated data and field mappings.\n\nOptions:\n- Skip duplicates or update existing records\n- Validation level (strict, moderate, lenient)\n- Rollback strategy if errors occur\n- Notification preferences",
        "operationId": "execute_import_api_v1_imports__import_id__execute_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Import Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExecutionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExecutionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/imports/{import_id}/rollback": {
      "delete": {
        "tags": [
          "imports"
        ],
        "summary": "Rollback Import",
        "description": "Rollback a completed import by removing or reverting imported data.\n\nOptions:\n- Soft delete (mark as inactive)\n- Hard delete (permanent removal)\n- Selective rollback (specific record types or date ranges)",
        "operationId": "rollback_import_api_v1_imports__import_id__rollback_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Import Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportRollbackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportRollbackResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/imports/history": {
      "get": {
        "tags": [
          "imports"
        ],
        "summary": "Get Import History",
        "description": "Get paginated history of import jobs with filtering options.\n\nReturns summary information for each import including:\n- Basic job details\n- Status and progress\n- Record counts\n- Duration and timing",
        "operationId": "get_import_history_api_v1_imports_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Records per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Records per page"
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status Filter"
            },
            "description": "Filter by status"
          },
          {
            "name": "import_type_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by import type",
              "title": "Import Type Filter"
            },
            "description": "Filter by import type"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter imports from this date",
              "title": "Date From"
            },
            "description": "Filter imports from this date"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter imports to this date",
              "title": "Date To"
            },
            "description": "Filter imports to this date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportHistoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sms/conversations": {
      "get": {
        "tags": [
          "sms_conversations"
        ],
        "summary": "Get Sms Conversations",
        "description": "Get SMS conversation threads - shows all ongoing text message conversations with customers\nEach conversation represents a text message thread with a real customer phone number",
        "operationId": "get_sms_conversations_api_v1_sms_conversations_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "description": "Maximum number of conversations to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of conversations to return"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by conversation status",
              "title": "Status"
            },
            "description": "Filter by conversation status"
          },
          {
            "name": "unread_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only show conversations with unread messages",
              "default": false,
              "title": "Unread Only"
            },
            "description": "Only show conversations with unread messages"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by phone number or customer name",
              "title": "Search"
            },
            "description": "Search by phone number or customer name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SMSConversationResponse"
                  },
                  "title": "Response Get Sms Conversations Api V1 Sms Conversations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sms_conversations"
        ],
        "summary": "Create Sms Conversation",
        "description": "Start a new SMS conversation with a customer phone number\nUse this to initiate text messaging with a customer's actual phone number",
        "operationId": "create_sms_conversation_api_v1_sms_conversations_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMSConversationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMSConversationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sms/conversations/{conversation_id}": {
      "get": {
        "tags": [
          "sms_conversations"
        ],
        "summary": "Get Sms Conversation",
        "description": "Get a specific SMS conversation thread with all message details",
        "operationId": "get_sms_conversation_api_v1_sms_conversations__conversation_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMSConversationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sms_conversations"
        ],
        "summary": "Update Sms Conversation",
        "description": "Update SMS conversation metadata (status, notes, assigned barber, etc.)",
        "operationId": "update_sms_conversation_api_v1_sms_conversations__conversation_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMSConversationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMSConversationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sms_conversations"
        ],
        "summary": "Archive Sms Conversation",
        "description": "Archive an SMS conversation (sets status to archived)",
        "operationId": "archive_sms_conversation_api_v1_sms_conversations__conversation_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sms/conversations/{conversation_id}/messages": {
      "get": {
        "tags": [
          "sms_conversations"
        ],
        "summary": "Get Conversation Messages",
        "description": "Get all messages in an SMS conversation thread\nShows the complete text message history with a customer",
        "operationId": "get_conversation_messages_api_v1_sms_conversations__conversation_id__messages_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Conversation Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "description": "Maximum number of messages to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of messages to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of messages to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of messages to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SMSMessageResponse"
                  },
                  "title": "Response Get Conversation Messages Api V1 Sms Conversations  Conversation Id  Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sms_conversations"
        ],
        "summary": "Send Sms Message",
        "description": "Send an SMS message to a customer - sends a REAL text message to their phone\nThis will deliver an actual SMS to the customer's mobile phone",
        "operationId": "send_sms_message_api_v1_sms_conversations__conversation_id__messages_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMSMessageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMSMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sms/stats": {
      "get": {
        "tags": [
          "sms_conversations"
        ],
        "summary": "Get Sms Stats",
        "description": "Get SMS conversation and messaging statistics",
        "operationId": "get_sms_stats_api_v1_sms_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/sms/incoming": {
      "post": {
        "tags": [
          "sms_webhooks"
        ],
        "summary": "Handle Incoming Sms",
        "description": "Handle incoming SMS messages from Twilio webhook\nThis receives REAL customer text messages sent to the business phone number",
        "operationId": "handle_incoming_sms_api_v1_webhooks_sms_incoming_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/sms/test": {
      "get": {
        "tags": [
          "sms_webhooks"
        ],
        "summary": "Test Webhook Endpoint",
        "description": "Test endpoint to verify webhook configuration",
        "operationId": "test_webhook_endpoint_api_v1_webhooks_sms_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/webhooks": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "List Webhooks",
        "description": "List all webhook endpoints with optional filtering",
        "operationId": "list_webhooks_api_v1_api_v1_webhooks_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Type"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEndpointResponse"
                  },
                  "title": "Response List Webhooks Api V1 Api V1 Webhooks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Create Webhook",
        "description": "Create a new webhook endpoint",
        "operationId": "create_webhook_api_v1_api_v1_webhooks_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEndpointCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEndpointResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/webhooks/events": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Available Events",
        "description": "Get list of available webhook events",
        "operationId": "get_available_events_api_v1_api_v1_webhooks_events_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Available Events Api V1 Api V1 Webhooks Events Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/api/v1/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhook",
        "description": "Get webhook endpoint details",
        "operationId": "get_webhook_api_v1_api_v1_webhooks__webhook_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEndpointResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "webhooks"
        ],
        "summary": "Update Webhook",
        "description": "Update webhook endpoint configuration",
        "operationId": "update_webhook_api_v1_api_v1_webhooks__webhook_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEndpointUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEndpointResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "webhooks"
        ],
        "summary": "Delete Webhook",
        "description": "Delete a webhook endpoint",
        "operationId": "delete_webhook_api_v1_api_v1_webhooks__webhook_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/webhooks/{webhook_id}/logs": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhook Logs",
        "description": "Get webhook delivery logs",
        "operationId": "get_webhook_logs_api_v1_api_v1_webhooks__webhook_id__logs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WebhookStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Type"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookLogResponse"
                  },
                  "title": "Response Get Webhook Logs Api V1 Api V1 Webhooks  Webhook Id  Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/webhooks/{webhook_id}/test": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Test Webhook",
        "description": "Send a test webhook with sample data",
        "operationId": "test_webhook_api_v1_api_v1_webhooks__webhook_id__test_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookLogResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/webhooks/{webhook_id}/logs/{log_id}/retry": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Retry Webhook Delivery",
        "description": "Retry a failed webhook delivery",
        "operationId": "retry_webhook_delivery_api_v1_api_v1_webhooks__webhook_id__logs__log_id__retry_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Id"
            }
          },
          {
            "name": "log_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Log Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookLogResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/webhooks/stats/summary": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhook Statistics",
        "description": "Get webhook statistics summary",
        "operationId": "get_webhook_statistics_api_v1_api_v1_webhooks_stats_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/enterprise/dashboard": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Enterprise Dashboard",
        "description": "Get main enterprise dashboard data.\n\nReturns aggregated metrics across all locations including:\n- Total revenue\n- Active locations count\n- Total barbers\n- Average occupancy\n- Growth trends",
        "operationId": "get_enterprise_dashboard_api_v1_enterprise_dashboard_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/locations": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get All Locations",
        "description": "List all locations with summary information.\n\nReturns list of locations with:\n- Basic location info\n- Active barber count\n- Current month revenue\n- Average rating",
        "operationId": "get_all_locations_api_v1_enterprise_locations_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Inactive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Location",
        "description": "Create a new location (super admin only).\n\nCreates a new barbershop location with:\n- Basic shop information\n- Initial configuration\n- Owner assignment",
        "operationId": "create_location_api_v1_enterprise_locations_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/performance-matrix": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Performance Matrix",
        "description": "Get location comparison data in matrix format.\n\nCompares locations across multiple metrics:\n- Revenue\n- Client count\n- Average ticket\n- Retention rate\n- Chair occupancy",
        "operationId": "get_performance_matrix_api_v1_enterprise_performance_matrix_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "metrics",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metrics"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/revenue": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Aggregated Revenue",
        "description": "Get aggregated revenue analytics across all locations.\n\nReturns revenue data grouped by specified period:\n- Total revenue\n- Revenue by location\n- Growth trends\n- Top performing locations",
        "operationId": "get_aggregated_revenue_api_v1_enterprise_revenue_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "group_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(day|week|month|location)$",
              "default": "day",
              "title": "Group By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/occupancy": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Chair Utilization",
        "description": "Get chair utilization analytics across locations.\n\nReturns occupancy metrics:\n- Average occupancy rate\n- Peak hours analysis\n- Underutilized time slots\n- Occupancy by day of week",
        "operationId": "get_chair_utilization_api_v1_enterprise_occupancy_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/compensation": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Compensation Analytics",
        "description": "Get analytics by compensation model.\n\nCompares performance across different compensation models:\n- Average revenue per barber\n- Client retention by model\n- Productivity metrics\n- Model effectiveness",
        "operationId": "get_compensation_analytics_api_v1_enterprise_compensation_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(commission|booth_rental|hybrid)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Type"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/locations/{location_id}": {
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Location",
        "description": "Update location details.\n\nUpdates barbershop information:\n- Shop details\n- Configuration\n- Status",
        "operationId": "update_location_api_v1_enterprise_locations__location_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/locations/{location_id}/dashboard": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Location Dashboard",
        "description": "Get dashboard data for a single location.\n\nReturns detailed analytics for specific location:\n- Revenue metrics\n- Barber performance\n- Client analytics\n- Appointment trends",
        "operationId": "get_location_dashboard_api_v1_enterprise_locations__location_id__dashboard_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/locations/{location_id}/barbers": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Location Barbers",
        "description": "Get all barbers for a specific location.\n\nReturns list of barbers with:\n- Profile information\n- Performance metrics\n- Availability status",
        "operationId": "get_location_barbers_api_v1_enterprise_locations__location_id__barbers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          },
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Inactive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/reports/executive-summary": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Executive Summary",
        "description": "Get executive summary report (super admin only).\n\nHigh-level summary including:\n- Key performance indicators\n- Growth metrics\n- Risk indicators\n- Strategic recommendations",
        "operationId": "get_executive_summary_api_v1_enterprise_reports_executive_summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/campaigns": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Create Campaign",
        "description": "Create a new marketing campaign",
        "operationId": "create_campaign_api_v1_marketing_campaigns_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketingCampaignCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingCampaignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "List Campaigns",
        "description": "List all marketing campaigns with pagination and filters",
        "operationId": "list_campaigns_api_v1_marketing_campaigns_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of items to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of items to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of items to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Number of items to return"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by campaign status",
              "title": "Status"
            },
            "description": "Filter by campaign status"
          },
          {
            "name": "campaign_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by campaign type (email/sms)",
              "title": "Campaign Type"
            },
            "description": "Filter by campaign type (email/sms)"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in campaign name",
              "title": "Search"
            },
            "description": "Search in campaign name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingCampaignListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/campaigns/{campaign_id}": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "Get Campaign",
        "description": "Get details of a specific campaign",
        "operationId": "get_campaign_api_v1_marketing_campaigns__campaign_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingCampaignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "marketing"
        ],
        "summary": "Update Campaign",
        "description": "Update a marketing campaign",
        "operationId": "update_campaign_api_v1_marketing_campaigns__campaign_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketingCampaignUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingCampaignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "marketing"
        ],
        "summary": "Delete Campaign",
        "description": "Delete a marketing campaign",
        "operationId": "delete_campaign_api_v1_marketing_campaigns__campaign_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/campaigns/{campaign_id}/send": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Send Campaign",
        "description": "Send a marketing campaign with rate limiting",
        "operationId": "send_campaign_api_v1_marketing_campaigns__campaign_id__send_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/templates": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Create Template",
        "description": "Create a new marketing template",
        "operationId": "create_template_api_v1_marketing_templates_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketingTemplateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "List Templates",
        "description": "List all marketing templates",
        "operationId": "list_templates_api_v1_marketing_templates_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by template type (email/sms)",
              "title": "Template Type"
            },
            "description": "Filter by template type (email/sms)"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category"
            },
            "description": "Filter by category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarketingTemplateResponse"
                  },
                  "title": "Response List Templates Api V1 Marketing Templates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/templates/{template_id}": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "Get Template",
        "description": "Get details of a specific template",
        "operationId": "get_template_api_v1_marketing_templates__template_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "marketing"
        ],
        "summary": "Update Template",
        "description": "Update a marketing template",
        "operationId": "update_template_api_v1_marketing_templates__template_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketingTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/templates/{template_id}/preview": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Preview Template",
        "description": "Preview a template with sample data",
        "operationId": "preview_template_api_v1_marketing_templates__template_id__preview_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Sample Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/contacts": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "List Contacts",
        "description": "List contacts with filtering and pagination",
        "operationId": "list_contacts_api_v1_marketing_contacts_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of items to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of items to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of items to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Number of items to return"
          },
          {
            "name": "list_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by contact list",
              "title": "List Id"
            },
            "description": "Filter by contact list"
          },
          {
            "name": "segment_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by segment",
              "title": "Segment Id"
            },
            "description": "Filter by segment"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in name, email, or phone",
              "title": "Search"
            },
            "description": "Search in name, email, or phone"
          },
          {
            "name": "subscribed_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show only subscribed contacts",
              "default": true,
              "title": "Subscribed Only"
            },
            "description": "Show only subscribed contacts"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Contacts Api V1 Marketing Contacts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/contacts/import": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Import Contacts",
        "description": "Import contacts from CSV file",
        "operationId": "import_contacts_api_v1_marketing_contacts_import_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "list_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Add imported contacts to this list",
              "title": "List Id"
            },
            "description": "Add imported contacts to this list"
          },
          {
            "name": "update_existing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Update existing contacts",
              "default": false,
              "title": "Update Existing"
            },
            "description": "Update existing contacts"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_contacts_api_v1_marketing_contacts_import_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactImportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/contacts/export": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Export Contacts",
        "description": "Export contacts to CSV",
        "operationId": "export_contacts_api_v1_marketing_contacts_export_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactExportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/marketing/contacts/bulk-action": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Bulk Contact Action",
        "description": "Perform bulk actions on contacts",
        "operationId": "bulk_contact_action_api_v1_marketing_contacts_bulk_action_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactBulkActionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/marketing/lists": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "List Contact Lists",
        "description": "List all contact lists",
        "operationId": "list_contact_lists_api_v1_marketing_lists_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContactListResponse"
                  },
                  "type": "array",
                  "title": "Response List Contact Lists Api V1 Marketing Lists Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Create Contact List",
        "description": "Create a new contact list",
        "operationId": "create_contact_list_api_v1_marketing_lists_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactListCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/marketing/segments": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "List Segments",
        "description": "List all contact segments",
        "operationId": "list_segments_api_v1_marketing_segments_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContactSegmentResponse"
                  },
                  "type": "array",
                  "title": "Response List Segments Api V1 Marketing Segments Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Create Segment",
        "description": "Create a new contact segment with dynamic criteria",
        "operationId": "create_segment_api_v1_marketing_segments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactSegmentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSegmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/marketing/analytics/{campaign_id}": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "Get Campaign Analytics",
        "description": "Get detailed analytics for a specific campaign",
        "operationId": "get_campaign_analytics_api_v1_marketing_analytics__campaign_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/analytics": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "Get Marketing Analytics",
        "description": "Get overall marketing analytics",
        "operationId": "get_marketing_analytics_api_v1_marketing_analytics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics",
              "title": "Start Date"
            },
            "description": "Start date for analytics"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics",
              "title": "End Date"
            },
            "description": "End date for analytics"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Marketing Analytics Api V1 Marketing Analytics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/usage": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "Get Marketing Usage",
        "description": "Get marketing usage statistics for billing purposes",
        "operationId": "get_marketing_usage_api_v1_marketing_usage_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Usage period: current, last_month, custom",
              "default": "current",
              "title": "Period"
            },
            "description": "Usage period: current, last_month, custom"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for custom period",
              "title": "Start Date"
            },
            "description": "Start date for custom period"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for custom period",
              "title": "End Date"
            },
            "description": "End date for custom period"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingUsageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketing/usage/limits": {
      "get": {
        "tags": [
          "marketing"
        ],
        "summary": "Get Usage Limits",
        "description": "Get current usage limits and remaining quota",
        "operationId": "get_usage_limits_api_v1_marketing_usage_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/marketing/quick-send": {
      "post": {
        "tags": [
          "marketing"
        ],
        "summary": "Quick Send Message",
        "description": "Send a quick marketing message without creating a campaign",
        "operationId": "quick_send_message_api_v1_marketing_quick_send_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of message: email or sms",
              "title": "Message Type"
            },
            "description": "Type of message: email or sms"
          },
          {
            "name": "recipients",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of email addresses or phone numbers",
              "title": "Recipients"
            },
            "description": "List of email addresses or phone numbers"
          },
          {
            "name": "subject",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Email subject (required for email)",
              "title": "Subject"
            },
            "description": "Email subject (required for email)"
          },
          {
            "name": "content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Message content",
              "title": "Content"
            },
            "description": "Message content"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{short_code}": {
      "get": {
        "tags": [
          "short-urls"
        ],
        "summary": "Redirect Short Url",
        "description": "Redirect short URLs to their original destinations\n\nThis handles branded short links like:\n- bkdbrbr.com/appt123v (appointment view)\n- bkdbrbr.com/appt123c (appointment cancel)  \n- bkdbrbr.com/book (booking page)",
        "operationId": "redirect_short_url__short_code__get",
        "parameters": [
          {
            "name": "short_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Short Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stats/{short_code}": {
      "get": {
        "tags": [
          "short-urls"
        ],
        "summary": "Get Short Url Stats",
        "description": "Get statistics for a short URL (admin use)",
        "operationId": "get_short_url_stats_stats__short_code__get",
        "parameters": [
          {
            "name": "short_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Short Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/create": {
      "post": {
        "tags": [
          "short-urls"
        ],
        "summary": "Create Short Url",
        "description": "Create a new short URL (admin use)",
        "operationId": "create_short_url_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Url Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/top-links": {
      "get": {
        "tags": [
          "short-urls"
        ],
        "summary": "Get Top Links",
        "description": "Get top clicked short URLs (admin use)",
        "operationId": "get_top_links_admin_top_links_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cleanup": {
      "post": {
        "tags": [
          "short-urls"
        ],
        "summary": "Cleanup Expired Urls",
        "description": "Clean up expired short URLs (admin use)",
        "operationId": "cleanup_expired_urls_admin_cleanup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/notification-preferences/preferences": {
      "get": {
        "tags": [
          "notification-preferences"
        ],
        "summary": "Get Notification Preferences",
        "description": "Get current user's notification preferences",
        "operationId": "get_notification_preferences_api_v1_notification_preferences_preferences_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferencesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "notification-preferences"
        ],
        "summary": "Update Notification Preferences",
        "description": "Update user's notification preferences",
        "operationId": "update_notification_preferences_api_v1_notification_preferences_preferences_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPreferencesUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferencesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/notification-preferences/unsubscribe": {
      "post": {
        "tags": [
          "notification-preferences"
        ],
        "summary": "One Click Unsubscribe",
        "description": "One-click unsubscribe using token",
        "operationId": "one_click_unsubscribe_api_v1_notification_preferences_unsubscribe_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          },
          {
            "name": "unsubscribe_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "marketing_only",
              "title": "Unsubscribe Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response One Click Unsubscribe Api V1 Notification Preferences Unsubscribe Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notification-preferences/preference-center/{token}": {
      "get": {
        "tags": [
          "notification-preferences"
        ],
        "summary": "Preference Center",
        "description": "Public preference center page",
        "operationId": "preference_center_api_v1_notification_preferences_preference_center__token__get",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "notification-preferences"
        ],
        "summary": "Update Preferences Public",
        "description": "Update preferences from public preference center",
        "operationId": "update_preferences_public_api_v1_notification_preferences_preference_center__token__post",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notification-preferences/channels": {
      "get": {
        "tags": [
          "notification-preferences"
        ],
        "summary": "Get Notification Channels",
        "description": "Get available notification channels",
        "operationId": "get_notification_channels_api_v1_notification_preferences_channels_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Notification Channels Api V1 Notification Preferences Channels Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/notification-preferences/audit-log": {
      "get": {
        "tags": [
          "notification-preferences"
        ],
        "summary": "Get Preference Audit Log",
        "description": "Get user's preference change audit log",
        "operationId": "get_preference_audit_log_api_v1_notification_preferences_audit_log_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-analytics/metrics": {
      "get": {
        "tags": [
          "email-analytics"
        ],
        "summary": "Get Email Metrics",
        "description": "Get email performance metrics\n\nReturns comprehensive email analytics including:\n- Send, delivery, open, click rates\n- Bounce and unsubscribe rates\n- Time period analysis",
        "operationId": "get_email_metrics_api_v1_email_analytics_metrics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for metrics",
              "title": "Start Date"
            },
            "description": "Start date for metrics"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for metrics",
              "title": "End Date"
            },
            "description": "End date for metrics"
          },
          {
            "name": "notification_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by notification type",
              "title": "Notification Type"
            },
            "description": "Filter by notification type"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by user ID",
              "title": "User Id"
            },
            "description": "Filter by user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailMetricsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-analytics/campaigns": {
      "get": {
        "tags": [
          "email-analytics"
        ],
        "summary": "Get Campaigns",
        "description": "Get list of email campaigns with performance metrics",
        "operationId": "get_campaigns_api_v1_email_analytics_campaigns_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of campaigns to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Number of campaigns to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Offset for pagination",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailCampaignResponse"
                  },
                  "title": "Response Get Campaigns Api V1 Email Analytics Campaigns Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "email-analytics"
        ],
        "summary": "Create Campaign",
        "description": "Create a new email campaign for tracking",
        "operationId": "create_campaign_api_v1_email_analytics_campaigns_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "template_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Name"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subject"
            }
          },
          {
            "name": "sent_count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Sent Count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailCampaignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-analytics/campaigns/{campaign_id}": {
      "get": {
        "tags": [
          "email-analytics"
        ],
        "summary": "Get Campaign Performance",
        "description": "Get detailed performance metrics for a specific campaign",
        "operationId": "get_campaign_performance_api_v1_email_analytics_campaigns__campaign_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailCampaignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-analytics/top-urls": {
      "get": {
        "tags": [
          "email-analytics"
        ],
        "summary": "Get Top Clicked Urls",
        "description": "Get most clicked URLs in emails",
        "operationId": "get_top_clicked_urls_api_v1_email_analytics_top_urls_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of URLs to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of URLs to return"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date",
              "title": "Start Date"
            },
            "description": "Start date"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date",
              "title": "End Date"
            },
            "description": "End date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopClickedUrlsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-analytics/notification-types": {
      "get": {
        "tags": [
          "email-analytics"
        ],
        "summary": "Get Notification Type Performance",
        "description": "Get performance metrics by notification type",
        "operationId": "get_notification_type_performance_api_v1_email_analytics_notification_types_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date",
              "title": "Start Date"
            },
            "description": "Start date"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date",
              "title": "End Date"
            },
            "description": "End date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Notification Type Performance Api V1 Email Analytics Notification Types Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-analytics/engagement/{user_id}": {
      "get": {
        "tags": [
          "email-analytics"
        ],
        "summary": "Get User Engagement",
        "description": "Get engagement score for a specific user",
        "operationId": "get_user_engagement_api_v1_email_analytics_engagement__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailEngagementResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/email-analytics/dashboard": {
      "get": {
        "tags": [
          "email-analytics"
        ],
        "summary": "Get Analytics Dashboard",
        "description": "Get comprehensive analytics dashboard data\n\nReturns:\n- Overall metrics for last 30 days\n- Top performing notification types\n- Recent campaign performance\n- Engagement trends",
        "operationId": "get_analytics_dashboard_api_v1_email_analytics_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Analytics Dashboard Api V1 Email Analytics Dashboard Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/test-data/create": {
      "post": {
        "tags": [
          "test-data"
        ],
        "summary": "Create Test Data",
        "description": "Create test data for the current user\n\nArgs:\n    include_enterprise: If True, creates multi-location enterprise test data",
        "operationId": "create_test_data_api_v1_test_data_create_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_enterprise",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Enterprise"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Test Data Api V1 Test Data Create Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-data": {
      "delete": {
        "tags": [
          "test-data"
        ],
        "summary": "Delete Test Data",
        "description": "Delete all test data for the current user",
        "operationId": "delete_test_data_api_v1_test_data_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Delete Test Data Api V1 Test Data Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/test-data/refresh": {
      "post": {
        "tags": [
          "test-data"
        ],
        "summary": "Refresh Test Data",
        "description": "Delete and recreate test data (reset to default state)\n\nArgs:\n    include_enterprise: If True, creates multi-location enterprise test data",
        "operationId": "refresh_test_data_api_v1_test_data_refresh_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_enterprise",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Enterprise"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Refresh Test Data Api V1 Test Data Refresh Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-data/status": {
      "get": {
        "tags": [
          "test-data"
        ],
        "summary": "Get Test Data Status",
        "description": "Get current test data status for the user",
        "operationId": "get_test_data_status_api_v1_test_data_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Test Data Status Api V1 Test Data Status Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/test-data/create-enterprise": {
      "post": {
        "tags": [
          "test-data"
        ],
        "summary": "Create Enterprise Data Only",
        "description": "Create only enterprise (multi-location) test data for the current user\n\nThis endpoint creates locations, chairs, and compensation plans without\ncreating the base test data (barbers, clients, appointments).\nUse this if you already have test data and just want to add locations.",
        "operationId": "create_enterprise_data_only_api_v1_test_data_create_enterprise_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Enterprise Data Only Api V1 Test Data Create Enterprise Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/reviews": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get Reviews",
        "description": "Get paginated reviews with filtering and sorting",
        "operationId": "get_reviews_api_v1_reviews_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReviewPlatform"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Platform"
            }
          },
          {
            "name": "sentiment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReviewSentiment"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sentiment"
            }
          },
          {
            "name": "min_rating",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 5,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Rating"
            }
          },
          {
            "name": "max_rating",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 5,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Rating"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "business_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Business Id"
            }
          },
          {
            "name": "has_response",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Response"
            }
          },
          {
            "name": "is_flagged",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Flagged"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Reviews Api V1 Reviews Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/analytics": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get Review Analytics",
        "description": "Get comprehensive review analytics",
        "operationId": "get_review_analytics_api_v1_reviews_analytics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "business_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Business Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewAnalytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/templates": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get Review Templates",
        "description": "Get review response templates",
        "operationId": "get_review_templates_api_v1_reviews_templates_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReviewPlatform"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Platform"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewTemplateSchema"
                  },
                  "title": "Response Get Review Templates Api V1 Reviews Templates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Create Review Template",
        "description": "Create a new review response template",
        "operationId": "create_review_template_api_v1_reviews_templates_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewTemplateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewTemplateSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/auto-response/stats": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get Auto Response Stats",
        "description": "Get auto-response system statistics",
        "operationId": "get_auto_response_stats_api_v1_reviews_auto_response_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "default": 30,
              "title": "Days Back"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoResponseStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/gmb/locations": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get Gmb Locations",
        "description": "Get Google My Business locations",
        "operationId": "get_gmb_locations_api_v1_reviews_gmb_locations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Gmb Locations Api V1 Reviews Gmb Locations Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/reviews/{review_id}": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get Review",
        "description": "Get a specific review by ID",
        "operationId": "get_review_api_v1_reviews__review_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "review_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Review Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/{review_id}/respond": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Create Review Response",
        "description": "Create a response to a review",
        "operationId": "create_review_response_api_v1_reviews__review_id__respond_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "review_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Review Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewResponseCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/responses/{response_id}": {
      "put": {
        "tags": [
          "reviews"
        ],
        "summary": "Update Review Response",
        "description": "Update a review response",
        "operationId": "update_review_response_api_v1_reviews_responses__response_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Response Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewResponseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/responses/{response_id}/send": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Send Review Response",
        "description": "Send a review response to the platform",
        "operationId": "send_review_response_api_v1_reviews_responses__response_id__send_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Response Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Send Review Response Api V1 Reviews Responses  Response Id  Send Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/sync": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Sync Reviews",
        "description": "Manually trigger review sync from platform",
        "operationId": "sync_reviews_api_v1_reviews_sync_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewSyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSyncResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/reviews/templates/{template_id}": {
      "put": {
        "tags": [
          "reviews"
        ],
        "summary": "Update Review Template",
        "description": "Update a review response template",
        "operationId": "update_review_template_api_v1_reviews_templates__template_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewTemplateSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reviews"
        ],
        "summary": "Delete Review Template",
        "description": "Delete a review response template",
        "operationId": "delete_review_template_api_v1_reviews_templates__template_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Review Template Api V1 Reviews Templates  Template Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/templates/{template_id}/generate": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Generate Response From Template",
        "description": "Generate a response using a template",
        "operationId": "generate_response_from_template_api_v1_reviews_templates__template_id__generate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          },
          {
            "name": "review_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Review Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewTemplateGenerateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewTemplateGenerateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/bulk/respond": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Bulk Generate Responses",
        "description": "Generate responses for multiple reviews",
        "operationId": "bulk_generate_responses_api_v1_reviews_bulk_respond_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkResponseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkResponseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/reviews/gmb/auth": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Initiate Gmb Auth",
        "description": "Initiate Google My Business OAuth flow",
        "operationId": "initiate_gmb_auth_api_v1_reviews_gmb_auth_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GMBAuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GMBAuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/connect": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Initiate Oauth Connection",
        "description": "Initiate OAuth connection flow for a third-party integration.\nReturns the authorization URL to redirect the user to.",
        "operationId": "initiate_oauth_connection_api_v1_integrations_connect_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthInitiateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Initiate Oauth Connection Api V1 Integrations Connect Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/callback": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Handle Oauth Callback",
        "description": "Handle OAuth callback from third-party service.\nExchanges authorization code for access tokens and stores them securely.",
        "operationId": "handle_oauth_callback_api_v1_integrations_callback_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Authorization code from OAuth provider",
              "title": "Code"
            },
            "description": "Authorization code from OAuth provider"
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "State parameter for validation",
              "title": "State"
            },
            "description": "State parameter for validation"
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Error from OAuth provider",
              "title": "Error"
            },
            "description": "Error from OAuth provider"
          },
          {
            "name": "error_description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Error description",
              "title": "Error Description"
            },
            "description": "Error description"
          },
          {
            "name": "integration_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IntegrationType",
              "description": "Type of integration"
            },
            "description": "Type of integration"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthCallbackResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/available": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Available Integrations",
        "description": "Get list of all available integration types that can be connected.\nReturns basic information about each integration type.",
        "operationId": "get_available_integrations_api_v1_integrations_available_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Available Integrations Api V1 Integrations Available Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/status": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Integration Status",
        "description": "Get status of all integrations for the current user.\nOptionally filter by integration type.",
        "operationId": "get_integration_status_api_v1_integrations_status_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IntegrationType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by integration type",
              "title": "Integration Type"
            },
            "description": "Filter by integration type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationResponse"
                  },
                  "title": "Response Get Integration Status Api V1 Integrations Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Integration",
        "description": "Get details of a specific integration.",
        "operationId": "get_integration_api_v1_integrations__integration_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Integration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Update Integration",
        "description": "Update an integration's configuration.",
        "operationId": "update_integration_api_v1_integrations__integration_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "integrations"
        ],
        "summary": "Disconnect Integration",
        "description": "Disconnect and remove an integration.\nThis will delete all stored tokens and configuration.",
        "operationId": "disconnect_integration_api_v1_integrations__integration_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Integration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDisconnectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/health/all": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Check All Integrations Health",
        "description": "Check health status of all user's integrations.\nPerforms connectivity tests and token validation.",
        "operationId": "check_all_integrations_health_api_v1_integrations_health_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationHealthSummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/health/{integration_id}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Check Integration Health",
        "description": "Check health status of a specific integration.\nPerforms connectivity test and token validation.",
        "operationId": "check_integration_health_api_v1_integrations_health__integration_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Integration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationHealthCheck"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}/refresh-token": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Refresh Integration Token",
        "description": "Manually refresh OAuth tokens for an integration.\nUse this if tokens are expired or about to expire.",
        "operationId": "refresh_integration_token_api_v1_integrations__integration_id__refresh_token_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationTokenRefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationTokenRefreshResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/admin/all": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get All Integrations",
        "description": "[Admin Only] Get all integrations across all users.\nRequires admin role.",
        "operationId": "get_all_integrations_api_v1_integrations_admin_all_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IntegrationType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IntegrationStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationResponse"
                  },
                  "title": "Response Get All Integrations Api V1 Integrations Admin All Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-keys": {
      "post": {
        "tags": [
          "api-keys"
        ],
        "summary": "Create Api Key",
        "description": "Create a new API key.\n\nOnly admins can create keys for other users.\nRegular users can only create keys for themselves.",
        "operationId": "create_api_key_api_v1_api_keys_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api-keys"
        ],
        "summary": "List Api Keys",
        "description": "List API keys.\n\nUsers can list their own keys.\nAdmins can list keys for any user.",
        "operationId": "list_api_keys_api_v1_api_keys_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_revoked",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Revoked"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APIKeyListResponse"
                  },
                  "title": "Response List Api Keys Api V1 Api Keys Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-keys/{key_id}/rotate": {
      "post": {
        "tags": [
          "api-keys"
        ],
        "summary": "Rotate Api Key",
        "description": "Rotate an API key (revoke old, create new).\n\nUsers can rotate their own keys.\nAdmins can rotate any key.",
        "operationId": "rotate_api_key_api_v1_api_keys__key_id__rotate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-keys/{key_id}/revoke": {
      "post": {
        "tags": [
          "api-keys"
        ],
        "summary": "Revoke Api Key",
        "description": "Revoke an API key.\n\nUsers can revoke their own keys.\nAdmins can revoke any key.",
        "operationId": "revoke_api_key_api_v1_api_keys__key_id__revoke_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Key Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyRevoke"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-keys/{key_id}": {
      "get": {
        "tags": [
          "api-keys"
        ],
        "summary": "Get Api Key",
        "description": "Get details of a specific API key.\n\nUsers can view their own keys.\nAdmins can view any key.",
        "operationId": "get_api_key_api_v1_api_keys__key_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-keys/permissions/available": {
      "get": {
        "tags": [
          "api-keys"
        ],
        "summary": "Get Available Permissions",
        "description": "Get list of available permissions for API keys.",
        "operationId": "get_available_permissions_api_v1_api_keys_permissions_available_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/commissions": {
      "get": {
        "tags": [
          "commissions"
        ],
        "summary": "Get Commissions",
        "description": "Get commission summary for barbers.\n\n- Barbers can only see their own commissions\n- Admins can see all barbers' commissions",
        "operationId": "get_commissions_api_v1_commissions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific barber",
              "title": "Barber Id"
            },
            "description": "Filter by specific barber"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for period",
              "title": "Start Date"
            },
            "description": "Start date for period"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for period",
              "title": "End Date"
            },
            "description": "End date for period"
          },
          {
            "name": "unpaid_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only show unpaid commissions",
              "default": false,
              "title": "Unpaid Only"
            },
            "description": "Only show unpaid commissions"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commissions/{barber_id}": {
      "get": {
        "tags": [
          "commissions"
        ],
        "summary": "Get Barber Commission Details",
        "description": "Get detailed commission report for a specific barber.\n\n- Barbers can only see their own details\n- Admins can see any barber's details",
        "operationId": "get_barber_commission_details_api_v1_commissions__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for period",
              "title": "Start Date"
            },
            "description": "Start date for period"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for period",
              "title": "End Date"
            },
            "description": "End date for period"
          },
          {
            "name": "unpaid_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only show unpaid commissions",
              "default": false,
              "title": "Unpaid Only"
            },
            "description": "Only show unpaid commissions"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commissions/preview/payout": {
      "get": {
        "tags": [
          "commissions"
        ],
        "summary": "Preview Payout",
        "description": "Preview payout amount for a barber.\n\n- Barbers can preview their own payouts\n- Admins can preview any barber's payout",
        "operationId": "preview_payout_api_v1_commissions_preview_payout_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Barber ID",
              "title": "Barber Id"
            },
            "description": "Barber ID"
          },
          {
            "name": "include_retail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include retail commissions",
              "default": true,
              "title": "Include Retail"
            },
            "description": "Include retail commissions"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for period",
              "title": "Start Date"
            },
            "description": "Start date for period"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for period",
              "title": "End Date"
            },
            "description": "End date for period"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commissions/export": {
      "get": {
        "tags": [
          "commissions"
        ],
        "summary": "Export Commissions",
        "description": "Export commission data as CSV or PDF.\n\n- Barbers can only export their own data\n- Admins can export all data",
        "operationId": "export_commissions_api_v1_commissions_export_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Export format (csv or pdf)",
              "default": "csv",
              "title": "Format"
            },
            "description": "Export format (csv or pdf)"
          },
          {
            "name": "barber_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific barber",
              "title": "Barber Id"
            },
            "description": "Filter by specific barber"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for period",
              "title": "Start Date"
            },
            "description": "Start date for period"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for period",
              "title": "End Date"
            },
            "description": "End date for period"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commissions/rates/{barber_id}": {
      "get": {
        "tags": [
          "commissions"
        ],
        "summary": "Get Barber Commission Rates",
        "description": "Get commission rates for a specific barber using unified framework.\n\n- Barbers can only see their own rates\n- Admins can see any barber's rates",
        "operationId": "get_barber_commission_rates_api_v1_commissions_rates__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "commissions"
        ],
        "summary": "Update Barber Commission Rate",
        "description": "Update commission rate for a barber using unified framework.\n\n- Only admins can update commission rates",
        "operationId": "update_barber_commission_rate_api_v1_commissions_rates__barber_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          },
          {
            "name": "rate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "description": "New commission rate (0.0 to 1.0)",
              "title": "Rate"
            },
            "description": "New commission rate (0.0 to 1.0)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commissions/calculate": {
      "post": {
        "tags": [
          "commissions"
        ],
        "summary": "Calculate Commission Preview",
        "description": "Calculate commission preview using unified framework.\n\n- Barbers can calculate for themselves\n- Admins can calculate for any barber",
        "operationId": "calculate_commission_preview_api_v1_commissions_calculate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Barber ID",
              "title": "Barber Id"
            },
            "description": "Barber ID"
          },
          {
            "name": "commission_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Commission type: service, retail, or pos",
              "title": "Commission Type"
            },
            "description": "Commission type: service, retail, or pos"
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "description": "Amount to calculate commission on",
              "title": "Amount"
            },
            "description": "Amount to calculate commission on"
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Product ID for product-specific rates",
              "title": "Product Id"
            },
            "description": "Product ID for product-specific rates"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commissions/optimize/{barber_id}": {
      "get": {
        "tags": [
          "commissions"
        ],
        "summary": "Get Commission Optimization",
        "description": "Get commission rate optimization recommendations for a barber.\n\n- Barbers can see their own optimization suggestions\n- Admins can see optimization for any barber",
        "operationId": "get_commission_optimization_api_v1_commissions_optimize__barber_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy/cookie-consent": {
      "post": {
        "tags": [
          "privacy",
          "gdpr"
        ],
        "summary": "Save Cookie Preferences",
        "description": "Save or update cookie consent preferences.\nCan be used by both authenticated and anonymous users.",
        "operationId": "save_cookie_preferences_api_v1_privacy_cookie_consent_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CookieConsentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CookieConsentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "privacy",
          "gdpr"
        ],
        "summary": "Get Cookie Preferences",
        "description": "Get current cookie consent preferences.\nReturns preferences for the current user or session.",
        "operationId": "get_cookie_preferences_api_v1_privacy_cookie_consent_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CookieConsentResponse"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Cookie Preferences Api V1 Privacy Cookie Consent Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy/consent/terms": {
      "post": {
        "tags": [
          "privacy",
          "gdpr"
        ],
        "summary": "Accept Terms And Privacy",
        "description": "Accept or update consent for terms of service and privacy policy.\nRequires authentication.",
        "operationId": "accept_terms_and_privacy_api_v1_privacy_consent_terms_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/privacy/consent/bulk": {
      "post": {
        "tags": [
          "privacy",
          "gdpr"
        ],
        "summary": "Update Bulk Consents",
        "description": "Update multiple consents at once.\nUseful for initial consent collection or preference centers.",
        "operationId": "update_bulk_consents_api_v1_privacy_consent_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkConsentUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ConsentResponse"
                  },
                  "type": "array",
                  "title": "Response Update Bulk Consents Api V1 Privacy Consent Bulk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/privacy/export": {
      "get": {
        "tags": [
          "privacy",
          "gdpr"
        ],
        "summary": "Request Data Export",
        "description": "Request a complete export of user data (GDPR Article 20).\nReturns a request ID for tracking the export status.",
        "operationId": "request_data_export_api_v1_privacy_export_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "json",
              "title": "Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy/export/{request_id}": {
      "get": {
        "tags": [
          "privacy",
          "gdpr"
        ],
        "summary": "Check Export Status",
        "description": "Check the status of a data export request.",
        "operationId": "check_export_status_api_v1_privacy_export__request_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExportStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy/account": {
      "delete": {
        "tags": [
          "privacy",
          "gdpr"
        ],
        "summary": "Request Account Deletion",
        "description": "Request account deletion (GDPR Article 17 - Right to erasure).\nAccount will be deactivated immediately and deleted after retention period.",
        "operationId": "request_account_deletion_api_v1_privacy_account_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDeletionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeletionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/privacy/status": {
      "get": {
        "tags": [
          "privacy",
          "gdpr"
        ],
        "summary": "Get Privacy Status",
        "description": "Get comprehensive privacy status for the current user.\nIncludes all consents, preferences, and pending requests.",
        "operationId": "get_privacy_status_api_v1_privacy_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacySettings"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/privacy/audit-log": {
      "get": {
        "tags": [
          "privacy",
          "gdpr"
        ],
        "summary": "Get Consent Audit Log",
        "description": "Get audit log of all consent-related activities for the current user.",
        "operationId": "get_consent_audit_log_api_v1_privacy_audit_log_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentAuditLog"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cache/health": {
      "get": {
        "tags": [
          "cache"
        ],
        "summary": "Get Cache Health",
        "description": "Get current cache health status.",
        "operationId": "get_cache_health_api_v1_cache_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cache/stats": {
      "get": {
        "tags": [
          "cache"
        ],
        "summary": "Get Cache Stats",
        "description": "Get detailed cache statistics.",
        "operationId": "get_cache_stats_api_v1_cache_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cache/monitoring/trends": {
      "get": {
        "tags": [
          "cache"
        ],
        "summary": "Get Cache Trends",
        "description": "Get cache health trends over specified time period.",
        "operationId": "get_cache_trends_api_v1_cache_monitoring_trends_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Number of hours to look back",
              "default": 24,
              "title": "Hours"
            },
            "description": "Number of hours to look back"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cache/monitoring/utilization": {
      "get": {
        "tags": [
          "cache"
        ],
        "summary": "Get Cache Utilization",
        "description": "Get cache utilization metrics.",
        "operationId": "get_cache_utilization_api_v1_cache_monitoring_utilization_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cache/monitoring/report": {
      "get": {
        "tags": [
          "cache"
        ],
        "summary": "Generate Cache Report",
        "description": "Generate comprehensive cache health report.",
        "operationId": "generate_cache_report_api_v1_cache_monitoring_report_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cache/warm-up": {
      "post": {
        "tags": [
          "cache"
        ],
        "summary": "Warm Up Cache",
        "description": "Warm up cache for specified date range and barbers.",
        "operationId": "warm_up_cache_api_v1_cache_warm_up_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Start date for cache warm-up",
              "title": "Start Date"
            },
            "description": "Start date for cache warm-up"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "End date for cache warm-up",
              "title": "End Date"
            },
            "description": "End date for cache warm-up"
          },
          {
            "name": "barber_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific barber IDs to warm up",
              "title": "Barber Ids"
            },
            "description": "Specific barber IDs to warm up"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cache/invalidate/all-slots": {
      "post": {
        "tags": [
          "cache"
        ],
        "summary": "Invalidate All Slots",
        "description": "Invalidate all slot-related cache entries.",
        "operationId": "invalidate_all_slots_api_v1_cache_invalidate_all_slots_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cache/invalidate/barber/{barber_id}": {
      "post": {
        "tags": [
          "cache"
        ],
        "summary": "Invalidate Barber Cache",
        "description": "Invalidate all cache entries for a specific barber.",
        "operationId": "invalidate_barber_cache_api_v1_cache_invalidate_barber__barber_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "barber_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Barber Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cache/invalidate/date-range": {
      "post": {
        "tags": [
          "cache"
        ],
        "summary": "Invalidate Date Range Cache",
        "description": "Invalidate cache entries for a date range.",
        "operationId": "invalidate_date_range_cache_api_v1_cache_invalidate_date_range_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Start date for cache invalidation",
              "title": "Start Date"
            },
            "description": "Start date for cache invalidation"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "End date for cache invalidation",
              "title": "End Date"
            },
            "description": "End date for cache invalidation"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cache/invalidate/business-settings": {
      "post": {
        "tags": [
          "cache"
        ],
        "summary": "Invalidate Business Settings Cache",
        "description": "Invalidate business settings cache.",
        "operationId": "invalidate_business_settings_cache_api_v1_cache_invalidate_business_settings_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cache/preload": {
      "post": {
        "tags": [
          "cache"
        ],
        "summary": "Preload Common Data",
        "description": "Preload commonly accessed data into cache.",
        "operationId": "preload_common_data_api_v1_cache_preload_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cache/keys/summary": {
      "get": {
        "tags": [
          "cache"
        ],
        "summary": "Get Cache Keys Summary",
        "description": "Get summary of cache key patterns and what they're used for.",
        "operationId": "get_cache_keys_summary_api_v1_cache_keys_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cache/availability": {
      "get": {
        "tags": [
          "cache"
        ],
        "summary": "Check Cache Availability",
        "description": "Check if caching is available (public endpoint for health checks).",
        "operationId": "check_cache_availability_api_v1_cache_availability_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-analytics/consent": {
      "post": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Update Ai Analytics Consent",
        "description": "Update user's consent for AI analytics features.\n\nThis enables participation in cross-user insights while maintaining privacy.",
        "operationId": "update_ai_analytics_consent_api_v1_ai_analytics_consent_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Update Ai Analytics Consent Api V1 Ai Analytics Consent Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-analytics/benchmarks/{metric_type}": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Industry Benchmark",
        "description": "Get industry benchmark comparison for specified metric.\n\nShows how user's performance compares to similar businesses.",
        "operationId": "get_industry_benchmark_api_v1_ai_analytics_benchmarks__metric_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metric Type"
            }
          },
          {
            "name": "date_range_start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Range Start"
            }
          },
          {
            "name": "date_range_end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Range End"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Industry Benchmark Api V1 Ai Analytics Benchmarks  Metric Type  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-analytics/benchmarks/comprehensive": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Comprehensive Benchmark Report",
        "description": "Get comprehensive benchmark report comparing all key metrics.\n\nProvides overall performance score and industry positioning.",
        "operationId": "get_comprehensive_benchmark_report_api_v1_ai_analytics_benchmarks_comprehensive_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Comprehensive Benchmark Report Api V1 Ai Analytics Benchmarks Comprehensive Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-analytics/predictions": {
      "post": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Business Predictions",
        "description": "Get AI-powered business predictions and forecasts.\n\nCombines individual business data with industry patterns for accurate predictions.",
        "operationId": "get_business_predictions_api_v1_ai_analytics_predictions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Business Predictions Api V1 Ai Analytics Predictions Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-analytics/insights/coaching": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Ai Coaching Insights",
        "description": "Get personalized AI coaching recommendations based on cross-user success patterns.\n\nProvides actionable insights for business improvement.",
        "operationId": "get_ai_coaching_insights_api_v1_ai_analytics_insights_coaching_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Ai Coaching Insights Api V1 Ai Analytics Insights Coaching Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-analytics/insights/market-intelligence": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Market Intelligence",
        "description": "Get market intelligence and competitive insights based on industry data.\n\nProvides anonymous competitive analysis and market trends.",
        "operationId": "get_market_intelligence_api_v1_ai_analytics_insights_market_intelligence_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Market Intelligence Api V1 Ai Analytics Insights Market Intelligence Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-analytics/privacy/report": {
      "get": {
        "tags": [
          "ai-analytics"
        ],
        "summary": "Get Privacy Compliance Report",
        "description": "Get privacy compliance report for AI analytics features.\n\nShows how user data is protected and anonymized.",
        "operationId": "get_privacy_compliance_report_api_v1_ai_analytics_privacy_report_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Privacy Compliance Report Api V1 Ai Analytics Privacy Report Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/tracking/event": {
      "post": {
        "tags": [
          "tracking"
        ],
        "summary": "Track Conversion Event",
        "description": "Track a conversion event.\n\nSupports deduplication, attribution assignment, and multi-platform syncing.\nEvents are automatically sent to configured platforms (GTM, Meta, etc.).",
        "operationId": "track_conversion_event_api_v1_tracking_event_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversionEventCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionEventResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/tracking/events/batch": {
      "post": {
        "tags": [
          "tracking"
        ],
        "summary": "Track Conversion Events Batch",
        "description": "Track multiple conversion events in batch.\n\nUseful for offline conversions or bulk imports.\nMaximum 100 events per batch.",
        "operationId": "track_conversion_events_batch_api_v1_tracking_events_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ConversionEventCreate"
                },
                "type": "array",
                "title": "Events"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ConversionEventResponse"
                  },
                  "type": "array",
                  "title": "Response Track Conversion Events Batch Api V1 Tracking Events Batch Post"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/tracking/analytics": {
      "get": {
        "tags": [
          "tracking"
        ],
        "summary": "Get Conversion Analytics",
        "description": "Get comprehensive conversion analytics.\n\nIncludes channel performance, top converting pages, and conversion funnel data.\nDefaults to last 30 days if no date range specified.",
        "operationId": "get_conversion_analytics_api_v1_tracking_analytics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analytics",
              "title": "Start Date"
            },
            "description": "Start date for analytics"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analytics",
              "title": "End Date"
            },
            "description": "End date for analytics"
          },
          {
            "name": "group_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Grouping period: day, week, month",
              "default": "day",
              "title": "Group By"
            },
            "description": "Grouping period: day, week, month"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionAnalytics"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracking/attribution": {
      "get": {
        "tags": [
          "tracking"
        ],
        "summary": "Get Attribution Report",
        "description": "Generate attribution report using different models.\n\nSupports last-click, first-click, linear, time-decay, position-based, and data-driven models.\nShows how conversion credit is distributed across channels.",
        "operationId": "get_attribution_report_api_v1_tracking_attribution_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AttributionModel",
              "description": "Attribution model to use",
              "default": "data_driven"
            },
            "description": "Attribution model to use"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for report",
              "title": "Start Date"
            },
            "description": "Start date for report"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for report",
              "title": "End Date"
            },
            "description": "End date for report"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributionReport"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracking/config": {
      "get": {
        "tags": [
          "tracking"
        ],
        "summary": "Get Tracking Configuration",
        "description": "Get current tracking configuration.",
        "operationId": "get_tracking_configuration_api_v1_tracking_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "tracking"
        ],
        "summary": "Update Tracking Configuration",
        "description": "Update tracking configuration.\n\nConfigure platform settings, attribution windows, and privacy preferences.",
        "operationId": "update_tracking_configuration_api_v1_tracking_config_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingConfigUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/tracking/config/test": {
      "post": {
        "tags": [
          "tracking"
        ],
        "summary": "Test Platform Connection",
        "description": "Test connection to a tracking platform.\n\nValidates credentials and configuration without saving.",
        "operationId": "test_platform_connection_api_v1_tracking_config_test_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlatformTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformTestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/tracking/goals": {
      "get": {
        "tags": [
          "tracking"
        ],
        "summary": "Get Conversion Goals",
        "description": "Get all conversion goals for the user.",
        "operationId": "get_conversion_goals_api_v1_tracking_goals_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversionGoalResponse"
                  },
                  "title": "Response Get Conversion Goals Api V1 Tracking Goals Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tracking"
        ],
        "summary": "Create Conversion Goal",
        "description": "Create a new conversion goal.",
        "operationId": "create_conversion_goal_api_v1_tracking_goals_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversionGoalCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionGoalResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracking/goals/{goal_id}": {
      "put": {
        "tags": [
          "tracking"
        ],
        "summary": "Update Conversion Goal",
        "description": "Update a conversion goal.",
        "operationId": "update_conversion_goal_api_v1_tracking_goals__goal_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Goal Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversionGoalCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionGoalResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tracking"
        ],
        "summary": "Delete Conversion Goal",
        "description": "Delete a conversion goal.",
        "operationId": "delete_conversion_goal_api_v1_tracking_goals__goal_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Goal Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracking/campaigns": {
      "get": {
        "tags": [
          "tracking"
        ],
        "summary": "Get Campaign Tracking",
        "description": "Get campaign tracking data with optional filters.",
        "operationId": "get_campaign_tracking_api_v1_tracking_campaigns_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by campaign source",
              "title": "Source"
            },
            "description": "Filter by campaign source"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter campaigns starting after this date",
              "title": "Start Date"
            },
            "description": "Filter campaigns starting after this date"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter campaigns ending before this date",
              "title": "End Date"
            },
            "description": "Filter campaigns ending before this date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignTrackingResponse"
                  },
                  "title": "Response Get Campaign Tracking Api V1 Tracking Campaigns Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tracking"
        ],
        "summary": "Create Campaign Tracking",
        "description": "Create campaign tracking record.",
        "operationId": "create_campaign_tracking_api_v1_tracking_campaigns_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignTrackingCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTrackingResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracking/campaigns/{campaign_id}/metrics": {
      "put": {
        "tags": [
          "tracking"
        ],
        "summary": "Update Campaign Metrics",
        "description": "Update campaign performance metrics.",
        "operationId": "update_campaign_metrics_api_v1_tracking_campaigns__campaign_id__metrics_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          },
          {
            "name": "impressions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Impressions"
            }
          },
          {
            "name": "clicks",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Clicks"
            }
          },
          {
            "name": "conversions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Conversions"
            }
          },
          {
            "name": "conversion_value",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Conversion Value"
            }
          },
          {
            "name": "total_cost",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total Cost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracking/campaigns/sync": {
      "post": {
        "tags": [
          "tracking"
        ],
        "summary": "Sync Campaign Data",
        "description": "Sync campaign data from external platforms.\n\nThis endpoint would typically integrate with Google Ads, Meta Ads, etc.\nto pull latest campaign performance data.",
        "operationId": "sync_campaign_data_api_v1_tracking_campaigns_sync_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific source to sync",
              "title": "Source"
            },
            "description": "Specific source to sync"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracking/health": {
      "get": {
        "tags": [
          "tracking"
        ],
        "summary": "Tracking Health Check",
        "description": "Check health of tracking integrations.",
        "operationId": "tracking_health_check_api_v1_tracking_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/public/services/": {
      "get": {
        "tags": [
          "public-services"
        ],
        "summary": "Get Public Services",
        "description": "Get all active services available for online booking (public endpoint)",
        "operationId": "get_public_services_api_v1_public_services__get",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ServiceCategoryEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceResponse"
                  },
                  "title": "Response Get Public Services Api V1 Public Services  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/services/categories": {
      "get": {
        "tags": [
          "public-services"
        ],
        "summary": "Get Public Service Categories",
        "description": "Get all available service categories (public endpoint)",
        "operationId": "get_public_service_categories_api_v1_public_services_categories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Public Service Categories Api V1 Public Services Categories Get"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Enhanced health check including Sentry status",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIKeyCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Name for the API key"
          },
          "key_type": {
            "type": "string",
            "title": "Key Type",
            "description": "Type of key: webhook, integration, internal, partner, test"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1,
            "title": "Permissions",
            "description": "List of permissions for the key"
          },
          "expires_in_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3650.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In Days",
            "description": "Days until expiration (max 10 years)"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "User ID (admin only)"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "key_type",
          "permissions"
        ],
        "title": "APIKeyCreate",
        "description": "Schema for creating a new API key."
      },
      "APIKeyListResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key_prefix": {
            "type": "string",
            "title": "Key Prefix",
            "description": "Key prefix for identification"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "revoked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revoked At"
          },
          "revoked_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revoked Reason"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "key_prefix",
          "type",
          "status",
          "permissions",
          "last_used_at",
          "usage_count",
          "expires_at",
          "created_at",
          "revoked_at",
          "revoked_reason"
        ],
        "title": "APIKeyListResponse",
        "description": "Schema for API key list response (no actual key shown)."
      },
      "APIKeyResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "key": {
            "type": "string",
            "title": "Key",
            "description": "The actual API key (only shown once)"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Important message about key storage"
          }
        },
        "type": "object",
        "required": [
          "id",
          "key",
          "name",
          "type",
          "permissions",
          "expires_at",
          "created_at",
          "message"
        ],
        "title": "APIKeyResponse",
        "description": "Schema for API key creation response."
      },
      "APIKeyRevoke": {
        "properties": {
          "reason": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Reason",
            "description": "Reason for revocation"
          }
        },
        "type": "object",
        "required": [
          "reason"
        ],
        "title": "APIKeyRevoke",
        "description": "Schema for API key revocation request."
      },
      "AccountDeletionRequest": {
        "properties": {
          "confirmation": {
            "type": "string",
            "title": "Confirmation",
            "description": "User must type 'DELETE' to confirm"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Optional reason for deletion"
          },
          "feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback",
            "description": "Optional feedback"
          }
        },
        "type": "object",
        "required": [
          "confirmation"
        ],
        "title": "AccountDeletionRequest",
        "description": "Request for account deletion"
      },
      "AccountDeletionResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "deletion_date": {
            "type": "string",
            "format": "date-time",
            "title": "Deletion Date"
          },
          "data_retention_days": {
            "type": "integer",
            "title": "Data Retention Days",
            "description": "Days before permanent deletion",
            "default": 30
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "deletion_date"
        ],
        "title": "AccountDeletionResponse",
        "description": "Response for account deletion request"
      },
      "AdvancedSettings": {
        "properties": {
          "reminder_hours": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reminder Hours",
            "default": [
              24,
              2
            ]
          },
          "quiet_hours_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours Enabled",
            "default": false
          },
          "quiet_hours_start": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours Start",
            "default": "22:00"
          },
          "quiet_hours_end": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours End",
            "default": "08:00"
          },
          "weekend_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weekend Notifications",
            "default": true
          }
        },
        "type": "object",
        "title": "AdvancedSettings",
        "description": "Advanced notification settings"
      },
      "AppointmentCreate": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "time": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "title": "Time"
          },
          "service": {
            "type": "string",
            "title": "Service"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          }
        },
        "type": "object",
        "required": [
          "date",
          "time",
          "service"
        ],
        "title": "AppointmentCreate",
        "description": "Create a new appointment - standardized schema matching database model"
      },
      "AppointmentListResponse": {
        "properties": {
          "appointments": {
            "items": {
              "$ref": "#/components/schemas/AppointmentResponse"
            },
            "type": "array",
            "title": "Appointments"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "appointments",
          "total"
        ],
        "title": "AppointmentListResponse",
        "description": "List of appointments response"
      },
      "AppointmentReschedule": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "time": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "title": "Time"
          }
        },
        "type": "object",
        "required": [
          "date",
          "time"
        ],
        "title": "AppointmentReschedule",
        "description": "Reschedule appointment to new date/time"
      },
      "AppointmentResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id"
          },
          "service_name": {
            "type": "string",
            "title": "Service Name"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "duration_minutes": {
            "type": "integer",
            "title": "Duration Minutes"
          },
          "price": {
            "type": "number",
            "title": "Price"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "recurring_pattern_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recurring Pattern Id"
          },
          "google_event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Event Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "service_name",
          "start_time",
          "duration_minutes",
          "price",
          "status",
          "created_at"
        ],
        "title": "AppointmentResponse",
        "description": "Appointment response - matches database Appointment model fields"
      },
      "AppointmentSeriesManagement": {
        "properties": {
          "action": {
            "type": "string",
            "title": "Action",
            "description": "Action to perform"
          },
          "appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Id"
          },
          "apply_to_series": {
            "type": "boolean",
            "title": "Apply To Series",
            "description": "Apply to entire series",
            "default": false
          },
          "new_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Date"
          },
          "new_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Time"
          },
          "new_barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Barber Id"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "AppointmentSeriesManagement"
      },
      "AppointmentUpdate": {
        "properties": {
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "time": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time"
          },
          "service": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "title": "AppointmentUpdate",
        "description": "Update existing appointment - standardized schema"
      },
      "AppointmentValidationRequest": {
        "properties": {
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          },
          "appointment_date": {
            "type": "string",
            "format": "date",
            "title": "Appointment Date",
            "description": "Date of the appointment"
          },
          "appointment_time": {
            "type": "string",
            "format": "time",
            "title": "Appointment Time",
            "description": "Time of the appointment"
          },
          "duration_minutes": {
            "type": "integer",
            "title": "Duration Minutes",
            "description": "Duration in minutes"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          }
        },
        "type": "object",
        "required": [
          "appointment_date",
          "appointment_time",
          "duration_minutes"
        ],
        "title": "AppointmentValidationRequest",
        "description": "Request validation for appointment creation/updates"
      },
      "AppointmentValidationResponse": {
        "properties": {
          "is_valid": {
            "type": "boolean",
            "title": "Is Valid",
            "description": "Whether the appointment is valid"
          },
          "violations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Violations",
            "description": "List of rule violations"
          },
          "appointment_allowed": {
            "type": "boolean",
            "title": "Appointment Allowed",
            "description": "Whether appointment can proceed"
          }
        },
        "type": "object",
        "required": [
          "is_valid",
          "violations",
          "appointment_allowed"
        ],
        "title": "AppointmentValidationResponse",
        "description": "Response for appointment validation"
      },
      "AttributionModel": {
        "type": "string",
        "enum": [
          "last_click",
          "first_click",
          "linear",
          "time_decay",
          "position_based",
          "data_driven"
        ],
        "title": "AttributionModel",
        "description": "Attribution models for conversion credit distribution"
      },
      "AttributionReport": {
        "properties": {
          "model": {
            "$ref": "#/components/schemas/AttributionModel"
          },
          "total_revenue": {
            "type": "number",
            "title": "Total Revenue"
          },
          "total_conversions": {
            "type": "integer",
            "title": "Total Conversions"
          },
          "channels": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Channels"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End"
          }
        },
        "type": "object",
        "required": [
          "model",
          "total_revenue",
          "total_conversions",
          "channels",
          "period_start",
          "period_end"
        ],
        "title": "AttributionReport",
        "description": "Schema for attribution reporting"
      },
      "AutoResponseStats": {
        "properties": {
          "total_auto_responses": {
            "type": "integer",
            "title": "Total Auto Responses",
            "default": 0
          },
          "auto_responses_today": {
            "type": "integer",
            "title": "Auto Responses Today",
            "default": 0
          },
          "auto_responses_this_week": {
            "type": "integer",
            "title": "Auto Responses This Week",
            "default": 0
          },
          "auto_responses_this_month": {
            "type": "integer",
            "title": "Auto Responses This Month",
            "default": 0
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "default": 0.0
          },
          "average_response_time_hours": {
            "type": "number",
            "title": "Average Response Time Hours",
            "default": 0.0
          },
          "most_used_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Most Used Template"
          },
          "platform_breakdown": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Platform Breakdown"
          }
        },
        "type": "object",
        "title": "AutoResponseStats",
        "description": "Statistics for auto-response system"
      },
      "AvailableBarber": {
        "properties": {
          "barber_id": {
            "type": "integer",
            "title": "Barber Id"
          },
          "barber_name": {
            "type": "string",
            "title": "Barber Name"
          },
          "available_slots": {
            "items": {
              "$ref": "#/components/schemas/TimeSlotEnhanced"
            },
            "type": "array",
            "title": "Available Slots"
          }
        },
        "type": "object",
        "required": [
          "barber_id",
          "barber_name",
          "available_slots"
        ],
        "title": "AvailableBarber"
      },
      "BackupCodesRequest": {
        "properties": {
          "password": {
            "type": "string",
            "title": "Password"
          },
          "current_mfa_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Mfa Code",
            "description": "Required if MFA is enabled"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "BackupCodesRequest",
        "description": "Schema for generating new backup codes."
      },
      "BackupCodesResponse": {
        "properties": {
          "backup_codes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Backup Codes"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "warning": {
            "type": "string",
            "title": "Warning",
            "default": "Store these codes securely. Each can only be used once."
          }
        },
        "type": "object",
        "required": [
          "backup_codes",
          "generated_at",
          "message"
        ],
        "title": "BackupCodesResponse",
        "description": "Schema for backup codes response."
      },
      "BarberAvailabilityByDateResponse": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "available_barbers": {
            "items": {
              "$ref": "#/components/schemas/AvailableBarber"
            },
            "type": "array",
            "title": "Available Barbers"
          }
        },
        "type": "object",
        "required": [
          "date",
          "available_barbers"
        ],
        "title": "BarberAvailabilityByDateResponse"
      },
      "BarberAvailabilityCreate": {
        "properties": {
          "day_of_week": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Day Of Week",
            "description": "Day of week (0=Monday, 6=Sunday)"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time",
            "description": "Start time for availability"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time",
            "description": "End time for availability"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "day_of_week",
          "start_time",
          "end_time"
        ],
        "title": "BarberAvailabilityCreate"
      },
      "BarberAvailabilityResponse": {
        "properties": {
          "day_of_week": {
            "type": "integer",
            "maximum": 6.0,
            "minimum": 0.0,
            "title": "Day Of Week",
            "description": "Day of week (0=Monday, 6=Sunday)"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time",
            "description": "Start time for availability"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time",
            "description": "End time for availability"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "barber_id": {
            "type": "integer",
            "title": "Barber Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "day_of_week",
          "start_time",
          "end_time",
          "id",
          "barber_id",
          "created_at",
          "updated_at"
        ],
        "title": "BarberAvailabilityResponse"
      },
      "BarberAvailabilityUpdate": {
        "properties": {
          "day_of_week": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 6.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Day Of Week"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "BarberAvailabilityUpdate"
      },
      "BarberSpecialAvailabilityCreate": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Date for special availability"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time",
            "description": "Start time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time",
            "description": "End time"
          },
          "availability_type": {
            "type": "string",
            "title": "Availability Type",
            "description": "Type: available or unavailable",
            "default": "available"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "date",
          "start_time",
          "end_time"
        ],
        "title": "BarberSpecialAvailabilityCreate"
      },
      "BarberSpecialAvailabilityResponse": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Date for special availability"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time",
            "description": "Start time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time",
            "description": "End time"
          },
          "availability_type": {
            "type": "string",
            "title": "Availability Type",
            "description": "Type: available or unavailable",
            "default": "available"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "barber_id": {
            "type": "integer",
            "title": "Barber Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "date",
          "start_time",
          "end_time",
          "id",
          "barber_id",
          "created_at",
          "updated_at"
        ],
        "title": "BarberSpecialAvailabilityResponse"
      },
      "BarberTimeOffCreate": {
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "Start date for time off"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date",
            "description": "End date for time off"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date"
        ],
        "title": "BarberTimeOffCreate"
      },
      "BarberTimeOffResponse": {
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "Start date for time off"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date",
            "description": "End date for time off"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "barber_id": {
            "type": "integer",
            "title": "Barber Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "approved_by_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved By Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date",
          "id",
          "barber_id",
          "status",
          "approved_by_id",
          "created_at",
          "updated_at"
        ],
        "title": "BarberTimeOffResponse"
      },
      "BlackoutDateCreate": {
        "properties": {
          "blackout_date": {
            "type": "string",
            "format": "date",
            "title": "Blackout Date",
            "description": "Date to block out"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "End date for multi-day blackouts"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time",
            "description": "Start time for partial day blackouts"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time",
            "description": "End time for partial day blackouts"
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for blackout"
          },
          "blackout_type": {
            "type": "string",
            "title": "Blackout Type",
            "description": "Type of blackout",
            "default": "full_day"
          },
          "is_recurring": {
            "type": "boolean",
            "title": "Is Recurring",
            "description": "Whether this is a recurring blackout",
            "default": false
          },
          "recurrence_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recurrence Pattern",
            "description": "Recurrence pattern"
          },
          "recurrence_end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recurrence End Date",
            "description": "End date for recurring blackouts"
          },
          "allow_emergency_bookings": {
            "type": "boolean",
            "title": "Allow Emergency Bookings",
            "description": "Allow emergency bookings",
            "default": false
          },
          "affects_existing_appointments": {
            "type": "boolean",
            "title": "Affects Existing Appointments",
            "description": "Affects existing appointments",
            "default": true
          },
          "auto_reschedule": {
            "type": "boolean",
            "title": "Auto Reschedule",
            "description": "Auto-reschedule affected appointments",
            "default": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          }
        },
        "type": "object",
        "required": [
          "blackout_date",
          "reason"
        ],
        "title": "BlackoutDateCreate"
      },
      "BlackoutDateResponse": {
        "properties": {
          "blackout_date": {
            "type": "string",
            "format": "date",
            "title": "Blackout Date",
            "description": "Date to block out"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "End date for multi-day blackouts"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time",
            "description": "Start time for partial day blackouts"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time",
            "description": "End time for partial day blackouts"
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for blackout"
          },
          "blackout_type": {
            "type": "string",
            "title": "Blackout Type",
            "description": "Type of blackout",
            "default": "full_day"
          },
          "is_recurring": {
            "type": "boolean",
            "title": "Is Recurring",
            "description": "Whether this is a recurring blackout",
            "default": false
          },
          "recurrence_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recurrence Pattern",
            "description": "Recurrence pattern"
          },
          "recurrence_end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recurrence End Date",
            "description": "End date for recurring blackouts"
          },
          "allow_emergency_bookings": {
            "type": "boolean",
            "title": "Allow Emergency Bookings",
            "description": "Allow emergency bookings",
            "default": false
          },
          "affects_existing_appointments": {
            "type": "boolean",
            "title": "Affects Existing Appointments",
            "description": "Affects existing appointments",
            "default": true
          },
          "auto_reschedule": {
            "type": "boolean",
            "title": "Auto Reschedule",
            "description": "Auto-reschedule affected appointments",
            "default": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_by_id": {
            "type": "integer",
            "title": "Created By Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "blackout_date",
          "reason",
          "id",
          "created_by_id",
          "is_active",
          "created_at"
        ],
        "title": "BlackoutDateResponse"
      },
      "BlackoutDateUpdate": {
        "properties": {
          "blackout_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blackout Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "blackout_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blackout Type"
          },
          "is_recurring": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Recurring"
          },
          "recurrence_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recurrence Pattern"
          },
          "recurrence_end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recurrence End Date"
          },
          "allow_emergency_bookings": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Emergency Bookings"
          },
          "affects_existing_appointments": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Affects Existing Appointments"
          },
          "auto_reschedule": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Reschedule"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "BlackoutDateUpdate"
      },
      "Body_check_blackout_conflicts_api_v1_recurring_appointments_blackouts_check_post": {
        "properties": {
          "check_date": {
            "type": "string",
            "format": "date",
            "title": "Check Date"
          },
          "check_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Check Time"
          },
          "duration_minutes": {
            "type": "integer",
            "title": "Duration Minutes",
            "default": 0
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          }
        },
        "type": "object",
        "required": [
          "check_date"
        ],
        "title": "Body_check_blackout_conflicts_api_v1_recurring_appointments_blackouts_check_post"
      },
      "Body_detect_appointment_conflicts_api_v1_recurring_appointments_conflicts_detect_post": {
        "properties": {
          "appointment_date": {
            "type": "string",
            "format": "date",
            "title": "Appointment Date"
          },
          "appointment_time": {
            "type": "string",
            "format": "time",
            "title": "Appointment Time"
          },
          "duration_minutes": {
            "type": "integer",
            "title": "Duration Minutes"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "exclude_appointment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exclude Appointment Id"
          }
        },
        "type": "object",
        "required": [
          "appointment_date",
          "appointment_time",
          "duration_minutes"
        ],
        "title": "Body_detect_appointment_conflicts_api_v1_recurring_appointments_conflicts_detect_post"
      },
      "Body_handle_sms_status_webhook_api_v1_webhooks_sms_status_post": {
        "properties": {
          "MessageSid": {
            "type": "string",
            "title": "Messagesid"
          },
          "MessageStatus": {
            "type": "string",
            "title": "Messagestatus"
          },
          "To": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "To"
          },
          "From": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From"
          },
          "ErrorCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errorcode"
          },
          "ErrorMessage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errormessage"
          }
        },
        "type": "object",
        "required": [
          "MessageSid",
          "MessageStatus"
        ],
        "title": "Body_handle_sms_status_webhook_api_v1_webhooks_sms_status_post"
      },
      "Body_handle_sms_webhook_api_v1_webhooks_sms_post": {
        "properties": {
          "From": {
            "type": "string",
            "title": "From"
          },
          "Body": {
            "type": "string",
            "title": "Body"
          },
          "MessageSid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Messagesid"
          },
          "AccountSid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accountsid"
          }
        },
        "type": "object",
        "required": [
          "From",
          "Body"
        ],
        "title": "Body_handle_sms_webhook_api_v1_webhooks_sms_post"
      },
      "Body_import_contacts_api_v1_marketing_contacts_import_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_contacts_api_v1_marketing_contacts_import_post"
      },
      "Body_upload_import_file_api_v1_imports_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_import_file_api_v1_imports_upload_post"
      },
      "BookingRuleCreate": {
        "properties": {
          "rule_name": {
            "type": "string",
            "title": "Rule Name",
            "description": "Unique name for the rule"
          },
          "rule_type": {
            "type": "string",
            "title": "Rule Type",
            "description": "Type of rule (e.g., max_advance_booking, min_duration)"
          },
          "rule_params": {
            "additionalProperties": true,
            "type": "object",
            "title": "Rule Params",
            "description": "Rule parameters as JSON"
          },
          "applies_to": {
            "type": "string",
            "title": "Applies To",
            "description": "Who the rule applies to: all, service, barber, client_type",
            "default": "all"
          },
          "service_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Ids",
            "description": "Service IDs if applies_to='service'"
          },
          "barber_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Ids",
            "description": "Barber IDs if applies_to='barber'"
          },
          "client_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Types",
            "description": "Client types if applies_to='client_type'"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "description": "Rule priority (higher overrides lower)",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the rule is active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "rule_name",
          "rule_type",
          "rule_params"
        ],
        "title": "BookingRuleCreate"
      },
      "BookingRuleResponse": {
        "properties": {
          "rule_name": {
            "type": "string",
            "title": "Rule Name",
            "description": "Unique name for the rule"
          },
          "rule_type": {
            "type": "string",
            "title": "Rule Type",
            "description": "Type of rule (e.g., max_advance_booking, min_duration)"
          },
          "rule_params": {
            "additionalProperties": true,
            "type": "object",
            "title": "Rule Params",
            "description": "Rule parameters as JSON"
          },
          "applies_to": {
            "type": "string",
            "title": "Applies To",
            "description": "Who the rule applies to: all, service, barber, client_type",
            "default": "all"
          },
          "service_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Ids",
            "description": "Service IDs if applies_to='service'"
          },
          "barber_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Ids",
            "description": "Barber IDs if applies_to='barber'"
          },
          "client_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Types",
            "description": "Client types if applies_to='client_type'"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "description": "Rule priority (higher overrides lower)",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the rule is active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "business_id": {
            "type": "integer",
            "title": "Business Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          }
        },
        "type": "object",
        "required": [
          "rule_name",
          "rule_type",
          "rule_params",
          "id",
          "business_id",
          "created_at",
          "updated_at"
        ],
        "title": "BookingRuleResponse"
      },
      "BookingRuleUpdate": {
        "properties": {
          "rule_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Name"
          },
          "rule_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Type"
          },
          "rule_params": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Params"
          },
          "applies_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applies To"
          },
          "service_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Ids"
          },
          "barber_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Ids"
          },
          "client_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Types"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "BookingRuleUpdate"
      },
      "BookingSettingsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Unique identifier for booking settings"
          },
          "business_id": {
            "type": "integer",
            "title": "Business Id",
            "description": "Business identifier"
          },
          "business_name": {
            "type": "string",
            "title": "Business Name",
            "description": "Name of the business"
          },
          "min_lead_time_minutes": {
            "type": "integer",
            "title": "Min Lead Time Minutes",
            "description": "Minimum lead time required for bookings in minutes",
            "example": 60
          },
          "max_advance_days": {
            "type": "integer",
            "title": "Max Advance Days",
            "description": "Maximum days in advance bookings can be made",
            "example": 30
          },
          "same_day_cutoff_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Same Day Cutoff Time",
            "description": "Cutoff time for same-day bookings in HH:MM format",
            "example": "12:00"
          },
          "business_start_time": {
            "type": "string",
            "title": "Business Start Time",
            "description": "Business start time in HH:MM format",
            "example": "09:00"
          },
          "business_end_time": {
            "type": "string",
            "title": "Business End Time",
            "description": "Business end time in HH:MM format",
            "example": "18:00"
          },
          "slot_duration_minutes": {
            "type": "integer",
            "title": "Slot Duration Minutes",
            "description": "Duration of each booking slot in minutes",
            "example": 30
          },
          "show_soonest_available": {
            "type": "boolean",
            "title": "Show Soonest Available",
            "description": "Whether to show the soonest available slot"
          },
          "allow_same_day_booking": {
            "type": "boolean",
            "title": "Allow Same Day Booking",
            "description": "Whether same-day bookings are allowed"
          },
          "require_advance_booking": {
            "type": "boolean",
            "title": "Require Advance Booking",
            "description": "Whether advance booking is required"
          },
          "business_type": {
            "type": "string",
            "title": "Business Type",
            "description": "Type of business",
            "example": "barbershop"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "When the settings were created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "When the settings were last updated"
          }
        },
        "type": "object",
        "required": [
          "id",
          "business_id",
          "business_name",
          "min_lead_time_minutes",
          "max_advance_days",
          "business_start_time",
          "business_end_time",
          "slot_duration_minutes",
          "show_soonest_available",
          "allow_same_day_booking",
          "require_advance_booking",
          "business_type",
          "created_at",
          "updated_at"
        ],
        "title": "BookingSettingsResponse"
      },
      "BookingSettingsUpdate": {
        "properties": {
          "business_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Name",
            "description": "Name of the business"
          },
          "min_lead_time_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Lead Time Minutes",
            "description": "Minimum lead time required for bookings in minutes",
            "example": 60
          },
          "max_advance_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Advance Days",
            "description": "Maximum days in advance bookings can be made",
            "example": 30
          },
          "same_day_cutoff_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Same Day Cutoff Time",
            "description": "Cutoff time for same-day bookings in HH:MM format",
            "example": "12:00"
          },
          "business_start_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Start Time",
            "description": "Business start time in HH:MM format",
            "example": "09:00"
          },
          "business_end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business End Time",
            "description": "Business end time in HH:MM format",
            "example": "18:00"
          },
          "slot_duration_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slot Duration Minutes",
            "description": "Duration of each booking slot in minutes",
            "example": 30
          },
          "show_soonest_available": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Soonest Available",
            "description": "Whether to show the soonest available slot"
          },
          "allow_same_day_booking": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Same Day Booking",
            "description": "Whether same-day bookings are allowed"
          },
          "require_advance_booking": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require Advance Booking",
            "description": "Whether advance booking is required"
          },
          "business_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Type",
            "description": "Type of business",
            "example": "barbershop"
          }
        },
        "type": "object",
        "title": "BookingSettingsUpdate"
      },
      "BulkConsentUpdate": {
        "properties": {
          "consents": {
            "items": {
              "$ref": "#/components/schemas/ConsentUpdate"
            },
            "type": "array",
            "title": "Consents"
          },
          "accept_all": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accept All",
            "description": "Accept all consents (overrides individual settings)"
          }
        },
        "type": "object",
        "required": [
          "consents"
        ],
        "title": "BulkConsentUpdate",
        "description": "Request to update multiple consents at once"
      },
      "BulkResponseRequest": {
        "properties": {
          "review_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Review Ids"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "auto_send": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Send",
            "default": false
          },
          "business_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Name"
          }
        },
        "type": "object",
        "required": [
          "review_ids"
        ],
        "title": "BulkResponseRequest",
        "description": "Request to generate bulk responses"
      },
      "BulkResponseResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "total_processed": {
            "type": "integer",
            "title": "Total Processed"
          },
          "successful_responses": {
            "type": "integer",
            "title": "Successful Responses"
          },
          "failed_responses": {
            "type": "integer",
            "title": "Failed Responses"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/BulkResponseResult"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "total_processed",
          "successful_responses",
          "failed_responses"
        ],
        "title": "BulkResponseResponse",
        "description": "Response after bulk response operation"
      },
      "BulkResponseResult": {
        "properties": {
          "review_id": {
            "type": "integer",
            "title": "Review Id"
          },
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "response_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Id"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "response_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Text"
          }
        },
        "type": "object",
        "required": [
          "review_id",
          "success"
        ],
        "title": "BulkResponseResult",
        "description": "Result of bulk response operation"
      },
      "BusinessHours": {
        "properties": {
          "start": {
            "type": "string",
            "title": "Start",
            "description": "Business start time in HH:MM format",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "title": "End",
            "description": "Business end time in HH:MM format",
            "example": "18:00"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "BusinessHours"
      },
      "BusyPeriod": {
        "properties": {
          "start": {
            "type": "string",
            "title": "Start"
          },
          "end": {
            "type": "string",
            "title": "End"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "BusyPeriod"
      },
      "CalendarAvailabilityResponse": {
        "properties": {
          "available": {
            "type": "boolean",
            "title": "Available"
          },
          "start_time": {
            "type": "string",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "title": "End Time"
          }
        },
        "type": "object",
        "required": [
          "available",
          "start_time",
          "end_time"
        ],
        "title": "CalendarAvailabilityResponse"
      },
      "CalendarConnectionStatus": {
        "properties": {
          "connected": {
            "type": "boolean",
            "title": "Connected"
          },
          "valid": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid"
          },
          "calendar_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calendar Count"
          },
          "selected_calendar_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Calendar Id"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "connected"
        ],
        "title": "CalendarConnectionStatus"
      },
      "CalendarEventResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "google_event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Event Id"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "CalendarEventResponse"
      },
      "CalendarFreeBusyResponse": {
        "properties": {
          "start_time": {
            "type": "string",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "title": "End Time"
          },
          "calendar_id": {
            "type": "string",
            "title": "Calendar Id"
          },
          "busy_periods": {
            "items": {
              "$ref": "#/components/schemas/BusyPeriod"
            },
            "type": "array",
            "title": "Busy Periods"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time",
          "calendar_id",
          "busy_periods"
        ],
        "title": "CalendarFreeBusyResponse"
      },
      "CalendarListResponse": {
        "properties": {
          "calendars": {
            "items": {
              "$ref": "#/components/schemas/GoogleCalendar"
            },
            "type": "array",
            "title": "Calendars"
          }
        },
        "type": "object",
        "required": [
          "calendars"
        ],
        "title": "CalendarListResponse"
      },
      "CalendarSelectRequest": {
        "properties": {
          "calendar_id": {
            "type": "string",
            "title": "Calendar Id",
            "description": "Google Calendar ID to use for syncing"
          }
        },
        "type": "object",
        "required": [
          "calendar_id"
        ],
        "title": "CalendarSelectRequest"
      },
      "CalendarSyncRequest": {
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "Start date for syncing appointments"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "End date for syncing appointments"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date"
        ],
        "title": "CalendarSyncRequest"
      },
      "CalendarSyncResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "results": {
            "additionalProperties": true,
            "type": "object",
            "title": "Results",
            "description": "Sync results with counts and errors"
          }
        },
        "type": "object",
        "required": [
          "message",
          "results"
        ],
        "title": "CalendarSyncResponse"
      },
      "CalendarValidationResponse": {
        "properties": {
          "connected": {
            "type": "boolean",
            "title": "Connected"
          },
          "valid_credentials": {
            "type": "boolean",
            "title": "Valid Credentials"
          },
          "can_list_calendars": {
            "type": "boolean",
            "title": "Can List Calendars"
          },
          "can_create_events": {
            "type": "boolean",
            "title": "Can Create Events"
          },
          "selected_calendar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GoogleCalendar"
              },
              {
                "type": "null"
              }
            ]
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "connected",
          "valid_credentials",
          "can_list_calendars",
          "can_create_events"
        ],
        "title": "CalendarValidationResponse"
      },
      "CampaignAnalyticsResponse": {
        "properties": {
          "campaign_id": {
            "type": "integer",
            "title": "Campaign Id"
          },
          "campaign_name": {
            "type": "string",
            "title": "Campaign Name"
          },
          "campaign_type": {
            "type": "string",
            "title": "Campaign Type"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At"
          },
          "total_recipients": {
            "type": "integer",
            "title": "Total Recipients"
          },
          "sent_count": {
            "type": "integer",
            "title": "Sent Count"
          },
          "delivered_count": {
            "type": "integer",
            "title": "Delivered Count"
          },
          "delivery_rate": {
            "type": "number",
            "title": "Delivery Rate"
          },
          "opened_count": {
            "type": "integer",
            "title": "Opened Count"
          },
          "open_rate": {
            "type": "number",
            "title": "Open Rate"
          },
          "clicked_count": {
            "type": "integer",
            "title": "Clicked Count"
          },
          "click_rate": {
            "type": "number",
            "title": "Click Rate"
          },
          "click_to_open_rate": {
            "type": "number",
            "title": "Click To Open Rate"
          },
          "bounced_count": {
            "type": "integer",
            "title": "Bounced Count"
          },
          "bounce_rate": {
            "type": "number",
            "title": "Bounce Rate"
          },
          "unsubscribed_count": {
            "type": "integer",
            "title": "Unsubscribed Count"
          },
          "unsubscribe_rate": {
            "type": "number",
            "title": "Unsubscribe Rate"
          },
          "spam_reports": {
            "type": "integer",
            "title": "Spam Reports"
          },
          "first_open_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Open Time"
          },
          "last_open_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Open Time"
          },
          "average_time_to_open": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Time To Open"
          },
          "device_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Stats"
          },
          "client_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Stats"
          },
          "location_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Stats"
          },
          "link_clicks": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link Clicks"
          }
        },
        "type": "object",
        "required": [
          "campaign_id",
          "campaign_name",
          "campaign_type",
          "status",
          "total_recipients",
          "sent_count",
          "delivered_count",
          "delivery_rate",
          "opened_count",
          "open_rate",
          "clicked_count",
          "click_rate",
          "click_to_open_rate",
          "bounced_count",
          "bounce_rate",
          "unsubscribed_count",
          "unsubscribe_rate",
          "spam_reports"
        ],
        "title": "CampaignAnalyticsResponse",
        "description": "Detailed analytics for a campaign"
      },
      "CampaignSendRequest": {
        "properties": {
          "test_mode": {
            "type": "boolean",
            "title": "Test Mode",
            "description": "Send as test to limited recipients",
            "default": false
          },
          "test_recipients": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Recipients",
            "description": "Test recipient emails/phones"
          }
        },
        "type": "object",
        "title": "CampaignSendRequest",
        "description": "Request to send a campaign"
      },
      "CampaignTrackingCreate": {
        "properties": {
          "campaign_id": {
            "type": "string",
            "title": "Campaign Id",
            "description": "External campaign ID"
          },
          "campaign_name": {
            "type": "string",
            "title": "Campaign Name",
            "description": "Campaign name"
          },
          "campaign_source": {
            "type": "string",
            "title": "Campaign Source",
            "description": "Campaign source (google_ads, meta, etc.)"
          },
          "campaign_medium": {
            "type": "string",
            "title": "Campaign Medium",
            "description": "Campaign medium"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "Campaign start date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "Campaign end date"
          },
          "total_cost": {
            "type": "number",
            "title": "Total Cost",
            "description": "Total campaign cost",
            "default": 0.0
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "type": "object",
        "required": [
          "campaign_id",
          "campaign_name",
          "campaign_source",
          "campaign_medium",
          "start_date"
        ],
        "title": "CampaignTrackingCreate",
        "description": "Schema for creating campaign tracking"
      },
      "CampaignTrackingResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "campaign_id": {
            "type": "string",
            "title": "Campaign Id"
          },
          "campaign_name": {
            "type": "string",
            "title": "Campaign Name"
          },
          "campaign_source": {
            "type": "string",
            "title": "Campaign Source"
          },
          "campaign_medium": {
            "type": "string",
            "title": "Campaign Medium"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "total_cost": {
            "type": "number",
            "title": "Total Cost"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "impressions": {
            "type": "integer",
            "title": "Impressions"
          },
          "clicks": {
            "type": "integer",
            "title": "Clicks"
          },
          "conversions": {
            "type": "integer",
            "title": "Conversions"
          },
          "conversion_value": {
            "type": "number",
            "title": "Conversion Value"
          },
          "ctr": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ctr"
          },
          "conversion_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Rate"
          },
          "cpc": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpc"
          },
          "cpa": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpa"
          },
          "roas": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roas"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "last_sync_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sync At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "campaign_id",
          "campaign_name",
          "campaign_source",
          "campaign_medium",
          "start_date",
          "end_date",
          "total_cost",
          "currency",
          "impressions",
          "clicks",
          "conversions",
          "conversion_value",
          "ctr",
          "conversion_rate",
          "cpc",
          "cpa",
          "roas",
          "is_active",
          "created_at",
          "updated_at",
          "last_sync_at"
        ],
        "title": "CampaignTrackingResponse",
        "description": "Schema for campaign tracking response"
      },
      "ChangePasswordRequest": {
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "ChangePasswordRequest"
      },
      "ChangePasswordResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ChangePasswordResponse"
      },
      "ChannelPerformance": {
        "properties": {
          "channel": {
            "type": "string",
            "title": "Channel"
          },
          "conversions": {
            "type": "integer",
            "title": "Conversions"
          },
          "revenue": {
            "type": "number",
            "title": "Revenue"
          },
          "attributed_revenue": {
            "type": "number",
            "title": "Attributed Revenue"
          },
          "conversion_rate": {
            "type": "number",
            "title": "Conversion Rate"
          },
          "roi": {
            "type": "number",
            "title": "Roi"
          }
        },
        "type": "object",
        "required": [
          "channel",
          "conversions",
          "revenue",
          "attributed_revenue",
          "conversion_rate",
          "roi"
        ],
        "title": "ChannelPerformance",
        "description": "Schema for channel performance metrics"
      },
      "Client": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "preferred_barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Barber Id"
          },
          "preferred_services": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Services",
            "default": []
          },
          "communication_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Communication Preferences",
            "default": {
              "sms": true,
              "email": true,
              "marketing": false
            }
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "customer_type": {
            "type": "string",
            "title": "Customer Type"
          },
          "total_visits": {
            "type": "integer",
            "title": "Total Visits"
          },
          "total_spent": {
            "type": "number",
            "title": "Total Spent"
          },
          "average_ticket": {
            "type": "number",
            "title": "Average Ticket"
          },
          "visit_frequency_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visit Frequency Days"
          },
          "no_show_count": {
            "type": "integer",
            "title": "No Show Count"
          },
          "cancellation_count": {
            "type": "integer",
            "title": "Cancellation Count"
          },
          "referral_count": {
            "type": "integer",
            "title": "Referral Count"
          },
          "first_visit_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Visit Date"
          },
          "last_visit_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Visit Date"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email",
          "id",
          "customer_type",
          "total_visits",
          "total_spent",
          "average_ticket",
          "visit_frequency_days",
          "no_show_count",
          "cancellation_count",
          "referral_count",
          "first_visit_date",
          "last_visit_date",
          "created_at",
          "updated_at"
        ],
        "title": "Client"
      },
      "ClientCreate": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "preferred_barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Barber Id"
          },
          "preferred_services": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Services",
            "default": []
          },
          "communication_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Communication Preferences",
            "default": {
              "sms": true,
              "email": true,
              "marketing": false
            }
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email"
        ],
        "title": "ClientCreate"
      },
      "ClientHistory": {
        "properties": {
          "appointments": {
            "items": {
              "$ref": "#/components/schemas/AppointmentResponse"
            },
            "type": "array",
            "title": "Appointments"
          },
          "total_appointments": {
            "type": "integer",
            "title": "Total Appointments"
          },
          "total_spent": {
            "type": "number",
            "title": "Total Spent"
          },
          "average_ticket": {
            "type": "number",
            "title": "Average Ticket"
          },
          "no_shows": {
            "type": "integer",
            "title": "No Shows"
          },
          "cancellations": {
            "type": "integer",
            "title": "Cancellations"
          }
        },
        "type": "object",
        "required": [
          "appointments",
          "total_appointments",
          "total_spent",
          "average_ticket",
          "no_shows",
          "cancellations"
        ],
        "title": "ClientHistory"
      },
      "ClientList": {
        "properties": {
          "clients": {
            "items": {
              "$ref": "#/components/schemas/Client"
            },
            "type": "array",
            "title": "Clients"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          }
        },
        "type": "object",
        "required": [
          "clients",
          "total",
          "page",
          "page_size"
        ],
        "title": "ClientList"
      },
      "ClientUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "preferred_barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Barber Id"
          },
          "preferred_services": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Services"
          },
          "communication_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Communication Preferences"
          }
        },
        "type": "object",
        "title": "ClientUpdate"
      },
      "CompensationModelEnum": {
        "type": "string",
        "enum": [
          "booth_rental",
          "commission",
          "hybrid",
          "custom"
        ],
        "title": "CompensationModelEnum"
      },
      "ComplianceInfo": {
        "properties": {
          "consent_given_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Consent Given At"
          },
          "data_processing_consent": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Processing Consent",
            "default": true
          },
          "marketing_consent": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Marketing Consent",
            "default": false
          },
          "last_updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated At"
          }
        },
        "type": "object",
        "title": "ComplianceInfo",
        "description": "GDPR compliance information"
      },
      "ConsentAuditEntry": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "consent_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Consent Type"
          },
          "old_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Status"
          },
          "new_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Status"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "performed_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Performed By"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "action",
          "timestamp"
        ],
        "title": "ConsentAuditEntry",
        "description": "Audit log entry for consent changes"
      },
      "ConsentAuditLog": {
        "properties": {
          "entries": {
            "items": {
              "$ref": "#/components/schemas/ConsentAuditEntry"
            },
            "type": "array",
            "title": "Entries"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "default": 1
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "default": 50
          }
        },
        "type": "object",
        "required": [
          "entries",
          "total"
        ],
        "title": "ConsentAuditLog",
        "description": "List of consent audit entries"
      },
      "ConsentResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "consent_type": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "status": {
            "$ref": "#/components/schemas/ConsentStatus"
          },
          "consent_date": {
            "type": "string",
            "format": "date-time",
            "title": "Consent Date"
          },
          "withdrawal_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Withdrawal Date"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "consent_type",
          "status",
          "consent_date",
          "created_at",
          "updated_at"
        ],
        "title": "ConsentResponse",
        "description": "Response with consent details"
      },
      "ConsentStatus": {
        "type": "string",
        "enum": [
          "granted",
          "denied",
          "pending",
          "withdrawn"
        ],
        "title": "ConsentStatus",
        "description": "Status of user consent"
      },
      "ConsentType": {
        "type": "string",
        "enum": [
          "terms_of_service",
          "privacy_policy",
          "marketing_emails",
          "marketing_sms",
          "data_processing",
          "third_party_sharing",
          "aggregate_analytics",
          "benchmarking",
          "predictive_insights",
          "ai_coaching"
        ],
        "title": "ConsentType",
        "description": "Types of consents that can be tracked"
      },
      "ConsentUpdate": {
        "properties": {
          "consent_type": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "status": {
            "$ref": "#/components/schemas/ConsentStatus"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version of terms/policy being consented to"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes about the consent"
          }
        },
        "type": "object",
        "required": [
          "consent_type",
          "status"
        ],
        "title": "ConsentUpdate",
        "description": "Request to update consent status"
      },
      "ConsentUpdateRequest": {
        "properties": {
          "consent_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Consent Types",
            "description": "List of consent types to grant"
          }
        },
        "type": "object",
        "required": [
          "consent_types"
        ],
        "title": "ConsentUpdateRequest",
        "description": "Request model for updating AI analytics consent"
      },
      "ContactBulkActionRequest": {
        "properties": {
          "contact_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "minItems": 1,
            "title": "Contact Ids"
          },
          "action": {
            "type": "string",
            "title": "Action",
            "description": "subscribe, unsubscribe, add_to_list, remove_from_list, delete"
          },
          "action_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Data",
            "description": "Additional data for action"
          }
        },
        "type": "object",
        "required": [
          "contact_ids",
          "action"
        ],
        "title": "ContactBulkActionRequest",
        "description": "Bulk action on contacts"
      },
      "ContactExportRequest": {
        "properties": {
          "list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "List Id"
          },
          "segment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment Id"
          },
          "fields": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Fields"
          }
        },
        "type": "object",
        "title": "ContactExportRequest",
        "description": "Request to export contacts"
      },
      "ContactImportResponse": {
        "properties": {
          "imported": {
            "type": "integer",
            "title": "Imported"
          },
          "updated": {
            "type": "integer",
            "title": "Updated"
          },
          "skipped": {
            "type": "integer",
            "title": "Skipped"
          },
          "errors": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          },
          "total_processed": {
            "type": "integer",
            "title": "Total Processed"
          }
        },
        "type": "object",
        "required": [
          "imported",
          "updated",
          "skipped",
          "total_processed"
        ],
        "title": "ContactImportResponse",
        "description": "Response for contact import operation"
      },
      "ContactListCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ContactListCreate",
        "description": "Create a new contact list"
      },
      "ContactListResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "contact_count": {
            "type": "integer",
            "title": "Contact Count",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "title": "ContactListResponse",
        "description": "Contact list response"
      },
      "ContactSegmentCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "criteria": {
            "additionalProperties": true,
            "type": "object",
            "title": "Criteria",
            "description": "Segment criteria as JSON"
          }
        },
        "type": "object",
        "required": [
          "name",
          "criteria"
        ],
        "title": "ContactSegmentCreate",
        "description": "Create a new contact segment with dynamic criteria"
      },
      "ContactSegmentResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "criteria": {
            "additionalProperties": true,
            "type": "object",
            "title": "Criteria"
          },
          "contact_count": {
            "type": "integer",
            "title": "Contact Count",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "criteria",
          "created_at",
          "updated_at"
        ],
        "title": "ContactSegmentResponse",
        "description": "Contact segment response"
      },
      "ConversionAnalytics": {
        "properties": {
          "total_conversions": {
            "type": "integer",
            "title": "Total Conversions"
          },
          "total_revenue": {
            "type": "number",
            "title": "Total Revenue"
          },
          "conversion_rate": {
            "type": "number",
            "title": "Conversion Rate"
          },
          "average_order_value": {
            "type": "number",
            "title": "Average Order Value"
          },
          "channel_performance": {
            "items": {
              "$ref": "#/components/schemas/ChannelPerformance"
            },
            "type": "array",
            "title": "Channel Performance"
          },
          "top_converting_pages": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Converting Pages"
          },
          "conversion_funnel": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Conversion Funnel"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End"
          }
        },
        "type": "object",
        "required": [
          "total_conversions",
          "total_revenue",
          "conversion_rate",
          "average_order_value",
          "channel_performance",
          "top_converting_pages",
          "conversion_funnel",
          "period_start",
          "period_end"
        ],
        "title": "ConversionAnalytics",
        "description": "Schema for conversion analytics response"
      },
      "ConversionEventCreate": {
        "properties": {
          "event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id",
            "description": "Unique event ID for deduplication"
          },
          "event_name": {
            "type": "string",
            "title": "Event Name",
            "description": "Name of the event (e.g., 'booking_completed')"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType",
            "description": "Type of conversion event"
          },
          "event_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Value",
            "description": "Monetary value of the event"
          },
          "event_currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Currency",
            "description": "Currency code",
            "default": "USD"
          },
          "event_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Data",
            "description": "Additional event data"
          },
          "source_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url",
            "description": "URL where event occurred"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent",
            "description": "User agent string"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address",
            "description": "User IP address (will be hashed)"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id",
            "description": "Google Analytics client ID"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id",
            "description": "Session identifier"
          },
          "utm_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Source",
            "description": "UTM source parameter"
          },
          "utm_medium": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Medium",
            "description": "UTM medium parameter"
          },
          "utm_campaign": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Campaign",
            "description": "UTM campaign parameter"
          },
          "utm_term": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Term",
            "description": "UTM term parameter"
          },
          "utm_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Content",
            "description": "UTM content parameter"
          },
          "referrer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Referrer",
            "description": "HTTP referrer"
          }
        },
        "type": "object",
        "required": [
          "event_name",
          "event_type"
        ],
        "title": "ConversionEventCreate",
        "description": "Schema for creating a new conversion event"
      },
      "ConversionEventResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "event_id": {
            "type": "string",
            "title": "Event Id"
          },
          "event_name": {
            "type": "string",
            "title": "Event Name"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "event_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Value"
          },
          "event_currency": {
            "type": "string",
            "title": "Event Currency"
          },
          "channel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel"
          },
          "status": {
            "$ref": "#/components/schemas/ConversionStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "gtm_synced": {
            "type": "boolean",
            "title": "Gtm Synced"
          },
          "meta_synced": {
            "type": "boolean",
            "title": "Meta Synced"
          },
          "google_ads_synced": {
            "type": "boolean",
            "title": "Google Ads Synced"
          },
          "attribution_path_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attribution Path Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "event_id",
          "event_name",
          "event_type",
          "event_value",
          "event_currency",
          "channel",
          "status",
          "created_at",
          "gtm_synced",
          "meta_synced",
          "google_ads_synced",
          "attribution_path_id"
        ],
        "title": "ConversionEventResponse",
        "description": "Schema for conversion event response"
      },
      "ConversionGoalCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Goal name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Goal description"
          },
          "event_name": {
            "type": "string",
            "title": "Event Name",
            "description": "Event that triggers this goal"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType",
            "description": "Type of event"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "Fixed goal value"
          },
          "value_expression": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value Expression",
            "description": "Dynamic value calculation"
          },
          "conditions": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conditions",
            "description": "Additional conditions"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether goal is active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "event_name",
          "event_type"
        ],
        "title": "ConversionGoalCreate",
        "description": "Schema for creating a conversion goal"
      },
      "ConversionGoalResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "event_name": {
            "type": "string",
            "title": "Event Name"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "value_expression": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value Expression"
          },
          "conditions": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conditions"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "total_conversions": {
            "type": "integer",
            "title": "Total Conversions"
          },
          "total_value": {
            "type": "number",
            "title": "Total Value"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "name",
          "description",
          "event_name",
          "event_type",
          "value",
          "value_expression",
          "conditions",
          "is_active",
          "total_conversions",
          "total_value",
          "created_at",
          "updated_at"
        ],
        "title": "ConversionGoalResponse",
        "description": "Schema for conversion goal response"
      },
      "ConversionStatus": {
        "type": "string",
        "enum": [
          "pending",
          "tracked",
          "failed",
          "duplicate"
        ],
        "title": "ConversionStatus",
        "description": "Status of conversion tracking"
      },
      "CookieConsentRequest": {
        "properties": {
          "preferences": {
            "$ref": "#/components/schemas/CookiePreferences"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id",
            "description": "Session ID for anonymous tracking"
          }
        },
        "type": "object",
        "required": [
          "preferences"
        ],
        "title": "CookieConsentRequest",
        "description": "Request to update cookie preferences"
      },
      "CookieConsentResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "preferences": {
            "$ref": "#/components/schemas/CookiePreferences"
          },
          "consent_date": {
            "type": "string",
            "format": "date-time",
            "title": "Consent Date"
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time",
            "title": "Expiry Date"
          }
        },
        "type": "object",
        "required": [
          "id",
          "session_id",
          "preferences",
          "consent_date",
          "expiry_date"
        ],
        "title": "CookieConsentResponse",
        "description": "Response with current cookie preferences"
      },
      "CookiePreferences": {
        "properties": {
          "functional": {
            "type": "boolean",
            "title": "Functional",
            "description": "Essential cookies for basic functionality (cannot be disabled)",
            "default": true
          },
          "analytics": {
            "type": "boolean",
            "title": "Analytics",
            "description": "Analytics cookies for usage tracking",
            "default": false
          },
          "marketing": {
            "type": "boolean",
            "title": "Marketing",
            "description": "Marketing cookies for targeted advertising",
            "default": false
          },
          "preferences": {
            "type": "boolean",
            "title": "Preferences",
            "description": "Preference cookies for user customization",
            "default": false
          }
        },
        "type": "object",
        "title": "CookiePreferences",
        "description": "Cookie consent preferences by category"
      },
      "DataExportResponse": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "status": {
            "$ref": "#/components/schemas/ExportStatus"
          },
          "requested_at": {
            "type": "string",
            "format": "date-time",
            "title": "Requested At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "file_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Url",
            "description": "Download URL when ready"
          },
          "file_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size Bytes"
          },
          "format": {
            "$ref": "#/components/schemas/ExportFormat"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "status",
          "requested_at",
          "format",
          "message"
        ],
        "title": "DataExportResponse",
        "description": "Response for data export request"
      },
      "DataExportStatusResponse": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "status": {
            "$ref": "#/components/schemas/ExportStatus"
          },
          "progress_percentage": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress Percentage"
          },
          "estimated_completion": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Completion"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "status"
        ],
        "title": "DataExportStatusResponse",
        "description": "Status check for data export request"
      },
      "EmailCampaignResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "template_name": {
            "type": "string",
            "title": "Template Name"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "sent_count": {
            "type": "integer",
            "title": "Sent Count"
          },
          "delivered_count": {
            "type": "integer",
            "title": "Delivered Count"
          },
          "opened_count": {
            "type": "integer",
            "title": "Opened Count"
          },
          "unique_opens": {
            "type": "integer",
            "title": "Unique Opens"
          },
          "clicked_count": {
            "type": "integer",
            "title": "Clicked Count"
          },
          "unique_clicks": {
            "type": "integer",
            "title": "Unique Clicks"
          },
          "bounced_count": {
            "type": "integer",
            "title": "Bounced Count"
          },
          "unsubscribed_count": {
            "type": "integer",
            "title": "Unsubscribed Count"
          },
          "delivery_rate": {
            "type": "number",
            "title": "Delivery Rate"
          },
          "open_rate": {
            "type": "number",
            "title": "Open Rate"
          },
          "click_rate": {
            "type": "number",
            "title": "Click Rate"
          },
          "bounce_rate": {
            "type": "number",
            "title": "Bounce Rate"
          },
          "unsubscribe_rate": {
            "type": "number",
            "title": "Unsubscribe Rate"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "template_name",
          "subject",
          "sent_count",
          "delivered_count",
          "opened_count",
          "unique_opens",
          "clicked_count",
          "unique_clicks",
          "bounced_count",
          "unsubscribed_count",
          "delivery_rate",
          "open_rate",
          "click_rate",
          "bounce_rate",
          "unsubscribe_rate",
          "created_at"
        ],
        "title": "EmailCampaignResponse",
        "description": "Email campaign performance response"
      },
      "EmailEngagementResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "engagement_score": {
            "type": "number",
            "title": "Engagement Score"
          },
          "emails_received": {
            "type": "integer",
            "title": "Emails Received"
          },
          "emails_opened": {
            "type": "integer",
            "title": "Emails Opened"
          },
          "emails_clicked": {
            "type": "integer",
            "title": "Emails Clicked"
          },
          "last_activity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Activity"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "engagement_score",
          "emails_received",
          "emails_opened",
          "emails_clicked"
        ],
        "title": "EmailEngagementResponse",
        "description": "User email engagement response"
      },
      "EmailMetricsResponse": {
        "properties": {
          "period": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Period"
          },
          "counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Counts"
          },
          "rates": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Rates"
          },
          "total_sent": {
            "type": "integer",
            "title": "Total Sent"
          },
          "total_delivered": {
            "type": "integer",
            "title": "Total Delivered"
          }
        },
        "type": "object",
        "required": [
          "period",
          "counts",
          "rates",
          "total_sent",
          "total_delivered"
        ],
        "title": "EmailMetricsResponse",
        "description": "Email performance metrics response"
      },
      "EmailPreferences": {
        "properties": {
          "appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Confirmation",
            "default": true
          },
          "appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Reminder",
            "default": true
          },
          "appointment_changes": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Changes",
            "default": true
          },
          "appointment_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Cancellation",
            "default": true
          },
          "payment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Confirmation",
            "default": true
          },
          "payment_failed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Failed",
            "default": true
          },
          "marketing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Marketing",
            "default": false
          },
          "news_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "News Updates",
            "default": false
          },
          "promotional": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promotional",
            "default": false
          },
          "system_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Alerts",
            "default": true
          },
          "frequency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency",
            "default": "immediate"
          }
        },
        "type": "object",
        "title": "EmailPreferences",
        "description": "Email notification preferences"
      },
      "EnhancedAppointmentCreate": {
        "properties": {
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id",
            "description": "Service ID from service catalog"
          },
          "service_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Name",
            "description": "Service name (fallback if service_id not provided)"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id",
            "description": "Preferred barber ID"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id",
            "description": "Client ID for barber-created appointments"
          },
          "appointment_date": {
            "type": "string",
            "format": "date",
            "title": "Appointment Date",
            "description": "Date of the appointment"
          },
          "appointment_time": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "title": "Appointment Time",
            "description": "Time in HH:MM format"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes",
            "description": "Custom duration (overrides service default)"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price",
            "description": "Custom price (overrides service default)"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Special instructions or notes"
          },
          "buffer_time_before": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buffer Time Before",
            "description": "Buffer time before appointment (minutes)",
            "default": 0
          },
          "buffer_time_after": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buffer Time After",
            "description": "Buffer time after appointment (minutes)",
            "default": 0
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Client timezone for time conversion"
          }
        },
        "type": "object",
        "required": [
          "appointment_date",
          "appointment_time"
        ],
        "title": "EnhancedAppointmentCreate",
        "description": "Enhanced appointment creation with all available options"
      },
      "EventType": {
        "type": "string",
        "enum": [
          "page_view",
          "click",
          "form_submit",
          "add_to_cart",
          "purchase",
          "registration",
          "lead",
          "phone_call",
          "chat_started",
          "custom"
        ],
        "title": "EventType",
        "description": "Types of conversion events"
      },
      "ExportFormat": {
        "type": "string",
        "enum": [
          "json",
          "csv",
          "xml"
        ],
        "title": "ExportFormat",
        "description": "Available export formats"
      },
      "ExportStatus": {
        "type": "string",
        "enum": [
          "pending",
          "processing",
          "completed",
          "failed",
          "expired"
        ],
        "title": "ExportStatus",
        "description": "Status of data export requests"
      },
      "GMBAuthRequest": {
        "properties": {
          "redirect_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Uri"
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes"
          }
        },
        "type": "object",
        "title": "GMBAuthRequest",
        "description": "Request to initiate GMB OAuth flow"
      },
      "GMBAuthResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "auth_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Url"
          },
          "integration_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "GMBAuthResponse",
        "description": "Response after GMB OAuth completion"
      },
      "GiftCertificateCreate": {
        "properties": {
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount",
            "description": "Gift certificate amount"
          },
          "purchaser_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Purchaser Name"
          },
          "purchaser_email": {
            "type": "string",
            "format": "email",
            "title": "Purchaser Email"
          },
          "recipient_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Name"
          },
          "recipient_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Email"
          },
          "message": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "validity_months": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 1.0,
            "title": "Validity Months",
            "description": "Validity period in months",
            "default": 12
          }
        },
        "type": "object",
        "required": [
          "amount",
          "purchaser_name",
          "purchaser_email"
        ],
        "title": "GiftCertificateCreate"
      },
      "GiftCertificateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "balance": {
            "type": "number",
            "title": "Balance"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "purchaser_name": {
            "type": "string",
            "title": "Purchaser Name"
          },
          "purchaser_email": {
            "type": "string",
            "title": "Purchaser Email"
          },
          "recipient_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Name"
          },
          "recipient_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Email"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "valid_from": {
            "type": "string",
            "format": "date-time",
            "title": "Valid From"
          },
          "valid_until": {
            "type": "string",
            "format": "date-time",
            "title": "Valid Until"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Used At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "code",
          "amount",
          "balance",
          "status",
          "purchaser_name",
          "purchaser_email",
          "recipient_name",
          "recipient_email",
          "message",
          "valid_from",
          "valid_until",
          "created_at",
          "used_at"
        ],
        "title": "GiftCertificateResponse"
      },
      "GiftCertificateValidate": {
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "GiftCertificateValidate"
      },
      "GoogleCalendar": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "primary": {
            "type": "boolean",
            "title": "Primary",
            "default": false
          },
          "accessRole": {
            "type": "string",
            "title": "Accessrole"
          },
          "timeZone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          }
        },
        "type": "object",
        "required": [
          "id",
          "summary",
          "accessRole"
        ],
        "title": "GoogleCalendar"
      },
      "GuestBookingCreate": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Booking date"
          },
          "time": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "title": "Time",
            "description": "Time in HH:MM format"
          },
          "service": {
            "type": "string",
            "title": "Service",
            "description": "Service name"
          },
          "guest_info": {
            "$ref": "#/components/schemas/GuestInfo",
            "description": "Guest contact information"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Guest timezone"
          },
          "captcha_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Token",
            "description": "reCAPTCHA token for verification"
          }
        },
        "type": "object",
        "required": [
          "date",
          "time",
          "service",
          "guest_info"
        ],
        "title": "GuestBookingCreate",
        "description": "Create booking for guest user (no authentication required)"
      },
      "GuestBookingResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "time": {
            "type": "string",
            "title": "Time"
          },
          "service": {
            "type": "string",
            "title": "Service"
          },
          "guest_name": {
            "type": "string",
            "title": "Guest Name"
          },
          "guest_email": {
            "type": "string",
            "title": "Guest Email"
          },
          "guest_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guest Phone"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "booking_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Reference"
          }
        },
        "type": "object",
        "required": [
          "id",
          "date",
          "time",
          "service",
          "guest_name",
          "guest_email",
          "status",
          "created_at"
        ],
        "title": "GuestBookingResponse",
        "description": "Response for guest booking creation"
      },
      "GuestInfo": {
        "properties": {
          "first_name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Last Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\+?[\\d\\s\\-\\(\\)]+$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email"
        ],
        "title": "GuestInfo",
        "description": "Guest contact information for bookings"
      },
      "GuestQuickBookingCreate": {
        "properties": {
          "service": {
            "type": "string",
            "title": "Service",
            "description": "Service name"
          },
          "guest_info": {
            "$ref": "#/components/schemas/GuestInfo",
            "description": "Guest contact information"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Guest timezone"
          },
          "captcha_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Token",
            "description": "reCAPTCHA token for verification"
          }
        },
        "type": "object",
        "required": [
          "service",
          "guest_info"
        ],
        "title": "GuestQuickBookingCreate",
        "description": "Create quick booking for guest user (next available slot)"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImportExecutionRequest": {
        "properties": {
          "field_mapping": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Field Mapping",
            "description": "Field mapping for import"
          },
          "duplicate_handling": {
            "type": "string",
            "title": "Duplicate Handling",
            "description": "How to handle duplicates: skip, update, merge",
            "default": "skip"
          },
          "validation_level": {
            "type": "string",
            "title": "Validation Level",
            "description": "Validation strictness: strict, moderate, lenient",
            "default": "moderate"
          },
          "rollback_on_error": {
            "type": "boolean",
            "title": "Rollback On Error",
            "description": "Whether to rollback on error",
            "default": true
          },
          "error_threshold": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Error Threshold",
            "description": "Maximum number of errors before stopping",
            "default": 10
          },
          "notify_on_completion": {
            "type": "boolean",
            "title": "Notify On Completion",
            "description": "Send notification when import completes",
            "default": true
          },
          "batch_size": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Number of records to process in each batch",
            "default": 100
          }
        },
        "type": "object",
        "required": [
          "field_mapping"
        ],
        "title": "ImportExecutionRequest"
      },
      "ImportExecutionResponse": {
        "properties": {
          "import_id": {
            "type": "string",
            "title": "Import Id",
            "description": "Import job identifier"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Import status"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Execution status message"
          },
          "started_at": {
            "type": "string",
            "title": "Started At",
            "description": "Import start timestamp"
          },
          "execution_options": {
            "additionalProperties": true,
            "type": "object",
            "title": "Execution Options",
            "description": "Options used for execution"
          }
        },
        "type": "object",
        "required": [
          "import_id",
          "status",
          "message",
          "started_at",
          "execution_options"
        ],
        "title": "ImportExecutionResponse"
      },
      "ImportHistoryItem": {
        "properties": {
          "import_id": {
            "type": "string",
            "title": "Import Id",
            "description": "Import job identifier"
          },
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Original filename"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type",
            "description": "Import source type"
          },
          "import_type": {
            "type": "string",
            "title": "Import Type",
            "description": "Type of data imported"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Final import status"
          },
          "total_records": {
            "type": "integer",
            "title": "Total Records",
            "description": "Total number of records"
          },
          "successful_imports": {
            "type": "integer",
            "title": "Successful Imports",
            "description": "Number of successful imports"
          },
          "failed_imports": {
            "type": "integer",
            "title": "Failed Imports",
            "description": "Number of failed imports"
          },
          "uploaded_at": {
            "type": "string",
            "title": "Uploaded At",
            "description": "Upload timestamp"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Completion timestamp"
          },
          "uploaded_by": {
            "type": "integer",
            "title": "Uploaded By",
            "description": "User ID who uploaded the import"
          }
        },
        "type": "object",
        "required": [
          "import_id",
          "filename",
          "source_type",
          "import_type",
          "status",
          "total_records",
          "successful_imports",
          "failed_imports",
          "uploaded_at",
          "uploaded_by"
        ],
        "title": "ImportHistoryItem"
      },
      "ImportHistoryResponse": {
        "properties": {
          "imports": {
            "items": {
              "$ref": "#/components/schemas/ImportHistoryItem"
            },
            "type": "array",
            "title": "Imports",
            "description": "List of import jobs"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of imports"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Records per page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages",
            "description": "Total number of pages"
          }
        },
        "type": "object",
        "required": [
          "imports",
          "total",
          "page",
          "page_size",
          "total_pages"
        ],
        "title": "ImportHistoryResponse"
      },
      "ImportPreviewRecord": {
        "properties": {
          "row_number": {
            "type": "integer",
            "title": "Row Number",
            "description": "Row number in the source file"
          },
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data",
            "description": "Record data with mapped fields"
          },
          "validation_status": {
            "type": "string",
            "title": "Validation Status",
            "description": "Validation result: valid, warning, error"
          },
          "validation_messages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Validation Messages",
            "description": "Validation messages for this record"
          },
          "is_duplicate": {
            "type": "boolean",
            "title": "Is Duplicate",
            "description": "Whether this record appears to be a duplicate",
            "default": false
          },
          "suggested_action": {
            "type": "string",
            "title": "Suggested Action",
            "description": "Recommended action: import, skip, merge, review"
          }
        },
        "type": "object",
        "required": [
          "row_number",
          "data",
          "validation_status",
          "validation_messages",
          "suggested_action"
        ],
        "title": "ImportPreviewRecord"
      },
      "ImportPreviewRequest": {
        "properties": {
          "field_mapping": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field Mapping",
            "description": "Custom field mapping for import"
          },
          "max_preview_records": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Max Preview Records",
            "description": "Maximum number of records to preview",
            "default": 10
          },
          "validation_level": {
            "type": "string",
            "title": "Validation Level",
            "description": "Validation strictness: strict, moderate, lenient",
            "default": "moderate"
          }
        },
        "type": "object",
        "title": "ImportPreviewRequest"
      },
      "ImportPreviewResponse": {
        "properties": {
          "import_id": {
            "type": "string",
            "title": "Import Id",
            "description": "Import job identifier"
          },
          "preview_records": {
            "items": {
              "$ref": "#/components/schemas/ImportPreviewRecord"
            },
            "type": "array",
            "title": "Preview Records",
            "description": "Sample records from the import"
          },
          "total_records": {
            "type": "integer",
            "title": "Total Records",
            "description": "Total number of records in the file"
          },
          "field_mapping": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Field Mapping",
            "description": "Suggested or confirmed field mapping"
          },
          "validation_results": {
            "$ref": "#/components/schemas/ImportValidationResult",
            "description": "Overall validation results"
          },
          "potential_duplicates": {
            "type": "integer",
            "title": "Potential Duplicates",
            "description": "Number of potential duplicate records"
          },
          "data_quality_issues": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Quality Issues",
            "description": "Data quality concerns identified"
          },
          "import_recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Import Recommendations",
            "description": "Recommendations for successful import"
          },
          "estimated_duration": {
            "type": "string",
            "title": "Estimated Duration",
            "description": "Estimated time to complete import"
          }
        },
        "type": "object",
        "required": [
          "import_id",
          "preview_records",
          "total_records",
          "field_mapping",
          "validation_results",
          "potential_duplicates",
          "data_quality_issues",
          "import_recommendations",
          "estimated_duration"
        ],
        "title": "ImportPreviewResponse"
      },
      "ImportRollbackRequest": {
        "properties": {
          "rollback_type": {
            "type": "string",
            "title": "Rollback Type",
            "description": "Type of rollback: soft_delete, hard_delete, deactivate"
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Reason",
            "description": "Reason for rollback"
          },
          "selective_criteria": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selective Criteria",
            "description": "Criteria for selective rollback"
          },
          "confirm_rollback": {
            "type": "boolean",
            "title": "Confirm Rollback",
            "description": "Confirmation that rollback is intended"
          }
        },
        "type": "object",
        "required": [
          "rollback_type",
          "reason",
          "confirm_rollback"
        ],
        "title": "ImportRollbackRequest"
      },
      "ImportRollbackResponse": {
        "properties": {
          "import_id": {
            "type": "string",
            "title": "Import Id",
            "description": "Import job identifier"
          },
          "rollback_id": {
            "type": "string",
            "title": "Rollback Id",
            "description": "Unique rollback operation identifier"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Rollback status"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Rollback status message"
          },
          "rollback_type": {
            "type": "string",
            "title": "Rollback Type",
            "description": "Type of rollback being performed"
          },
          "started_at": {
            "type": "string",
            "title": "Started At",
            "description": "Rollback start timestamp"
          }
        },
        "type": "object",
        "required": [
          "import_id",
          "rollback_id",
          "status",
          "message",
          "rollback_type",
          "started_at"
        ],
        "title": "ImportRollbackResponse"
      },
      "ImportSourceType": {
        "type": "string",
        "enum": [
          "booksy",
          "square",
          "acuity",
          "mindbody",
          "csv",
          "json"
        ],
        "title": "ImportSourceType"
      },
      "ImportStatusResponse": {
        "properties": {
          "import_id": {
            "type": "string",
            "title": "Import Id",
            "description": "Unique identifier for the import job"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename",
            "description": "Original filename"
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "Import source type"
          },
          "import_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Import Type",
            "description": "Type of data being imported"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Current status: uploaded, validating, validated, importing, completed, failed"
          },
          "progress": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Progress",
            "description": "Progress percentage (0-100)"
          },
          "total_records": {
            "type": "integer",
            "title": "Total Records",
            "description": "Total number of records in the file"
          },
          "processed_records": {
            "type": "integer",
            "title": "Processed Records",
            "description": "Number of records processed so far"
          },
          "successful_imports": {
            "type": "integer",
            "title": "Successful Imports",
            "description": "Number of successfully imported records"
          },
          "failed_imports": {
            "type": "integer",
            "title": "Failed Imports",
            "description": "Number of failed import attempts"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "description": "List of error messages"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings",
            "description": "List of warning messages"
          },
          "uploaded_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uploaded At",
            "description": "Upload timestamp"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "Import start timestamp"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Import completion timestamp"
          },
          "estimated_completion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Completion",
            "description": "Estimated completion time"
          }
        },
        "type": "object",
        "required": [
          "import_id",
          "status",
          "progress",
          "total_records",
          "processed_records",
          "successful_imports",
          "failed_imports",
          "errors",
          "warnings"
        ],
        "title": "ImportStatusResponse"
      },
      "ImportUploadResponse": {
        "properties": {
          "import_id": {
            "type": "string",
            "title": "Import Id",
            "description": "Unique identifier for the import job"
          },
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Original filename"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type",
            "description": "Type of import source (booksy, square, csv, etc.)"
          },
          "import_type": {
            "type": "string",
            "title": "Import Type",
            "description": "Type of data being imported (clients, appointments, etc.)"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size",
            "description": "File size in bytes"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Current import status"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success or status message"
          },
          "uploaded_at": {
            "type": "string",
            "title": "Uploaded At",
            "description": "Upload timestamp"
          }
        },
        "type": "object",
        "required": [
          "import_id",
          "filename",
          "source_type",
          "import_type",
          "file_size",
          "status",
          "message",
          "uploaded_at"
        ],
        "title": "ImportUploadResponse"
      },
      "ImportValidationResult": {
        "properties": {
          "total_records": {
            "type": "integer",
            "title": "Total Records",
            "description": "Total number of records validated"
          },
          "valid_records": {
            "type": "integer",
            "title": "Valid Records",
            "description": "Number of valid records"
          },
          "warning_records": {
            "type": "integer",
            "title": "Warning Records",
            "description": "Number of records with warnings"
          },
          "error_records": {
            "type": "integer",
            "title": "Error Records",
            "description": "Number of records with errors"
          },
          "validation_errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Validation Errors",
            "description": "List of validation error messages"
          },
          "field_mapping_issues": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Field Mapping Issues",
            "description": "Issues with field mapping"
          }
        },
        "type": "object",
        "required": [
          "total_records",
          "valid_records",
          "warning_records",
          "error_records",
          "validation_errors",
          "field_mapping_issues"
        ],
        "title": "ImportValidationResult"
      },
      "IntegrationDisconnectResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "integration_id": {
            "type": "integer",
            "title": "Integration Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "integration_id"
        ],
        "title": "IntegrationDisconnectResponse",
        "description": "Response after disconnecting an integration"
      },
      "IntegrationHealthCheck": {
        "properties": {
          "integration_id": {
            "type": "integer",
            "title": "Integration Id"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "$ref": "#/components/schemas/IntegrationStatus"
          },
          "healthy": {
            "type": "boolean",
            "title": "Healthy"
          },
          "last_check": {
            "type": "string",
            "format": "date-time",
            "title": "Last Check"
          },
          "details": {
            "additionalProperties": true,
            "type": "object",
            "title": "Details"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "integration_id",
          "integration_type",
          "name",
          "status",
          "healthy",
          "last_check"
        ],
        "title": "IntegrationHealthCheck",
        "description": "Health check response for an integration"
      },
      "IntegrationHealthSummary": {
        "properties": {
          "total_integrations": {
            "type": "integer",
            "title": "Total Integrations"
          },
          "healthy_count": {
            "type": "integer",
            "title": "Healthy Count"
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count"
          },
          "inactive_count": {
            "type": "integer",
            "title": "Inactive Count"
          },
          "integrations": {
            "items": {
              "$ref": "#/components/schemas/IntegrationHealthCheck"
            },
            "type": "array",
            "title": "Integrations"
          },
          "checked_at": {
            "type": "string",
            "format": "date-time",
            "title": "Checked At"
          }
        },
        "type": "object",
        "required": [
          "total_integrations",
          "healthy_count",
          "error_count",
          "inactive_count",
          "integrations"
        ],
        "title": "IntegrationHealthSummary",
        "description": "Summary of all integration health checks"
      },
      "IntegrationResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "User-friendly name for the integration"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "Integration-specific configuration"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/IntegrationStatus"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes"
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url"
          },
          "last_sync_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sync At"
          },
          "last_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Error"
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_connected": {
            "type": "boolean",
            "title": "Is Connected",
            "description": "Whether the integration has valid credentials",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "integration_type",
          "id",
          "user_id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "IntegrationResponse",
        "description": "Schema for integration responses"
      },
      "IntegrationStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "error",
          "pending",
          "expired",
          "suspended"
        ],
        "title": "IntegrationStatus",
        "description": "Integration health status"
      },
      "IntegrationTokenRefreshRequest": {
        "properties": {
          "integration_id": {
            "type": "integer",
            "title": "Integration Id"
          },
          "force": {
            "type": "boolean",
            "title": "Force",
            "description": "Force token refresh even if not expired",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "integration_id"
        ],
        "title": "IntegrationTokenRefreshRequest",
        "description": "Request to refresh OAuth tokens"
      },
      "IntegrationTokenRefreshResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "IntegrationTokenRefreshResponse",
        "description": "Response after token refresh"
      },
      "IntegrationType": {
        "type": "string",
        "enum": [
          "google_calendar",
          "google_my_business",
          "stripe",
          "sendgrid",
          "twilio",
          "square",
          "acuity",
          "booksy",
          "email_marketing",
          "sms_marketing",
          "custom"
        ],
        "title": "IntegrationType",
        "description": "Supported integration types"
      },
      "IntegrationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "webhook_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Url"
          }
        },
        "type": "object",
        "title": "IntegrationUpdate",
        "description": "Schema for updating an integration"
      },
      "LocationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "zip_code": {
            "type": "string",
            "title": "Zip Code"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "status": {
            "$ref": "#/components/schemas/LocationStatusEnum",
            "default": "active"
          },
          "compensation_model": {
            "$ref": "#/components/schemas/CompensationModelEnum",
            "default": "commission"
          },
          "total_chairs": {
            "type": "integer",
            "title": "Total Chairs",
            "default": 0
          },
          "active_chairs": {
            "type": "integer",
            "title": "Active Chairs",
            "default": 0
          },
          "compensation_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Compensation Config",
            "default": {}
          },
          "business_hours": {
            "additionalProperties": true,
            "type": "object",
            "title": "Business Hours",
            "default": {}
          },
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "America/New_York"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          }
        },
        "type": "object",
        "required": [
          "name",
          "code",
          "address",
          "city",
          "state",
          "zip_code"
        ],
        "title": "LocationCreate"
      },
      "LocationResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "zip_code": {
            "type": "string",
            "title": "Zip Code"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "status": {
            "$ref": "#/components/schemas/LocationStatusEnum",
            "default": "active"
          },
          "compensation_model": {
            "$ref": "#/components/schemas/CompensationModelEnum",
            "default": "commission"
          },
          "total_chairs": {
            "type": "integer",
            "title": "Total Chairs",
            "default": 0
          },
          "active_chairs": {
            "type": "integer",
            "title": "Active Chairs",
            "default": 0
          },
          "compensation_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Compensation Config",
            "default": {}
          },
          "business_hours": {
            "additionalProperties": true,
            "type": "object",
            "title": "Business Hours",
            "default": {}
          },
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "America/New_York"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "manager_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manager Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "occupancy_rate": {
            "type": "number",
            "title": "Occupancy Rate",
            "default": 0
          },
          "vacant_chairs": {
            "type": "integer",
            "title": "Vacant Chairs",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "name",
          "code",
          "address",
          "city",
          "state",
          "zip_code",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "LocationResponse"
      },
      "LocationStatusEnum": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "coming_soon",
          "closed"
        ],
        "title": "LocationStatusEnum"
      },
      "LocationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "zip_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Code"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LocationStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "compensation_model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompensationModelEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "total_chairs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Chairs"
          },
          "active_chairs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Chairs"
          },
          "compensation_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compensation Config"
          },
          "business_hours": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Hours"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          }
        },
        "type": "object",
        "title": "LocationUpdate"
      },
      "MFADisableRequest": {
        "properties": {
          "password": {
            "type": "string",
            "title": "Password"
          },
          "verification_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Code",
            "description": "Current MFA code for security"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "MFADisableRequest",
        "description": "Schema for disabling MFA."
      },
      "MFADisableResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled"
          }
        },
        "type": "object",
        "required": [
          "message",
          "disabled"
        ],
        "title": "MFADisableResponse",
        "description": "Schema for MFA disable response."
      },
      "MFAEnableRequest": {
        "properties": {
          "setup_id": {
            "type": "string",
            "title": "Setup Id"
          },
          "verification_code": {
            "type": "string",
            "title": "Verification Code"
          },
          "trust_device": {
            "type": "boolean",
            "title": "Trust Device",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "setup_id",
          "verification_code"
        ],
        "title": "MFAEnableRequest",
        "description": "Schema for enabling MFA after setup verification."
      },
      "MFAEnableResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "method": {
            "$ref": "#/components/schemas/MFAMethod"
          },
          "backup_codes_count": {
            "type": "integer",
            "title": "Backup Codes Count"
          },
          "device_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Token",
            "description": "Token for trusted device"
          }
        },
        "type": "object",
        "required": [
          "message",
          "enabled",
          "method",
          "backup_codes_count"
        ],
        "title": "MFAEnableResponse",
        "description": "Schema for MFA enable response."
      },
      "MFAEventLog": {
        "properties": {
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MFAMethod"
              },
              {
                "type": "null"
              }
            ]
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "timestamp",
          "success"
        ],
        "title": "MFAEventLog",
        "description": "Schema for MFA event logging."
      },
      "MFAEventLogsResponse": {
        "properties": {
          "events": {
            "items": {
              "$ref": "#/components/schemas/MFAEventLog"
            },
            "type": "array",
            "title": "Events"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          }
        },
        "type": "object",
        "required": [
          "events",
          "total",
          "page",
          "per_page"
        ],
        "title": "MFAEventLogsResponse",
        "description": "Schema for MFA event logs response."
      },
      "MFAMethod": {
        "type": "string",
        "enum": [
          "totp",
          "sms",
          "email",
          "backup_codes"
        ],
        "title": "MFAMethod",
        "description": "Supported MFA methods."
      },
      "MFASetupRequest": {
        "properties": {
          "method": {
            "$ref": "#/components/schemas/MFAMethod"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number",
            "description": "Required for SMS method"
          }
        },
        "type": "object",
        "required": [
          "method"
        ],
        "title": "MFASetupRequest",
        "description": "Schema for MFA setup request."
      },
      "MFASetupResponse": {
        "properties": {
          "method": {
            "$ref": "#/components/schemas/MFAMethod"
          },
          "qr_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qr Code",
            "description": "Base64 encoded QR code for TOTP"
          },
          "secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret",
            "description": "Secret key for manual TOTP setup"
          },
          "backup_codes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup Codes",
            "description": "One-time backup codes"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "requires_verification": {
            "type": "boolean",
            "title": "Requires Verification",
            "default": true
          },
          "setup_id": {
            "type": "string",
            "title": "Setup Id",
            "description": "Temporary setup ID for verification"
          }
        },
        "type": "object",
        "required": [
          "method",
          "message",
          "setup_id"
        ],
        "title": "MFASetupResponse",
        "description": "Schema for MFA setup response."
      },
      "MFAStatusResponse": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MFAMethod"
              },
              {
                "type": "null"
              }
            ]
          },
          "backup_codes_remaining": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup Codes Remaining"
          },
          "trusted_devices_count": {
            "type": "integer",
            "title": "Trusted Devices Count"
          },
          "last_verified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Verified"
          }
        },
        "type": "object",
        "required": [
          "enabled",
          "trusted_devices_count"
        ],
        "title": "MFAStatusResponse",
        "description": "Schema for MFA status check response."
      },
      "MFAVerificationRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MFAMethod"
              },
              {
                "type": "null"
              }
            ]
          },
          "remember_device": {
            "type": "boolean",
            "title": "Remember Device",
            "default": false
          },
          "device_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name",
            "description": "Name for the device to remember"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "MFAVerificationRequest",
        "description": "Schema for MFA verification during login."
      },
      "MFAVerificationResponse": {
        "properties": {
          "verified": {
            "type": "boolean",
            "title": "Verified"
          },
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "device_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Token",
            "description": "Token for trusted device"
          },
          "mfa_session_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mfa Session Token",
            "description": "MFA session token for admin operations"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "verified",
          "message"
        ],
        "title": "MFAVerificationResponse",
        "description": "Schema for MFA verification response."
      },
      "MarketingCampaignCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "campaign_type": {
            "type": "string",
            "title": "Campaign Type",
            "description": "email or sms"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "Marketing template to use"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "Email subject (required for email campaigns)"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Campaign content (plain text or HTML for email)"
          },
          "recipient_list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient List Id",
            "description": "Contact list to send to"
          },
          "recipient_segment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Segment Id",
            "description": "Segment to send to"
          },
          "scheduled_for": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled For",
            "description": "Schedule for future sending"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "name",
          "campaign_type",
          "content"
        ],
        "title": "MarketingCampaignCreate",
        "description": "Create a new marketing campaign"
      },
      "MarketingCampaignListResponse": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/MarketingCampaignResponse"
            },
            "type": "array",
            "title": "Campaigns"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "skip": {
            "type": "integer",
            "title": "Skip"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          }
        },
        "type": "object",
        "required": [
          "campaigns",
          "total",
          "skip",
          "limit"
        ],
        "title": "MarketingCampaignListResponse",
        "description": "List response for marketing campaigns"
      },
      "MarketingCampaignResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "campaign_type": {
            "type": "string",
            "title": "Campaign Type"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "recipient_list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient List Id"
          },
          "recipient_segment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Segment Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "scheduled_for": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled For"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "created_by_id": {
            "type": "integer",
            "title": "Created By Id"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "default": []
          },
          "total_recipients": {
            "type": "integer",
            "title": "Total Recipients",
            "default": 0
          },
          "sent_count": {
            "type": "integer",
            "title": "Sent Count",
            "default": 0
          },
          "delivered_count": {
            "type": "integer",
            "title": "Delivered Count",
            "default": 0
          },
          "opened_count": {
            "type": "integer",
            "title": "Opened Count",
            "default": 0
          },
          "clicked_count": {
            "type": "integer",
            "title": "Clicked Count",
            "default": 0
          },
          "bounced_count": {
            "type": "integer",
            "title": "Bounced Count",
            "default": 0
          },
          "unsubscribed_count": {
            "type": "integer",
            "title": "Unsubscribed Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "campaign_type",
          "content",
          "status",
          "created_at",
          "updated_at",
          "created_by_id"
        ],
        "title": "MarketingCampaignResponse",
        "description": "Marketing campaign response"
      },
      "MarketingCampaignUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "recipient_list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient List Id"
          },
          "recipient_segment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Segment Id"
          },
          "scheduled_for": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled For"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "title": "MarketingCampaignUpdate",
        "description": "Update a marketing campaign"
      },
      "MarketingTemplateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type",
            "description": "email or sms"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Template category"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "Email subject template"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Template content with variables"
          },
          "variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variables",
            "description": "Available template variables"
          },
          "preview_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Data",
            "description": "Sample data for preview"
          }
        },
        "type": "object",
        "required": [
          "name",
          "template_type",
          "content"
        ],
        "title": "MarketingTemplateCreate",
        "description": "Create a new marketing template"
      },
      "MarketingTemplateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "variables": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variables",
            "default": []
          },
          "preview_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Preview Data",
            "default": {}
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "created_by_id": {
            "type": "integer",
            "title": "Created By Id"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "template_type",
          "content",
          "is_active",
          "created_at",
          "updated_at",
          "created_by_id"
        ],
        "title": "MarketingTemplateResponse",
        "description": "Marketing template response"
      },
      "MarketingTemplateUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variables"
          },
          "preview_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Data"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "MarketingTemplateUpdate",
        "description": "Update a marketing template"
      },
      "MarketingUsageResponse": {
        "properties": {
          "period": {
            "type": "string",
            "title": "Period"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "emails_sent": {
            "type": "integer",
            "title": "Emails Sent"
          },
          "email_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Limit"
          },
          "email_usage_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Usage Percentage"
          },
          "sms_sent": {
            "type": "integer",
            "title": "Sms Sent"
          },
          "sms_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Limit"
          },
          "sms_usage_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Usage Percentage"
          },
          "campaigns_created": {
            "type": "integer",
            "title": "Campaigns Created"
          },
          "campaigns_sent": {
            "type": "integer",
            "title": "Campaigns Sent"
          },
          "total_contacts": {
            "type": "integer",
            "title": "Total Contacts"
          },
          "new_contacts": {
            "type": "integer",
            "title": "New Contacts"
          },
          "unsubscribed_contacts": {
            "type": "integer",
            "title": "Unsubscribed Contacts"
          },
          "estimated_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Cost"
          },
          "cost_breakdown": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Breakdown"
          }
        },
        "type": "object",
        "required": [
          "period",
          "start_date",
          "end_date",
          "emails_sent",
          "sms_sent",
          "campaigns_created",
          "campaigns_sent",
          "total_contacts",
          "new_contacts",
          "unsubscribed_contacts"
        ],
        "title": "MarketingUsageResponse",
        "description": "Marketing usage statistics"
      },
      "NextAvailableSlot": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date in YYYY-MM-DD format"
          },
          "time": {
            "type": "string",
            "title": "Time",
            "description": "Time in HH:MM format"
          },
          "datetime": {
            "type": "string",
            "title": "Datetime",
            "description": "Combined datetime in ISO format"
          }
        },
        "type": "object",
        "required": [
          "date",
          "time",
          "datetime"
        ],
        "title": "NextAvailableSlot"
      },
      "NotificationHistoryResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "notification_type": {
            "type": "string",
            "title": "Notification Type"
          },
          "template_name": {
            "type": "string",
            "title": "Template Name"
          },
          "recipient": {
            "type": "string",
            "title": "Recipient"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "scheduled_for": {
            "type": "string",
            "format": "date-time",
            "title": "Scheduled For"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At"
          },
          "attempts": {
            "type": "integer",
            "title": "Attempts"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "notification_type",
          "template_name",
          "recipient",
          "subject",
          "status",
          "scheduled_for",
          "sent_at",
          "attempts",
          "error_message",
          "created_at"
        ],
        "title": "NotificationHistoryResponse"
      },
      "NotificationPreferenceCreate": {
        "properties": {
          "email_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Enabled",
            "default": true
          },
          "email_appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Appointment Confirmation",
            "default": true
          },
          "email_appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Appointment Reminder",
            "default": true
          },
          "email_appointment_changes": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Appointment Changes",
            "default": true
          },
          "email_marketing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Marketing",
            "default": false
          },
          "sms_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Enabled",
            "default": true
          },
          "sms_appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Appointment Confirmation",
            "default": true
          },
          "sms_appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Appointment Reminder",
            "default": true
          },
          "sms_appointment_changes": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Appointment Changes",
            "default": true
          },
          "sms_marketing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Marketing",
            "default": false
          },
          "reminder_hours": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reminder Hours",
            "default": [
              24,
              2
            ]
          }
        },
        "type": "object",
        "title": "NotificationPreferenceCreate"
      },
      "NotificationPreferenceResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "email_enabled": {
            "type": "boolean",
            "title": "Email Enabled"
          },
          "email_appointment_confirmation": {
            "type": "boolean",
            "title": "Email Appointment Confirmation"
          },
          "email_appointment_reminder": {
            "type": "boolean",
            "title": "Email Appointment Reminder"
          },
          "email_appointment_changes": {
            "type": "boolean",
            "title": "Email Appointment Changes"
          },
          "email_marketing": {
            "type": "boolean",
            "title": "Email Marketing"
          },
          "sms_enabled": {
            "type": "boolean",
            "title": "Sms Enabled"
          },
          "sms_appointment_confirmation": {
            "type": "boolean",
            "title": "Sms Appointment Confirmation"
          },
          "sms_appointment_reminder": {
            "type": "boolean",
            "title": "Sms Appointment Reminder"
          },
          "sms_appointment_changes": {
            "type": "boolean",
            "title": "Sms Appointment Changes"
          },
          "sms_marketing": {
            "type": "boolean",
            "title": "Sms Marketing"
          },
          "reminder_hours": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Reminder Hours"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "email_enabled",
          "email_appointment_confirmation",
          "email_appointment_reminder",
          "email_appointment_changes",
          "email_marketing",
          "sms_enabled",
          "sms_appointment_confirmation",
          "sms_appointment_reminder",
          "sms_appointment_changes",
          "sms_marketing",
          "reminder_hours",
          "created_at",
          "updated_at"
        ],
        "title": "NotificationPreferenceResponse"
      },
      "NotificationPreferencesResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "email_enabled": {
            "type": "boolean",
            "title": "Email Enabled"
          },
          "sms_enabled": {
            "type": "boolean",
            "title": "Sms Enabled"
          },
          "timezone": {
            "type": "string",
            "title": "Timezone"
          },
          "email_preferences": {
            "$ref": "#/components/schemas/EmailPreferences"
          },
          "sms_preferences": {
            "$ref": "#/components/schemas/SMSPreferences"
          },
          "advanced_settings": {
            "$ref": "#/components/schemas/AdvancedSettings"
          },
          "compliance": {
            "$ref": "#/components/schemas/ComplianceInfo"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "email_enabled",
          "sms_enabled",
          "timezone",
          "email_preferences",
          "sms_preferences",
          "advanced_settings",
          "compliance"
        ],
        "title": "NotificationPreferencesResponse",
        "description": "Complete notification preferences response"
      },
      "NotificationPreferencesUpdate": {
        "properties": {
          "email_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Enabled"
          },
          "sms_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Enabled"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "email_preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmailPreferences"
              },
              {
                "type": "null"
              }
            ]
          },
          "sms_preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SMSPreferences"
              },
              {
                "type": "null"
              }
            ]
          },
          "advanced_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AdvancedSettings"
              },
              {
                "type": "null"
              }
            ]
          },
          "marketing_consent": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Marketing Consent"
          },
          "data_processing_consent": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Processing Consent"
          }
        },
        "type": "object",
        "title": "NotificationPreferencesUpdate",
        "description": "Update notification preferences request"
      },
      "NotificationStatsResponse": {
        "properties": {
          "period_days": {
            "type": "integer",
            "title": "Period Days"
          },
          "since_date": {
            "type": "string",
            "title": "Since Date"
          },
          "email": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Email"
          },
          "sms": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Sms"
          },
          "service_stats": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Stats"
          },
          "user_specific": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Specific",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "period_days",
          "since_date",
          "email",
          "sms"
        ],
        "title": "NotificationStatsResponse"
      },
      "NotificationTemplateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "variables": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variables"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "template_type",
          "subject",
          "variables",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "NotificationTemplateResponse"
      },
      "OAuthCallbackResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "integration_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url",
            "description": "URL to redirect user after OAuth completion"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "OAuthCallbackResponse",
        "description": "Response after OAuth callback processing"
      },
      "OAuthInitiateRequest": {
        "properties": {
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "redirect_uri": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Uri",
            "description": "Custom redirect URI after OAuth completion"
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes",
            "description": "Additional OAuth scopes to request"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State parameter for OAuth security"
          }
        },
        "type": "object",
        "required": [
          "integration_type"
        ],
        "title": "OAuthInitiateRequest",
        "description": "Request to initiate OAuth flow"
      },
      "PasswordResetConfirm": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "PasswordResetConfirm"
      },
      "PasswordResetRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "PasswordResetRequest"
      },
      "PasswordResetResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "PasswordResetResponse"
      },
      "PaymentConfirm": {
        "properties": {
          "payment_intent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Intent Id"
          },
          "booking_id": {
            "type": "integer",
            "title": "Booking Id"
          }
        },
        "type": "object",
        "required": [
          "payment_intent_id",
          "booking_id"
        ],
        "title": "PaymentConfirm"
      },
      "PaymentHistoryResponse": {
        "properties": {
          "payments": {
            "items": {
              "$ref": "#/components/schemas/PaymentResponse"
            },
            "type": "array",
            "title": "Payments"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "payments",
          "total",
          "page",
          "page_size",
          "total_pages"
        ],
        "title": "PaymentHistoryResponse"
      },
      "PaymentIntentCreate": {
        "properties": {
          "booking_id": {
            "type": "integer",
            "title": "Booking Id"
          },
          "gift_certificate_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gift Certificate Code"
          }
        },
        "type": "object",
        "required": [
          "booking_id"
        ],
        "title": "PaymentIntentCreate"
      },
      "PaymentIntentResponse": {
        "properties": {
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          },
          "payment_intent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Intent Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "original_amount": {
            "type": "number",
            "title": "Original Amount"
          },
          "gift_certificate_used": {
            "type": "number",
            "title": "Gift Certificate Used"
          },
          "payment_id": {
            "type": "integer",
            "title": "Payment Id"
          }
        },
        "type": "object",
        "required": [
          "client_secret",
          "payment_intent_id",
          "amount",
          "original_amount",
          "gift_certificate_used",
          "payment_id"
        ],
        "title": "PaymentIntentResponse"
      },
      "PaymentReportRequest": {
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date"
        ],
        "title": "PaymentReportRequest"
      },
      "PaymentReportResponse": {
        "properties": {
          "period": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Period"
          },
          "revenue": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Revenue"
          },
          "commissions": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Commissions"
          },
          "transactions": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Transactions"
          },
          "averages": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Averages"
          }
        },
        "type": "object",
        "required": [
          "period",
          "revenue",
          "commissions",
          "transactions",
          "averages"
        ],
        "title": "PaymentReportResponse"
      },
      "PaymentResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "stripe_payment_intent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Payment Intent Id"
          },
          "platform_fee": {
            "type": "number",
            "title": "Platform Fee"
          },
          "barber_amount": {
            "type": "number",
            "title": "Barber Amount"
          },
          "commission_rate": {
            "type": "number",
            "title": "Commission Rate"
          },
          "refund_amount": {
            "type": "number",
            "title": "Refund Amount"
          },
          "gift_certificate_amount_used": {
            "type": "number",
            "title": "Gift Certificate Amount Used"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "amount",
          "status",
          "stripe_payment_intent_id",
          "platform_fee",
          "barber_amount",
          "commission_rate",
          "refund_amount",
          "gift_certificate_amount_used",
          "created_at"
        ],
        "title": "PaymentResponse"
      },
      "PayoutCreate": {
        "properties": {
          "barber_id": {
            "type": "integer",
            "title": "Barber Id"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          }
        },
        "type": "object",
        "required": [
          "barber_id",
          "start_date",
          "end_date"
        ],
        "title": "PayoutCreate"
      },
      "PayoutResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "barber_id": {
            "type": "integer",
            "title": "Barber Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End"
          },
          "payment_count": {
            "type": "integer",
            "title": "Payment Count"
          },
          "stripe_transfer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Transfer Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "barber_id",
          "amount",
          "status",
          "period_start",
          "period_end",
          "payment_count",
          "stripe_transfer_id",
          "created_at",
          "processed_at"
        ],
        "title": "PayoutResponse"
      },
      "PlatformTestRequest": {
        "properties": {
          "platform": {
            "type": "string",
            "title": "Platform",
            "description": "Platform to test (gtm, meta, google_ads)"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config",
            "description": "Platform-specific configuration"
          }
        },
        "type": "object",
        "required": [
          "platform",
          "config"
        ],
        "title": "PlatformTestRequest",
        "description": "Schema for testing platform connections"
      },
      "PlatformTestResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "PlatformTestResponse",
        "description": "Schema for platform test response"
      },
      "PredictionRequest": {
        "properties": {
          "prediction_type": {
            "type": "string",
            "title": "Prediction Type",
            "description": "Type: revenue_forecast, churn_prediction, demand_patterns, pricing_optimization"
          },
          "months_ahead": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Months Ahead",
            "description": "Months to predict ahead (for forecasting)",
            "default": 6
          },
          "include_seasonal": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Seasonal",
            "description": "Include seasonal adjustments",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "prediction_type"
        ],
        "title": "PredictionRequest",
        "description": "Request model for predictions"
      },
      "PrivacySettings": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "consents": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ConsentStatus"
            },
            "type": "object",
            "title": "Consents",
            "description": "Current consent status by type"
          },
          "cookie_preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CookiePreferences"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_export_available": {
            "type": "boolean",
            "title": "Data Export Available",
            "description": "Whether user can request data export",
            "default": true
          },
          "pending_export_request": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pending Export Request",
            "description": "Request ID if export is pending"
          },
          "last_privacy_review": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Privacy Review"
          },
          "gdpr_compliant": {
            "type": "boolean",
            "title": "Gdpr Compliant",
            "description": "Whether all required consents are in place",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "email"
        ],
        "title": "PrivacySettings",
        "description": "User's current privacy settings and status"
      },
      "QuickAppointmentCreate": {
        "properties": {
          "service": {
            "type": "string",
            "title": "Service",
            "description": "Service type for the appointment",
            "example": "Haircut"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Optional special instructions or notes",
            "example": "Please use scissors only"
          }
        },
        "type": "object",
        "required": [
          "service"
        ],
        "title": "QuickAppointmentCreate",
        "description": "Quick appointment creation - standardized schema"
      },
      "RecurringPatternCreate": {
        "properties": {
          "pattern_type": {
            "type": "string",
            "title": "Pattern Type",
            "description": "daily, weekly, biweekly, monthly"
          },
          "days_of_week": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Of Week",
            "description": "Days of week for weekly patterns"
          },
          "day_of_month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 31.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Day Of Month",
            "description": "Day of month for monthly patterns"
          },
          "week_of_month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Week Of Month",
            "description": "Week of month for monthly patterns"
          },
          "preferred_time": {
            "type": "string",
            "format": "time",
            "title": "Preferred Time",
            "description": "Preferred appointment time"
          },
          "duration_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 15.0,
            "title": "Duration Minutes",
            "description": "Duration in minutes"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "Start date for recurring pattern"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "End date (optional)"
          },
          "occurrences": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Occurrences",
            "description": "Number of occurrences (alternative to end_date)"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          },
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id"
          }
        },
        "type": "object",
        "required": [
          "pattern_type",
          "preferred_time",
          "duration_minutes",
          "start_date"
        ],
        "title": "RecurringPatternCreate"
      },
      "RecurringPatternResponse": {
        "properties": {
          "pattern_type": {
            "type": "string",
            "title": "Pattern Type",
            "description": "daily, weekly, biweekly, monthly"
          },
          "days_of_week": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Of Week",
            "description": "Days of week for weekly patterns"
          },
          "day_of_month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 31.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Day Of Month",
            "description": "Day of month for monthly patterns"
          },
          "week_of_month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Week Of Month",
            "description": "Week of month for monthly patterns"
          },
          "preferred_time": {
            "type": "string",
            "format": "time",
            "title": "Preferred Time",
            "description": "Preferred appointment time"
          },
          "duration_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 15.0,
            "title": "Duration Minutes",
            "description": "Duration in minutes"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "Start date for recurring pattern"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "End date (optional)"
          },
          "occurrences": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Occurrences",
            "description": "Number of occurrences (alternative to end_date)"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          },
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "pattern_type",
          "preferred_time",
          "duration_minutes",
          "start_date",
          "id",
          "user_id",
          "client_id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "RecurringPatternResponse"
      },
      "RecurringPatternUpdate": {
        "properties": {
          "pattern_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pattern Type"
          },
          "days_of_week": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Of Week"
          },
          "day_of_month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 31.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Day Of Month"
          },
          "week_of_month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Week Of Month"
          },
          "preferred_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Time"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 15.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "occurrences": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Occurrences"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id"
          },
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "RecurringPatternUpdate"
      },
      "RecurringSeriesCreate": {
        "properties": {
          "series_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Name"
          },
          "series_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Description"
          },
          "payment_type": {
            "type": "string",
            "title": "Payment Type",
            "description": "Payment type for series",
            "default": "per_appointment"
          },
          "total_series_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Series Price"
          },
          "pattern_id": {
            "type": "integer",
            "title": "Pattern Id"
          }
        },
        "type": "object",
        "required": [
          "pattern_id"
        ],
        "title": "RecurringSeriesCreate"
      },
      "RecurringSeriesResponse": {
        "properties": {
          "series_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Name"
          },
          "series_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Description"
          },
          "payment_type": {
            "type": "string",
            "title": "Payment Type",
            "description": "Payment type for series",
            "default": "per_appointment"
          },
          "total_series_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Series Price"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "pattern_id": {
            "type": "integer",
            "title": "Pattern Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "paid_amount": {
            "type": "number",
            "title": "Paid Amount"
          },
          "payment_status": {
            "type": "string",
            "title": "Payment Status"
          },
          "total_planned": {
            "type": "integer",
            "title": "Total Planned"
          },
          "total_completed": {
            "type": "integer",
            "title": "Total Completed"
          },
          "total_cancelled": {
            "type": "integer",
            "title": "Total Cancelled"
          },
          "total_rescheduled": {
            "type": "integer",
            "title": "Total Rescheduled"
          },
          "series_status": {
            "type": "string",
            "title": "Series Status"
          },
          "completion_percentage": {
            "type": "number",
            "title": "Completion Percentage"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "pattern_id",
          "user_id",
          "paid_amount",
          "payment_status",
          "total_planned",
          "total_completed",
          "total_cancelled",
          "total_rescheduled",
          "series_status",
          "completion_percentage",
          "created_at",
          "updated_at",
          "completed_at"
        ],
        "title": "RecurringSeriesResponse"
      },
      "RecurringSeriesUpdate": {
        "properties": {
          "series_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Name"
          },
          "series_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Description"
          },
          "payment_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Type"
          },
          "total_series_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Series Price"
          },
          "series_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Status"
          }
        },
        "type": "object",
        "title": "RecurringSeriesUpdate"
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest"
      },
      "RefundCreate": {
        "properties": {
          "payment_id": {
            "type": "integer",
            "title": "Payment Id"
          },
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount",
            "description": "Refund amount must be greater than 0"
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Reason",
            "description": "Reason for refund"
          }
        },
        "type": "object",
        "required": [
          "payment_id",
          "amount",
          "reason"
        ],
        "title": "RefundCreate"
      },
      "RefundResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "payment_id": {
            "type": "integer",
            "title": "Payment Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "stripe_refund_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Refund Id"
          },
          "initiated_by_id": {
            "type": "integer",
            "title": "Initiated By Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "payment_id",
          "amount",
          "reason",
          "status",
          "stripe_refund_id",
          "initiated_by_id",
          "created_at",
          "processed_at"
        ],
        "title": "RefundResponse"
      },
      "RegistrationResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object",
        "required": [
          "message",
          "user"
        ],
        "title": "RegistrationResponse"
      },
      "ReviewAnalytics": {
        "properties": {
          "total_reviews": {
            "type": "integer",
            "title": "Total Reviews",
            "default": 0
          },
          "average_rating": {
            "type": "number",
            "title": "Average Rating",
            "default": 0.0
          },
          "rating_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Rating Distribution"
          },
          "platform_breakdown": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Platform Breakdown"
          },
          "sentiment_breakdown": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Sentiment Breakdown"
          },
          "positive_percentage": {
            "type": "number",
            "title": "Positive Percentage",
            "default": 0.0
          },
          "negative_percentage": {
            "type": "number",
            "title": "Negative Percentage",
            "default": 0.0
          },
          "response_rate": {
            "type": "number",
            "title": "Response Rate",
            "default": 0.0
          },
          "avg_response_time_hours": {
            "type": "number",
            "title": "Avg Response Time Hours",
            "default": 0.0
          },
          "auto_response_percentage": {
            "type": "number",
            "title": "Auto Response Percentage",
            "default": 0.0
          },
          "reviews_this_month": {
            "type": "integer",
            "title": "Reviews This Month",
            "default": 0
          },
          "reviews_last_month": {
            "type": "integer",
            "title": "Reviews Last Month",
            "default": 0
          },
          "month_over_month_change": {
            "type": "number",
            "title": "Month Over Month Change",
            "default": 0.0
          },
          "verified_reviews_count": {
            "type": "integer",
            "title": "Verified Reviews Count",
            "default": 0
          },
          "flagged_reviews_count": {
            "type": "integer",
            "title": "Flagged Reviews Count",
            "default": 0
          },
          "helpful_reviews_count": {
            "type": "integer",
            "title": "Helpful Reviews Count",
            "default": 0
          },
          "top_keywords": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Keywords"
          },
          "services_mentioned": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Services Mentioned"
          },
          "competitor_mentions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Competitor Mentions"
          }
        },
        "type": "object",
        "title": "ReviewAnalytics",
        "description": "Review analytics summary"
      },
      "ReviewPlatform": {
        "type": "string",
        "enum": [
          "google",
          "yelp",
          "facebook",
          "instagram",
          "booksy",
          "fresha",
          "styleseat",
          "other"
        ],
        "title": "ReviewPlatform",
        "description": "Supported review platforms"
      },
      "ReviewResponse": {
        "properties": {
          "platform": {
            "$ref": "#/components/schemas/ReviewPlatform"
          },
          "external_review_id": {
            "type": "string",
            "title": "External Review Id",
            "description": "Platform-specific review ID"
          },
          "business_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Id"
          },
          "reviewer_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewer Name"
          },
          "rating": {
            "type": "number",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating",
            "description": "1-5 star rating"
          },
          "review_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Text",
            "description": "Review content"
          },
          "review_date": {
            "type": "string",
            "format": "date-time",
            "title": "Review Date"
          },
          "review_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Url",
            "description": "Direct link to review"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "reviewer_photo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewer Photo Url"
          },
          "sentiment": {
            "$ref": "#/components/schemas/ReviewSentiment"
          },
          "sentiment_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sentiment Score"
          },
          "sentiment_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sentiment Confidence"
          },
          "sentiment_keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sentiment Keywords"
          },
          "response_status": {
            "$ref": "#/components/schemas/ReviewResponseStatus"
          },
          "response_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Text"
          },
          "response_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Date"
          },
          "response_author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Author"
          },
          "auto_response_generated": {
            "type": "boolean",
            "title": "Auto Response Generated",
            "default": false
          },
          "keywords_mentioned": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Keywords Mentioned"
          },
          "services_mentioned": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Services Mentioned"
          },
          "competitor_mentions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Competitor Mentions"
          },
          "location_mentions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Location Mentions"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "is_flagged": {
            "type": "boolean",
            "title": "Is Flagged",
            "default": false
          },
          "flag_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Flag Reason"
          },
          "is_helpful": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Helpful"
          },
          "helpful_count": {
            "type": "integer",
            "title": "Helpful Count",
            "default": 0
          },
          "last_synced_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Synced At"
          },
          "is_deleted_on_platform": {
            "type": "boolean",
            "title": "Is Deleted On Platform",
            "default": false
          },
          "sync_errors": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Sync Errors"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_positive": {
            "type": "boolean",
            "title": "Is Positive",
            "description": "Whether review is positive",
            "default": false
          },
          "is_negative": {
            "type": "boolean",
            "title": "Is Negative",
            "description": "Whether review is negative",
            "default": false
          },
          "needs_response": {
            "type": "boolean",
            "title": "Needs Response",
            "description": "Whether review needs a response",
            "default": false
          },
          "can_respond": {
            "type": "boolean",
            "title": "Can Respond",
            "description": "Whether we can respond to this review",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "platform",
          "external_review_id",
          "rating",
          "review_date",
          "id",
          "user_id",
          "sentiment",
          "response_status",
          "created_at",
          "updated_at"
        ],
        "title": "ReviewResponse",
        "description": "Schema for review responses"
      },
      "ReviewResponseCreate": {
        "properties": {
          "response_text": {
            "type": "string",
            "maxLength": 4096,
            "minLength": 1,
            "title": "Response Text"
          },
          "response_type": {
            "type": "string",
            "title": "Response Type",
            "description": "Type of response",
            "default": "custom"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "Template used for response"
          },
          "keywords_used": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords Used"
          },
          "cta_included": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cta Included",
            "default": false
          },
          "business_name_mentioned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Name Mentioned",
            "default": false
          },
          "variant_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variant Id",
            "description": "A/B test variant"
          },
          "test_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Group",
            "description": "Test group"
          }
        },
        "type": "object",
        "required": [
          "response_text"
        ],
        "title": "ReviewResponseCreate",
        "description": "Schema for creating a review response"
      },
      "ReviewResponseSchema": {
        "properties": {
          "response_text": {
            "type": "string",
            "maxLength": 4096,
            "minLength": 1,
            "title": "Response Text"
          },
          "response_type": {
            "type": "string",
            "title": "Response Type",
            "description": "Type of response",
            "default": "custom"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "Template used for response"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "review_id": {
            "type": "integer",
            "title": "Review Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": true
          },
          "is_sent": {
            "type": "boolean",
            "title": "Is Sent",
            "default": false
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At"
          },
          "platform_response_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform Response Id"
          },
          "keywords_used": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Keywords Used"
          },
          "cta_included": {
            "type": "boolean",
            "title": "Cta Included",
            "default": false
          },
          "business_name_mentioned": {
            "type": "boolean",
            "title": "Business Name Mentioned",
            "default": false
          },
          "view_count": {
            "type": "integer",
            "title": "View Count",
            "default": 0
          },
          "helpful_votes": {
            "type": "integer",
            "title": "Helpful Votes",
            "default": 0
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count",
            "default": 0
          },
          "variant_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variant Id"
          },
          "test_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Group"
          },
          "send_errors": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Send Errors"
          },
          "last_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Error"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_ready_to_send": {
            "type": "boolean",
            "title": "Is Ready To Send",
            "description": "Whether response is ready to send",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "response_text",
          "id",
          "review_id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "ReviewResponseSchema",
        "description": "Schema for review response display"
      },
      "ReviewResponseStatus": {
        "type": "string",
        "enum": [
          "pending",
          "sent",
          "failed",
          "not_needed",
          "draft"
        ],
        "title": "ReviewResponseStatus",
        "description": "Status of review response"
      },
      "ReviewResponseUpdate": {
        "properties": {
          "response_text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Text"
          },
          "is_draft": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Draft"
          },
          "keywords_used": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords Used"
          },
          "cta_included": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cta Included"
          },
          "business_name_mentioned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Name Mentioned"
          }
        },
        "type": "object",
        "title": "ReviewResponseUpdate",
        "description": "Schema for updating a review response"
      },
      "ReviewSentiment": {
        "type": "string",
        "enum": [
          "positive",
          "neutral",
          "negative",
          "unknown"
        ],
        "title": "ReviewSentiment",
        "description": "Review sentiment analysis results"
      },
      "ReviewSyncRequest": {
        "properties": {
          "platform": {
            "$ref": "#/components/schemas/ReviewPlatform"
          },
          "business_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Id"
          },
          "force_full_sync": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Force Full Sync",
            "default": false
          },
          "sync_responses": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Responses",
            "default": true
          },
          "date_range_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 365.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Range Days",
            "description": "Number of days to sync",
            "default": 30
          }
        },
        "type": "object",
        "required": [
          "platform"
        ],
        "title": "ReviewSyncRequest",
        "description": "Request to sync reviews from platform"
      },
      "ReviewSyncResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "synced_at": {
            "type": "string",
            "format": "date-time",
            "title": "Synced At"
          },
          "platform": {
            "$ref": "#/components/schemas/ReviewPlatform"
          },
          "business_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Id"
          },
          "reviews_synced": {
            "type": "integer",
            "title": "Reviews Synced",
            "default": 0
          },
          "new_reviews": {
            "type": "integer",
            "title": "New Reviews",
            "default": 0
          },
          "updated_reviews": {
            "type": "integer",
            "title": "Updated Reviews",
            "default": 0
          },
          "errors_count": {
            "type": "integer",
            "title": "Errors Count",
            "default": 0
          },
          "total_reviews_after_sync": {
            "type": "integer",
            "title": "Total Reviews After Sync",
            "default": 0
          },
          "average_rating_after_sync": {
            "type": "number",
            "title": "Average Rating After Sync",
            "default": 0.0
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "synced_at",
          "platform"
        ],
        "title": "ReviewSyncResponse",
        "description": "Response after review sync operation"
      },
      "ReviewTemplateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "positive, negative, neutral"
          },
          "platform": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewPlatform"
              },
              {
                "type": "null"
              }
            ]
          },
          "template_text": {
            "type": "string",
            "minLength": 1,
            "title": "Template Text"
          },
          "placeholders": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Placeholders"
          },
          "min_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rating"
          },
          "max_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Rating"
          },
          "keywords_trigger": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords Trigger"
          },
          "sentiment_trigger": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewSentiment"
              },
              {
                "type": "null"
              }
            ]
          },
          "seo_keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seo Keywords"
          },
          "include_business_name": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Business Name",
            "default": true
          },
          "include_cta": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Cta",
            "default": true
          },
          "cta_text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Cta Text"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_default": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Default",
            "default": false
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "name",
          "category",
          "template_text"
        ],
        "title": "ReviewTemplateCreate",
        "description": "Schema for creating a review template"
      },
      "ReviewTemplateGenerateRequest": {
        "properties": {
          "template_id": {
            "type": "integer",
            "title": "Template Id"
          },
          "business_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Name"
          },
          "custom_placeholders": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Placeholders"
          }
        },
        "type": "object",
        "required": [
          "template_id"
        ],
        "title": "ReviewTemplateGenerateRequest",
        "description": "Request to generate response using template"
      },
      "ReviewTemplateGenerateResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "response_text": {
            "type": "string",
            "title": "Response Text"
          },
          "template_used": {
            "type": "string",
            "title": "Template Used"
          },
          "placeholders_replaced": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Placeholders Replaced"
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count"
          },
          "seo_keywords_included": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Seo Keywords Included"
          }
        },
        "type": "object",
        "required": [
          "success",
          "response_text",
          "template_used",
          "character_count"
        ],
        "title": "ReviewTemplateGenerateResponse",
        "description": "Generated response from template"
      },
      "ReviewTemplateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "positive, negative, neutral"
          },
          "platform": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewPlatform"
              },
              {
                "type": "null"
              }
            ]
          },
          "template_text": {
            "type": "string",
            "minLength": 1,
            "title": "Template Text"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "placeholders": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Placeholders"
          },
          "min_rating": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rating"
          },
          "max_rating": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Rating"
          },
          "keywords_trigger": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Keywords Trigger"
          },
          "sentiment_trigger": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewSentiment"
              },
              {
                "type": "null"
              }
            ]
          },
          "seo_keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Seo Keywords"
          },
          "include_business_name": {
            "type": "boolean",
            "title": "Include Business Name",
            "default": true
          },
          "include_cta": {
            "type": "boolean",
            "title": "Include Cta",
            "default": true
          },
          "cta_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cta Text"
          },
          "use_count": {
            "type": "integer",
            "title": "Use Count",
            "default": 0
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "default": 0.0
          },
          "avg_response_time": {
            "type": "number",
            "title": "Avg Response Time",
            "default": 0.0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "default": false
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "category",
          "template_text",
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "ReviewTemplateSchema",
        "description": "Schema for review template display"
      },
      "ReviewTemplateUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "platform": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewPlatform"
              },
              {
                "type": "null"
              }
            ]
          },
          "template_text": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Text"
          },
          "placeholders": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Placeholders"
          },
          "min_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rating"
          },
          "max_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Rating"
          },
          "keywords_trigger": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords Trigger"
          },
          "sentiment_trigger": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewSentiment"
              },
              {
                "type": "null"
              }
            ]
          },
          "seo_keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seo Keywords"
          },
          "include_business_name": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Business Name"
          },
          "include_cta": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Cta"
          },
          "cta_text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Cta Text"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_default": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Default"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          }
        },
        "type": "object",
        "title": "ReviewTemplateUpdate",
        "description": "Schema for updating a review template"
      },
      "RoleUpdate": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role",
            "description": "New role for the user"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "RoleUpdate"
      },
      "SMSConversationCreate": {
        "properties": {
          "customer_phone": {
            "type": "string",
            "title": "Customer Phone",
            "description": "Customer's actual phone number (E.164 format)"
          },
          "customer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Name",
            "description": "Customer's name if known"
          }
        },
        "type": "object",
        "required": [
          "customer_phone"
        ],
        "title": "SMSConversationCreate"
      },
      "SMSConversationResponse": {
        "properties": {
          "customer_phone": {
            "type": "string",
            "title": "Customer Phone",
            "description": "Customer's actual phone number (E.164 format)"
          },
          "customer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Name",
            "description": "Customer's name if known"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id",
            "description": "Linked client record if exists"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id",
            "description": "Assigned barber handling this conversation"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Conversation status: active, archived, blocked"
          },
          "last_message_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Message At",
            "description": "When last message was sent/received"
          },
          "last_message_from": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Message From",
            "description": "'customer' or 'business'"
          },
          "total_messages": {
            "type": "integer",
            "title": "Total Messages",
            "description": "Total messages in conversation",
            "default": 0
          },
          "unread_customer_messages": {
            "type": "integer",
            "title": "Unread Customer Messages",
            "description": "Messages from customer not yet read",
            "default": 0
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Organization tags"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Internal staff notes"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "messages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SMSMessageResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Messages",
            "description": "Recent messages in thread"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Client"
              },
              {
                "type": "null"
              }
            ],
            "description": "Linked client profile"
          },
          "barber": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ],
            "description": "Assigned barber info"
          }
        },
        "type": "object",
        "required": [
          "customer_phone",
          "id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "SMSConversationResponse"
      },
      "SMSConversationUpdate": {
        "properties": {
          "customer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Name"
          },
          "barber_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Barber Id",
            "description": "Assign conversation to specific barber"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "active, archived, or blocked"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags for organizing conversations"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Internal notes about customer"
          }
        },
        "type": "object",
        "title": "SMSConversationUpdate"
      },
      "SMSMessageCreate": {
        "properties": {
          "body": {
            "type": "string",
            "title": "Body",
            "description": "The SMS message text content"
          },
          "from_phone": {
            "type": "string",
            "title": "From Phone",
            "description": "Business phone number sending the message"
          }
        },
        "type": "object",
        "required": [
          "body",
          "from_phone"
        ],
        "title": "SMSMessageCreate"
      },
      "SMSMessageResponse": {
        "properties": {
          "body": {
            "type": "string",
            "title": "Body",
            "description": "The SMS message text content"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "conversation_id": {
            "type": "integer",
            "title": "Conversation Id"
          },
          "direction": {
            "type": "string",
            "title": "Direction",
            "description": "'inbound' from customer or 'outbound' from business"
          },
          "from_phone": {
            "type": "string",
            "title": "From Phone",
            "description": "Sender's phone number"
          },
          "to_phone": {
            "type": "string",
            "title": "To Phone",
            "description": "Recipient's phone number"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Message delivery status"
          },
          "twilio_sid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twilio Sid",
            "description": "Twilio message ID for tracking"
          },
          "sent_by_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent By User Id",
            "description": "Which staff member sent the message"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At",
            "description": "When message was sent"
          },
          "delivered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivered At",
            "description": "When message was delivered"
          },
          "read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At",
            "description": "When business read incoming message"
          },
          "failed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed At",
            "description": "When message failed to send"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code",
            "description": "Error code if message failed"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Error description if message failed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "body",
          "id",
          "conversation_id",
          "direction",
          "from_phone",
          "to_phone",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "SMSMessageResponse"
      },
      "SMSPreferences": {
        "properties": {
          "appointment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Confirmation",
            "default": true
          },
          "appointment_reminder": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Reminder",
            "default": true
          },
          "appointment_changes": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Changes",
            "default": true
          },
          "appointment_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appointment Cancellation",
            "default": true
          },
          "payment_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Confirmation",
            "default": false
          },
          "payment_failed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Failed",
            "default": true
          },
          "marketing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Marketing",
            "default": false
          },
          "promotional": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promotional",
            "default": false
          },
          "system_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Alerts",
            "default": false
          },
          "frequency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency",
            "default": "immediate"
          }
        },
        "type": "object",
        "title": "SMSPreferences",
        "description": "SMS notification preferences"
      },
      "ServiceBookingRuleCreate": {
        "properties": {
          "rule_type": {
            "type": "string",
            "title": "Rule Type",
            "description": "Type of service rule"
          },
          "min_age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Age",
            "description": "Minimum age requirement"
          },
          "max_age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Age",
            "description": "Maximum age limit"
          },
          "requires_consultation": {
            "type": "boolean",
            "title": "Requires Consultation",
            "description": "Whether consultation is required",
            "default": false
          },
          "requires_patch_test": {
            "type": "boolean",
            "title": "Requires Patch Test",
            "description": "Whether patch test is required",
            "default": false
          },
          "patch_test_hours_before": {
            "type": "integer",
            "title": "Patch Test Hours Before",
            "description": "Hours before appointment patch test is required",
            "default": 48
          },
          "max_bookings_per_day": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bookings Per Day",
            "description": "Maximum bookings per day per client"
          },
          "min_days_between_bookings": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Days Between Bookings",
            "description": "Minimum days between bookings"
          },
          "blocked_days_of_week": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked Days Of Week",
            "description": "Blocked days (0=Monday, 6=Sunday)"
          },
          "required_service_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Service Ids",
            "description": "Services that must be booked together"
          },
          "incompatible_service_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Incompatible Service Ids",
            "description": "Services that can't be booked together"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Custom message when rule applies"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the rule is active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "rule_type"
        ],
        "title": "ServiceBookingRuleCreate"
      },
      "ServiceCategoryEnum": {
        "type": "string",
        "enum": [
          "haircut",
          "shave",
          "beard",
          "hair_treatment",
          "styling",
          "color",
          "package",
          "other"
        ],
        "title": "ServiceCategoryEnum"
      },
      "ServiceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "$ref": "#/components/schemas/ServiceCategoryEnum"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "base_price": {
            "type": "number",
            "minimum": 0.0,
            "title": "Base Price"
          },
          "min_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Price"
          },
          "max_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Price"
          },
          "duration_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 5.0,
            "title": "Duration Minutes",
            "default": 30
          },
          "buffer_time_minutes": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 0.0,
            "title": "Buffer Time Minutes",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_bookable_online": {
            "type": "boolean",
            "title": "Is Bookable Online",
            "default": true
          },
          "max_advance_booking_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 365.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Advance Booking Days"
          },
          "min_advance_booking_hours": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 168.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Advance Booking Hours"
          },
          "is_package": {
            "type": "boolean",
            "title": "Is Package",
            "default": false
          },
          "package_discount_percent": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Discount Percent"
          },
          "package_discount_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Discount Amount"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order",
            "default": 0
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "package_item_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Item Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "category",
          "base_price"
        ],
        "title": "ServiceCreate"
      },
      "ServicePricingRuleCreate": {
        "properties": {
          "rule_type": {
            "type": "string",
            "title": "Rule Type"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "day_of_week": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 6.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Day Of Week"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "price_adjustment_type": {
            "type": "string",
            "title": "Price Adjustment Type"
          },
          "price_adjustment_value": {
            "type": "number",
            "title": "Price Adjustment Value"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "rule_type",
          "price_adjustment_type",
          "price_adjustment_value"
        ],
        "title": "ServicePricingRuleCreate"
      },
      "ServicePricingRuleResponse": {
        "properties": {
          "rule_type": {
            "type": "string",
            "title": "Rule Type"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "day_of_week": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 6.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Day Of Week"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "price_adjustment_type": {
            "type": "string",
            "title": "Price Adjustment Type"
          },
          "price_adjustment_value": {
            "type": "number",
            "title": "Price Adjustment Value"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "rule_type",
          "price_adjustment_type",
          "price_adjustment_value",
          "id",
          "service_id",
          "created_at"
        ],
        "title": "ServicePricingRuleResponse"
      },
      "ServiceResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "$ref": "#/components/schemas/ServiceCategoryEnum"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "base_price": {
            "type": "number",
            "minimum": 0.0,
            "title": "Base Price"
          },
          "min_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Price"
          },
          "max_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Price"
          },
          "duration_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 5.0,
            "title": "Duration Minutes",
            "default": 30
          },
          "buffer_time_minutes": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 0.0,
            "title": "Buffer Time Minutes",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_bookable_online": {
            "type": "boolean",
            "title": "Is Bookable Online",
            "default": true
          },
          "max_advance_booking_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 365.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Advance Booking Days"
          },
          "min_advance_booking_hours": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 168.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Advance Booking Hours"
          },
          "is_package": {
            "type": "boolean",
            "title": "Is Package",
            "default": false
          },
          "package_discount_percent": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Discount Percent"
          },
          "package_discount_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Discount Amount"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order",
            "default": 0
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "package_items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ServiceResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Items",
            "default": []
          },
          "pricing_rules": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ServicePricingRuleResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pricing Rules",
            "default": []
          },
          "booking_rules": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/schemas__ServiceBookingRuleResponse__1"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Rules",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "category",
          "base_price",
          "id",
          "created_at",
          "updated_at",
          "created_by_id"
        ],
        "title": "ServiceResponse"
      },
      "ServiceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceCategoryEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "base_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Price"
          },
          "min_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Price"
          },
          "max_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Price"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 5.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "buffer_time_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 60.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Buffer Time Minutes"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_bookable_online": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Bookable Online"
          },
          "max_advance_booking_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 365.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Advance Booking Days"
          },
          "min_advance_booking_hours": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 168.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Advance Booking Hours"
          },
          "is_package": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Package"
          },
          "package_discount_percent": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Discount Percent"
          },
          "package_discount_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Discount Amount"
          },
          "display_order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Order"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "package_item_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Item Ids"
          }
        },
        "type": "object",
        "title": "ServiceUpdate"
      },
      "SlotsResponse": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date for the requested slots in YYYY-MM-DD format"
          },
          "slots": {
            "items": {
              "$ref": "#/components/schemas/TimeSlotEnhanced"
            },
            "type": "array",
            "title": "Slots",
            "description": "List of available time slots for the date"
          },
          "next_available": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NextAvailableSlot"
              },
              {
                "type": "null"
              }
            ],
            "description": "Next available slot if none available on requested date"
          },
          "business_hours": {
            "$ref": "#/components/schemas/BusinessHours",
            "description": "Business operating hours"
          },
          "slot_duration_minutes": {
            "type": "integer",
            "title": "Slot Duration Minutes",
            "description": "Duration of each booking slot in minutes",
            "example": 30
          }
        },
        "type": "object",
        "required": [
          "date",
          "slots",
          "business_hours",
          "slot_duration_minutes"
        ],
        "title": "SlotsResponse"
      },
      "StripeConnectOnboardingResponse": {
        "properties": {
          "account_id": {
            "type": "string",
            "title": "Account Id"
          },
          "onboarding_url": {
            "type": "string",
            "title": "Onboarding Url"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Complete your Stripe Connect onboarding to receive payouts"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "onboarding_url"
        ],
        "title": "StripeConnectOnboardingResponse"
      },
      "StripeConnectStatusResponse": {
        "properties": {
          "connected": {
            "type": "boolean",
            "title": "Connected"
          },
          "account_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Id"
          },
          "account_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Status"
          },
          "payouts_enabled": {
            "type": "boolean",
            "title": "Payouts Enabled",
            "default": false
          },
          "details_submitted": {
            "type": "boolean",
            "title": "Details Submitted",
            "default": false
          },
          "charges_enabled": {
            "type": "boolean",
            "title": "Charges Enabled",
            "default": false
          },
          "onboarding_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Onboarding Url"
          }
        },
        "type": "object",
        "required": [
          "connected"
        ],
        "title": "StripeConnectStatusResponse"
      },
      "TimeSlotEnhanced": {
        "properties": {
          "time": {
            "type": "string",
            "title": "Time",
            "description": "Time slot in HH:MM format",
            "example": "14:30"
          },
          "available": {
            "type": "boolean",
            "title": "Available",
            "description": "Whether this time slot is available for booking"
          },
          "is_next_available": {
            "type": "boolean",
            "title": "Is Next Available",
            "description": "Whether this is the next available slot for booking",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "time",
          "available"
        ],
        "title": "TimeSlotEnhanced"
      },
      "TimezoneInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Timezone identifier (e.g., 'America/New_York')"
          },
          "offset": {
            "type": "string",
            "title": "Offset",
            "description": "Current UTC offset (e.g., '-05:00')"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "Human-readable display name"
          }
        },
        "type": "object",
        "required": [
          "name",
          "offset",
          "display_name"
        ],
        "title": "TimezoneInfo"
      },
      "TimezoneListResponse": {
        "properties": {
          "timezones": {
            "items": {
              "$ref": "#/components/schemas/TimezoneInfo"
            },
            "type": "array",
            "title": "Timezones"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "timezones",
          "total"
        ],
        "title": "TimezoneListResponse"
      },
      "TimezoneUpdate": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "description": "Valid timezone identifier (e.g., 'America/New_York')"
          }
        },
        "type": "object",
        "required": [
          "timezone"
        ],
        "title": "TimezoneUpdate"
      },
      "TimezoneUpdateRequest": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "description": "Valid timezone identifier"
          },
          "auto_detected": {
            "type": "boolean",
            "title": "Auto Detected",
            "description": "Whether this timezone was auto-detected",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "timezone"
        ],
        "title": "TimezoneUpdateRequest"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "Token"
      },
      "TopClickedUrl": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "clicks": {
            "type": "integer",
            "title": "Clicks"
          },
          "unique_clicks": {
            "type": "integer",
            "title": "Unique Clicks"
          }
        },
        "type": "object",
        "required": [
          "url",
          "clicks",
          "unique_clicks"
        ],
        "title": "TopClickedUrl",
        "description": "Top clicked URL information"
      },
      "TopClickedUrlsResponse": {
        "properties": {
          "urls": {
            "items": {
              "$ref": "#/components/schemas/TopClickedUrl"
            },
            "type": "array",
            "title": "Urls"
          }
        },
        "type": "object",
        "required": [
          "urls"
        ],
        "title": "TopClickedUrlsResponse",
        "description": "Top clicked URLs response"
      },
      "TrackingConfigResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "gtm_enabled": {
            "type": "boolean",
            "title": "Gtm Enabled"
          },
          "gtm_container_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gtm Container Id"
          },
          "meta_enabled": {
            "type": "boolean",
            "title": "Meta Enabled"
          },
          "meta_pixel_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Pixel Id"
          },
          "google_ads_enabled": {
            "type": "boolean",
            "title": "Google Ads Enabled"
          },
          "google_ads_conversion_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Ads Conversion Id"
          },
          "attribution_window_days": {
            "type": "integer",
            "title": "Attribution Window Days"
          },
          "default_attribution_model": {
            "$ref": "#/components/schemas/AttributionModel"
          },
          "enable_enhanced_conversions": {
            "type": "boolean",
            "title": "Enable Enhanced Conversions"
          },
          "hash_user_data": {
            "type": "boolean",
            "title": "Hash User Data"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "gtm_enabled",
          "gtm_container_id",
          "meta_enabled",
          "meta_pixel_id",
          "google_ads_enabled",
          "google_ads_conversion_id",
          "attribution_window_days",
          "default_attribution_model",
          "enable_enhanced_conversions",
          "hash_user_data",
          "created_at",
          "updated_at"
        ],
        "title": "TrackingConfigResponse",
        "description": "Schema for tracking configuration response"
      },
      "TrackingConfigUpdate": {
        "properties": {
          "gtm_container_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gtm Container Id"
          },
          "gtm_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gtm Enabled"
          },
          "gtm_server_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gtm Server Url"
          },
          "meta_pixel_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Pixel Id"
          },
          "meta_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Enabled"
          },
          "meta_test_event_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Test Event Code"
          },
          "google_ads_conversion_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Ads Conversion Id"
          },
          "google_ads_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Ads Enabled"
          },
          "google_ads_conversion_labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Ads Conversion Labels"
          },
          "attribution_window_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 90.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Attribution Window Days"
          },
          "default_attribution_model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttributionModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "conversion_value_rules": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Value Rules"
          },
          "excluded_domains": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded Domains"
          }
        },
        "type": "object",
        "title": "TrackingConfigUpdate",
        "description": "Schema for updating tracking configuration"
      },
      "TrustedDevice": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "last_used": {
            "type": "string",
            "format": "date-time",
            "title": "Last Used"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "last_used",
          "created_at"
        ],
        "title": "TrustedDevice",
        "description": "Schema for trusted device information."
      },
      "TrustedDevicesResponse": {
        "properties": {
          "devices": {
            "items": {
              "$ref": "#/components/schemas/TrustedDevice"
            },
            "type": "array",
            "title": "Devices"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "devices",
          "total"
        ],
        "title": "TrustedDevicesResponse",
        "description": "Schema for trusted devices list response."
      },
      "User": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "default": "user"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "default": "UTC"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "id",
          "created_at"
        ],
        "title": "User"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserLogin": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserLogin"
      },
      "UserResponse": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "default": "user"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "default": "UTC"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "id",
          "created_at"
        ],
        "title": "UserResponse",
        "description": "Enhanced user response with additional fields"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WebhookEndpointCreate": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "Webhook endpoint URL"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Friendly name for the webhook"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the webhook purpose"
          },
          "events": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Events",
            "description": "List of events to subscribe to"
          },
          "auth_type": {
            "type": "string",
            "title": "Auth Type",
            "description": "Authentication type: none, bearer, basic, hmac, api_key",
            "default": "none"
          },
          "auth_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config",
            "description": "Authentication configuration"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers",
            "description": "Additional custom headers"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the webhook is active",
            "default": true
          },
          "max_retries": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Max Retries",
            "description": "Maximum number of retry attempts",
            "default": 3
          },
          "retry_delay_seconds": {
            "type": "integer",
            "maximum": 3600.0,
            "minimum": 10.0,
            "title": "Retry Delay Seconds",
            "description": "Delay between retries in seconds",
            "default": 60
          },
          "timeout_seconds": {
            "type": "integer",
            "maximum": 120.0,
            "minimum": 5.0,
            "title": "Timeout Seconds",
            "description": "Request timeout in seconds",
            "default": 30
          }
        },
        "type": "object",
        "required": [
          "url",
          "name",
          "events"
        ],
        "title": "WebhookEndpointCreate"
      },
      "WebhookEndpointResponse": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "Webhook endpoint URL"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Friendly name for the webhook"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the webhook purpose"
          },
          "events": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Events",
            "description": "List of events to subscribe to"
          },
          "auth_type": {
            "type": "string",
            "title": "Auth Type",
            "description": "Authentication type: none, bearer, basic, hmac, api_key",
            "default": "none"
          },
          "auth_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config",
            "description": "Authentication configuration"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers",
            "description": "Additional custom headers"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the webhook is active",
            "default": true
          },
          "max_retries": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Max Retries",
            "description": "Maximum number of retry attempts",
            "default": 3
          },
          "retry_delay_seconds": {
            "type": "integer",
            "maximum": 3600.0,
            "minimum": 10.0,
            "title": "Retry Delay Seconds",
            "description": "Delay between retries in seconds",
            "default": 60
          },
          "timeout_seconds": {
            "type": "integer",
            "maximum": 120.0,
            "minimum": 5.0,
            "title": "Timeout Seconds",
            "description": "Request timeout in seconds",
            "default": 30
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "total_deliveries": {
            "type": "integer",
            "title": "Total Deliveries",
            "description": "Total webhook deliveries attempted",
            "default": 0
          },
          "successful_deliveries": {
            "type": "integer",
            "title": "Successful Deliveries",
            "description": "Number of successful deliveries",
            "default": 0
          },
          "failed_deliveries": {
            "type": "integer",
            "title": "Failed Deliveries",
            "description": "Number of failed deliveries",
            "default": 0
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "description": "Success rate percentage",
            "default": 100.0
          },
          "last_triggered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Triggered At",
            "description": "Last time webhook was triggered"
          },
          "last_success_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Success At",
            "description": "Last successful delivery"
          },
          "last_failure_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Failure At",
            "description": "Last failed delivery"
          }
        },
        "type": "object",
        "required": [
          "url",
          "name",
          "events",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "WebhookEndpointResponse"
      },
      "WebhookEndpointUpdate": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "auth_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Type"
          },
          "auth_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "max_retries": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Retries"
          },
          "retry_delay_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3600.0,
                "minimum": 10.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Retry Delay Seconds"
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 120.0,
                "minimum": 5.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds"
          }
        },
        "type": "object",
        "title": "WebhookEndpointUpdate"
      },
      "WebhookLogResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "endpoint_id": {
            "type": "string",
            "title": "Endpoint Id"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type",
            "description": "Type of event that triggered the webhook"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id",
            "description": "ID of the entity that triggered the event"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Delivery status: pending, success, failed, retrying"
          },
          "status_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Code",
            "description": "HTTP response status code"
          },
          "request_url": {
            "type": "string",
            "title": "Request Url",
            "description": "URL the request was sent to"
          },
          "request_method": {
            "type": "string",
            "title": "Request Method",
            "description": "HTTP method used",
            "default": "POST"
          },
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers",
            "description": "Request headers sent"
          },
          "request_body": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Body",
            "description": "Request payload sent"
          },
          "response_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Headers",
            "description": "Response headers received"
          },
          "response_body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Body",
            "description": "Response body received"
          },
          "response_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Time Ms",
            "description": "Response time in milliseconds"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Error message if delivery failed"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "description": "Number of retry attempts",
            "default": 0
          },
          "next_retry_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Retry At",
            "description": "When the next retry is scheduled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "delivered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivered At",
            "description": "When the webhook was delivered"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "When processing completed"
          }
        },
        "type": "object",
        "required": [
          "id",
          "endpoint_id",
          "event_type",
          "status",
          "request_url",
          "created_at"
        ],
        "title": "WebhookLogResponse"
      },
      "WebhookStatus": {
        "type": "string",
        "enum": [
          "pending",
          "success",
          "failed",
          "retrying"
        ],
        "title": "WebhookStatus",
        "description": "Status types for webhook deliveries"
      },
      "WebhookTestRequest": {
        "properties": {
          "event_type": {
            "type": "string",
            "title": "Event Type",
            "description": "Event type to test"
          }
        },
        "type": "object",
        "required": [
          "event_type"
        ],
        "title": "WebhookTestRequest"
      },
      "schemas__ServiceBookingRuleResponse__1": {
        "properties": {
          "rule_type": {
            "type": "string",
            "title": "Rule Type"
          },
          "min_age": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 150.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Age"
          },
          "max_age": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 150.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Age"
          },
          "requires_consultation": {
            "type": "boolean",
            "title": "Requires Consultation",
            "default": false
          },
          "requires_patch_test": {
            "type": "boolean",
            "title": "Requires Patch Test",
            "default": false
          },
          "patch_test_hours_before": {
            "type": "integer",
            "title": "Patch Test Hours Before",
            "default": 48
          },
          "max_bookings_per_day": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bookings Per Day"
          },
          "min_days_between_bookings": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Days Between Bookings"
          },
          "blocked_days_of_week": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked Days Of Week"
          },
          "required_service_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Service Ids"
          },
          "incompatible_service_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Incompatible Service Ids"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "rule_type",
          "id",
          "service_id",
          "created_at"
        ],
        "title": "ServiceBookingRuleResponse"
      },
      "schemas__ServiceBookingRuleResponse__2": {
        "properties": {
          "rule_type": {
            "type": "string",
            "title": "Rule Type",
            "description": "Type of service rule"
          },
          "min_age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Age",
            "description": "Minimum age requirement"
          },
          "max_age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Age",
            "description": "Maximum age limit"
          },
          "requires_consultation": {
            "type": "boolean",
            "title": "Requires Consultation",
            "description": "Whether consultation is required",
            "default": false
          },
          "requires_patch_test": {
            "type": "boolean",
            "title": "Requires Patch Test",
            "description": "Whether patch test is required",
            "default": false
          },
          "patch_test_hours_before": {
            "type": "integer",
            "title": "Patch Test Hours Before",
            "description": "Hours before appointment patch test is required",
            "default": 48
          },
          "max_bookings_per_day": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bookings Per Day",
            "description": "Maximum bookings per day per client"
          },
          "min_days_between_bookings": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Days Between Bookings",
            "description": "Minimum days between bookings"
          },
          "blocked_days_of_week": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked Days Of Week",
            "description": "Blocked days (0=Monday, 6=Sunday)"
          },
          "required_service_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Service Ids",
            "description": "Services that must be booked together"
          },
          "incompatible_service_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Incompatible Service Ids",
            "description": "Services that can't be booked together"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Custom message when rule applies"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the rule is active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "rule_type",
          "id",
          "service_id",
          "created_at"
        ],
        "title": "ServiceBookingRuleResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "http://localhost:8001",
      "description": "Staging server"
    },
    {
      "url": "https://api.bookedbarber.com",
      "description": "Production server"
    }
  ]
}