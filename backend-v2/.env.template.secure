# =============================================================================
# 6FB BOOKING PLATFORM - SECURE ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# SECURITY NOTICE: This template shows the format for environment variables
# without exposing actual secrets. Copy to .env and fill with real values.
# 
# NEVER commit .env files with real credentials to version control!
# =============================================================================

# =============================================================================
# CORE SECURITY (REQUIRED - Generate secure random values)
# =============================================================================
# Generate with: python -c 'import secrets; print(secrets.token_urlsafe(64))'
SECRET_KEY=GENERATE_SECURE_RANDOM_KEY_MIN_64_CHARS
JWT_SECRET_KEY=GENERATE_DIFFERENT_SECURE_RANDOM_KEY_MIN_64_CHARS
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440  # 24 hours for production
REFRESH_TOKEN_EXPIRE_DAYS=7

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Development (SQLite)
DATABASE_URL=sqlite:///./6fb_booking.db

# Production (PostgreSQL) - Replace with your actual database credentials
# DATABASE_URL=postgresql://username:password@host:port/database?sslmode=require
# DB_POOL_SIZE=20
# DB_MAX_OVERFLOW=30

# =============================================================================
# PAYMENT PROCESSING (Stripe)
# =============================================================================
# Get from Stripe Dashboard: https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY=sk_test_YOUR_TEST_KEY_HERE
STRIPE_PUBLISHABLE_KEY=pk_test_YOUR_TEST_KEY_HERE
STRIPE_WEBHOOK_SECRET=whsec_YOUR_WEBHOOK_SECRET_HERE
STRIPE_CONNECT_CLIENT_ID=ca_YOUR_CONNECT_CLIENT_ID

# Production keys start with sk_live_ and pk_live_

# =============================================================================
# EMAIL SERVICE CONFIGURATION (SendGrid)
# =============================================================================
# Get from SendGrid: https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=SG.YOUR_SENDGRID_API_KEY_HERE
FROM_EMAIL=noreply@yourdomain.com
EMAIL_FROM_NAME=BookedBarber

# =============================================================================
# SMS SERVICE CONFIGURATION (Twilio)
# =============================================================================
# Get from Twilio Console: https://console.twilio.com
TWILIO_ACCOUNT_SID=AC_YOUR_TWILIO_ACCOUNT_SID
TWILIO_AUTH_TOKEN=YOUR_TWILIO_AUTH_TOKEN
TWILIO_PHONE_NUMBER=+1234567890  # Your Twilio phone number

# =============================================================================
# GOOGLE CALENDAR INTEGRATION
# =============================================================================
# Create OAuth2 credentials at: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=YOUR_GOOGLE_CLIENT_SECRET
GOOGLE_REDIRECT_URI=http://localhost:8000/api/calendar/callback

# =============================================================================
# GOOGLE MY BUSINESS API
# =============================================================================
# Enable API at: https://console.cloud.google.com/apis/library/mybusinessaccountmanagement.googleapis.com
GMB_API_KEY=YOUR_GMB_API_KEY
GMB_ACCOUNT_ID=YOUR_GMB_ACCOUNT_ID
GMB_LOCATION_ID=YOUR_GMB_LOCATION_ID

# =============================================================================
# MARKETING & ANALYTICS
# =============================================================================
# Google Tag Manager
GTM_CONTAINER_ID=GTM-XXXXXX

# Meta Pixel
META_PIXEL_ID=YOUR_PIXEL_ID
META_ACCESS_TOKEN=YOUR_META_ACCESS_TOKEN

# Google Analytics
GA_TRACKING_ID=G-XXXXXXXXXX

# =============================================================================
# ENVIRONMENT & URLS
# =============================================================================
ENVIRONMENT=development  # Options: development, staging, production
FRONTEND_URL=http://localhost:3000
BACKEND_URL=http://localhost:8000
ALLOWED_ORIGINS=["http://localhost:3000","http://localhost:8000"]

# =============================================================================
# REDIS CONFIGURATION (Optional for development)
# =============================================================================
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# MONITORING & ERROR TRACKING
# =============================================================================
# Sentry DSN from: https://sentry.io/settings/projects/
SENTRY_DSN=https://YOUR_SENTRY_KEY@sentry.io/YOUR_PROJECT_ID

# =============================================================================
# SECURITY SETTINGS
# =============================================================================
# Password Policy
MIN_PASSWORD_LENGTH=8
REQUIRE_UPPERCASE=true
REQUIRE_LOWERCASE=true
REQUIRE_NUMBERS=true
REQUIRE_SPECIAL_CHARS=true

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# Session Security
SESSION_TIMEOUT_MINUTES=30
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION_MINUTES=15

# =============================================================================
# MFA CONFIGURATION (Multi-Factor Authentication)
# =============================================================================
MFA_ISSUER_NAME=BookedBarber
MFA_ENFORCE_FOR_ADMIN=true
MFA_ENFORCE_FOR_BARBERS=false

# =============================================================================
# IMPORTANT SECURITY REMINDERS
# =============================================================================
# 1. NEVER commit this file with real values
# 2. Use different keys for development, staging, and production
# 3. Rotate keys regularly (every 90 days for production)
# 4. Use strong, randomly generated keys (minimum 64 characters)
# 5. Enable 2FA on all service accounts (Stripe, SendGrid, Twilio, etc.)
# 6. Monitor for exposed credentials using GitHub secret scanning
# 7. Use environment-specific .env files (.env.development, .env.production)
# 8. Implement proper key rotation procedures
# 9. Log all authentication attempts and key usage
# 10. Use a secret management service in production (AWS Secrets Manager, etc.)