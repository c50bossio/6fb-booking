#!/usr/bin/env python3
"""
Production Key Generator for 6FB Booking Platform v2
Generates secure keys and secrets for production deployment
"""

import secrets
import string
import hashlib
import os
from datetime import datetime

def generate_secret_key(length=64):
    """Generate a cryptographically secure secret key"""
    return secrets.token_urlsafe(length)

def generate_webhook_secret(length=32):
    """Generate a webhook secret"""
    return secrets.token_hex(length)

def generate_database_password(length=16):
    """Generate a secure database password"""
    alphabet = string.ascii_letters + string.digits + "!@#$%^&*"
    password = ''.join(secrets.choice(alphabet) for _ in range(length))
    return password

def generate_hash_salt(length=32):
    """Generate a salt for hashing"""
    return secrets.token_hex(length)

def main():
    print("üîê Production Key Generator - 6FB Booking Platform v2")
    print("=" * 60)
    print("Generating secure keys for production deployment...")
    print()
    
    # Generate keys
    secret_key = generate_secret_key()
    jwt_secret = generate_secret_key()
    webhook_secret = generate_webhook_secret()
    db_password = generate_database_password()
    hash_salt = generate_hash_salt()
    
    # Create timestamp for reference
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S UTC")
    
    # Generate the configuration
    config = f"""# Production Keys Generated on {timestamp}
# CRITICAL: Keep these keys secure and never commit to version control

# =============================================================================
# SECURITY KEYS (Production)
# =============================================================================
SECRET_KEY={secret_key}
JWT_SECRET_KEY={jwt_secret}

# =============================================================================
# WEBHOOK SECRETS
# =============================================================================
STRIPE_WEBHOOK_SECRET={webhook_secret}
WEBHOOK_SECRET={webhook_secret}

# =============================================================================
# DATABASE PASSWORD (Example - adjust for your database)
# =============================================================================
# Use this password when creating your PostgreSQL database
# DATABASE_PASSWORD={db_password}
# Full example:
# DATABASE_URL=postgresql://sixfb_user:{db_password}@hostname:5432/sixfb_production

# =============================================================================
# HASH SALT (For additional security if needed)
# =============================================================================
HASH_SALT={hash_salt}

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. These keys are cryptographically secure and unique
# 2. Never share these keys or commit them to version control
# 3. Store them securely in your deployment platform's environment variables
# 4. Regenerate keys if they are ever compromised
# 5. Use different keys for each environment (staging, production, etc.)
#
# Generated by: 6FB Booking Platform v2 Key Generator
# Timestamp: {timestamp}
# Key Length: {len(secret_key)} characters (base64)
# Entropy: ~{len(secret_key) * 6} bits
"""
    
    # Save to file
    filename = f"production_keys_{datetime.now().strftime('%Y%m%d_%H%M%S')}.env"
    with open(filename, 'w') as f:
        f.write(config)
    
    print(f"‚úÖ Production keys generated and saved to: {filename}")
    print()
    print("üìã Generated Keys:")
    print(f"   ‚Ä¢ SECRET_KEY: {len(secret_key)} characters")
    print(f"   ‚Ä¢ JWT_SECRET_KEY: {len(jwt_secret)} characters") 
    print(f"   ‚Ä¢ WEBHOOK_SECRET: {len(webhook_secret)} characters")
    print(f"   ‚Ä¢ DATABASE_PASSWORD: {len(db_password)} characters")
    print(f"   ‚Ä¢ HASH_SALT: {len(hash_salt)} characters")
    print()
    print("üîí Security Information:")
    print(f"   ‚Ä¢ Entropy: ~{len(secret_key) * 6} bits per key")
    print("   ‚Ä¢ Algorithm: Cryptographically secure random generator")
    print("   ‚Ä¢ Format: URL-safe base64 encoding")
    print()
    print("‚ö†Ô∏è  IMPORTANT SECURITY WARNINGS:")
    print("   1. These keys are for PRODUCTION use only")
    print("   2. Never commit this file to version control")
    print("   3. Store keys securely in your deployment platform")
    print("   4. Each environment should have different keys")
    print("   5. Regenerate keys if ever compromised")
    print()
    print("üìù Next Steps:")
    print("   1. Copy keys to your deployment platform's environment variables")
    print("   2. Update your .env.production file")
    print("   3. Test all integrations with new keys")
    print("   4. Securely delete this file after use")
    print(f"   5. Run: rm {filename}")
    print()
    print("üéØ Deployment Platform Instructions:")
    print("   Railway: Set in dashboard under 'Variables' tab")
    print("   Render: Set in dashboard under 'Environment Variables'")
    print("   Vercel: Set in dashboard under 'Environment Variables'")
    print("   Heroku: Use 'heroku config:set' command")

if __name__ == '__main__':
    main()