"""Add AI integration models and tables

Revision ID: e69dd56e6788
Revises: a59adeb04e84
Create Date: 2025-07-21 21:41:45.188545

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'e69dd56e6788'
down_revision: Union[str, Sequence[str], None] = 'a59adeb04e84'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_conversion_goals_user_active'), table_name='conversion_goals')
    op.drop_index(op.f('ix_conversion_goals_id'), table_name='conversion_goals')
    op.drop_index(op.f('ix_conversion_goals_user_id'), table_name='conversion_goals')
    op.drop_table('conversion_goals')
    op.drop_index(op.f('ix_short_urls_id'), table_name='short_urls')
    op.drop_index(op.f('ix_short_urls_short_code'), table_name='short_urls')
    op.drop_table('short_urls')
    op.drop_index(op.f('ix_attribution_paths_id'), table_name='attribution_paths')
    op.drop_index(op.f('ix_attribution_paths_user_id'), table_name='attribution_paths')
    op.drop_table('attribution_paths')
    op.drop_index(op.f('idx_campaign_tracking_active'), table_name='campaign_tracking')
    op.drop_index(op.f('idx_campaign_tracking_dates'), table_name='campaign_tracking')
    op.drop_index(op.f('ix_campaign_tracking_campaign_id'), table_name='campaign_tracking')
    op.drop_index(op.f('ix_campaign_tracking_id'), table_name='campaign_tracking')
    op.drop_index(op.f('ix_campaign_tracking_user_id'), table_name='campaign_tracking')
    op.drop_table('campaign_tracking')
    op.drop_index(op.f('idx_conversion_events_campaign'), table_name='conversion_events')
    op.drop_index(op.f('idx_conversion_events_channel_date'), table_name='conversion_events')
    op.drop_index(op.f('idx_conversion_events_type_date'), table_name='conversion_events')
    op.drop_index(op.f('idx_conversion_events_user_date'), table_name='conversion_events')
    op.drop_index(op.f('ix_conversion_events_channel'), table_name='conversion_events')
    op.drop_index(op.f('ix_conversion_events_client_id'), table_name='conversion_events')
    op.drop_index(op.f('ix_conversion_events_event_id'), table_name='conversion_events')
    op.drop_index(op.f('ix_conversion_events_event_name'), table_name='conversion_events')
    op.drop_index(op.f('ix_conversion_events_event_type'), table_name='conversion_events')
    op.drop_index(op.f('ix_conversion_events_id'), table_name='conversion_events')
    op.drop_index(op.f('ix_conversion_events_organization_id'), table_name='conversion_events')
    op.drop_index(op.f('ix_conversion_events_session_id'), table_name='conversion_events')
    op.drop_index(op.f('ix_conversion_events_user_id'), table_name='conversion_events')
    op.drop_table('conversion_events')
    op.drop_index(op.f('ix_tracking_configurations_id'), table_name='tracking_configurations')
    op.drop_table('tracking_configurations')
    op.alter_column('appointments', 'price',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               nullable=True)
    op.drop_index(op.f('idx_appointments_availability_lookup'), table_name='appointments')
    op.drop_index(op.f('idx_appointments_created_status'), table_name='appointments')
    op.drop_index(op.f('idx_appointments_time_range'), table_name='appointments')
    op.drop_index(op.f('idx_appointments_user_history'), table_name='appointments')
    op.drop_index(op.f('idx_barber_profiles_active'), table_name='barber_profiles')
    op.drop_index(op.f('ix_barber_profiles_user_id'), table_name='barber_profiles')
    op.create_index('ix_barber_profiles_user_id', 'barber_profiles', ['user_id'], unique=False)
    op.alter_column('external_transactions', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('external_transactions', 'amount',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('external_transactions', 'currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=True,
               existing_server_default=sa.text("'USD'"))
    op.alter_column('external_transactions', 'processing_fee',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=True,
               existing_server_default=sa.text('(0.0)'))
    op.alter_column('external_transactions', 'net_amount',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('external_transactions', 'refund_amount',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=True,
               existing_server_default=sa.text('(0.0)'))
    op.alter_column('external_transactions', 'commission_rate',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('external_transactions', 'commission_amount',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=True,
               existing_server_default=sa.text('(0.0)'))
    op.alter_column('external_transactions', 'commission_collected',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('external_transactions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('external_transactions', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index(op.f('idx_external_transactions_appointment'), table_name='external_transactions')
    op.drop_index(op.f('idx_external_transactions_connection_status'), table_name='external_transactions')
    op.create_index(op.f('ix_external_transactions_appointment_id'), 'external_transactions', ['appointment_id'], unique=False)
    op.create_index(op.f('ix_external_transactions_connection_id'), 'external_transactions', ['connection_id'], unique=False)
    op.create_index(op.f('ix_external_transactions_external_transaction_id'), 'external_transactions', ['external_transaction_id'], unique=False)
    op.create_index(op.f('ix_external_transactions_id'), 'external_transactions', ['id'], unique=False)
    op.alter_column('gift_certificates', 'amount',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               nullable=True)
    op.alter_column('gift_certificates', 'balance',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               nullable=True)
    op.alter_column('hybrid_payment_configs', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('hybrid_payment_configs', 'payment_mode',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('CENTRALIZED', 'DECENTRALIZED', 'HYBRID', name='paymentmode'),
               existing_nullable=False,
               existing_server_default=sa.text("'centralized'"))
    op.alter_column('hybrid_payment_configs', 'primary_processor',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('STRIPE', 'SQUARE', 'PAYPAL', 'CLOVER', 'TOAST', 'SHOPIFY', 'CUSTOM', name='externalpaymentprocessor'),
               existing_nullable=True)
    op.alter_column('hybrid_payment_configs', 'fallback_to_platform',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('hybrid_payment_configs', 'collection_method',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'ach'"))
    op.alter_column('hybrid_payment_configs', 'collection_frequency',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'weekly'"))
    op.alter_column('hybrid_payment_configs', 'auto_collection',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('hybrid_payment_configs', 'minimum_collection_amount',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=True,
               existing_server_default=sa.text('(10.0)'))
    op.alter_column('hybrid_payment_configs', 'collection_buffer_days',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('3'))
    op.alter_column('hybrid_payment_configs', 'maximum_outstanding',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=True,
               existing_server_default=sa.text('(1000.0)'))
    op.alter_column('hybrid_payment_configs', 'notify_before_collection',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('hybrid_payment_configs', 'notification_days_ahead',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('2'))
    op.alter_column('hybrid_payment_configs', 'enable_installments',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('hybrid_payment_configs', 'enable_early_payment_discount',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('hybrid_payment_configs', 'early_payment_discount_rate',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=True,
               existing_server_default=sa.text('(0.02)'))
    op.alter_column('hybrid_payment_configs', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('hybrid_payment_configs', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index(op.f('idx_hybrid_payment_configs_barber'), table_name='hybrid_payment_configs')
    op.create_index(op.f('ix_hybrid_payment_configs_barber_id'), 'hybrid_payment_configs', ['barber_id'], unique=True)
    op.create_index(op.f('ix_hybrid_payment_configs_id'), 'hybrid_payment_configs', ['id'], unique=False)
    op.alter_column('payment_mode_history', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('payment_mode_history', 'previous_mode',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('CENTRALIZED', 'DECENTRALIZED', 'HYBRID', name='paymentmode'),
               existing_nullable=True)
    op.alter_column('payment_mode_history', 'new_mode',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('CENTRALIZED', 'DECENTRALIZED', 'HYBRID', name='paymentmode'),
               existing_nullable=False)
    op.alter_column('payment_mode_history', 'effective_date',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('payment_mode_history', 'pending_collections_affected',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('payment_mode_history', 'active_connections_affected',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('payment_mode_history', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index(op.f('idx_payment_mode_history_barber'), table_name='payment_mode_history')
    op.create_index(op.f('ix_payment_mode_history_barber_id'), 'payment_mode_history', ['barber_id'], unique=False)
    op.create_index(op.f('ix_payment_mode_history_id'), 'payment_mode_history', ['id'], unique=False)
    op.alter_column('payment_processor_connections', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('payment_processor_connections', 'processor_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('STRIPE', 'SQUARE', 'PAYPAL', 'CLOVER', 'TOAST', 'SHOPIFY', 'CUSTOM', name='externalpaymentprocessor'),
               existing_nullable=False)
    op.alter_column('payment_processor_connections', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('PENDING', 'CONNECTED', 'EXPIRED', 'DISCONNECTED', 'ERROR', name='connectionstatus'),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('payment_processor_connections', 'supports_payments',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('payment_processor_connections', 'supports_refunds',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('payment_processor_connections', 'supports_recurring',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('payment_processor_connections', 'default_currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=True,
               existing_server_default=sa.text("'USD'"))
    op.alter_column('payment_processor_connections', 'total_transactions',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('payment_processor_connections', 'total_volume',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=True,
               existing_server_default=sa.text('(0.0)'))
    op.alter_column('payment_processor_connections', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('payment_processor_connections', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('payment_processor_connections', 'error_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.drop_index(op.f('idx_processor_connections_barber_status'), table_name='payment_processor_connections')
    op.create_index(op.f('ix_payment_processor_connections_barber_id'), 'payment_processor_connections', ['barber_id'], unique=False)
    op.create_index(op.f('ix_payment_processor_connections_id'), 'payment_processor_connections', ['id'], unique=False)
    op.alter_column('payments', 'amount',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               nullable=True)
    op.alter_column('payments', 'platform_fee',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('payments', 'barber_amount',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('payments', 'commission_rate',
               existing_type=sa.DECIMAL(precision=5, scale=4),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('payments', 'refund_amount',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('payments', 'gift_certificate_amount_used',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.drop_index(op.f('idx_payments_appointment'), table_name='payments')
    op.drop_index(op.f('idx_payments_status_date'), table_name='payments')
    op.alter_column('payouts', 'amount',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               nullable=True)
    op.alter_column('platform_collections', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('platform_collections', 'collection_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('COMMISSION', 'BOOTH_RENT', 'PLATFORM_FEE', 'LATE_FEE', 'ADJUSTMENT', name='collectiontype'),
               existing_nullable=False)
    op.alter_column('platform_collections', 'amount',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('platform_collections', 'currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=True,
               existing_server_default=sa.text("'USD'"))
    op.alter_column('platform_collections', 'grace_period_days',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('7'))
    op.alter_column('platform_collections', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('PENDING', 'DUE', 'PROCESSING', 'COLLECTED', 'FAILED', 'DISPUTED', 'WAIVED', name='collectionstatus'),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('platform_collections', 'retry_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('platform_collections', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('platform_collections', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index(op.f('idx_platform_collections_barber_status'), table_name='platform_collections')
    op.drop_index(op.f('idx_platform_collections_due_date'), table_name='platform_collections')
    op.drop_index(op.f('idx_platform_collections_type_status'), table_name='platform_collections')
    op.create_index(op.f('ix_platform_collections_barber_id'), 'platform_collections', ['barber_id'], unique=False)
    op.create_index(op.f('ix_platform_collections_connection_id'), 'platform_collections', ['connection_id'], unique=False)
    op.create_index(op.f('ix_platform_collections_external_transaction_id'), 'platform_collections', ['external_transaction_id'], unique=False)
    op.create_index(op.f('ix_platform_collections_id'), 'platform_collections', ['id'], unique=False)
    op.alter_column('refunds', 'amount',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               nullable=True)
    op.add_column('users', sa.Column('payment_mode', sa.String(length=20), nullable=False))
    op.add_column('users', sa.Column('external_payment_processor', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('external_account_config', sa.JSON(), nullable=True))
    op.add_column('users', sa.Column('collection_preferences', sa.JSON(), nullable=True))
    op.alter_column('users', 'commission_rate',
               existing_type=sa.DECIMAL(precision=5, scale=4),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('users', 'lifetime_value',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.drop_index(op.f('idx_users_email_active'), table_name='users')
    op.drop_index(op.f('idx_users_role_active'), table_name='users')
    op.drop_index(op.f('idx_webhook_active'), table_name='webhook_endpoints')
    op.drop_index(op.f('idx_webhook_events'), table_name='webhook_endpoints')
    op.drop_index(op.f('idx_webhook_log_created'), table_name='webhook_logs')
    op.drop_index(op.f('idx_webhook_log_endpoint'), table_name='webhook_logs')
    op.drop_index(op.f('idx_webhook_log_event'), table_name='webhook_logs')
    op.drop_index(op.f('idx_webhook_log_status'), table_name='webhook_logs')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_webhook_log_status'), 'webhook_logs', ['status'], unique=False)
    op.create_index(op.f('idx_webhook_log_event'), 'webhook_logs', ['event_type'], unique=False)
    op.create_index(op.f('idx_webhook_log_endpoint'), 'webhook_logs', ['endpoint_id'], unique=False)
    op.create_index(op.f('idx_webhook_log_created'), 'webhook_logs', ['created_at'], unique=False)
    op.create_index(op.f('idx_webhook_events'), 'webhook_endpoints', ['events'], unique=False)
    op.create_index(op.f('idx_webhook_active'), 'webhook_endpoints', ['is_active'], unique=False)
    op.create_index(op.f('idx_users_role_active'), 'users', ['unified_role', 'is_active'], unique=False)
    op.create_index(op.f('idx_users_email_active'), 'users', ['email', 'is_active'], unique=False)
    op.alter_column('users', 'lifetime_value',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('users', 'commission_rate',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=5, scale=4),
               existing_nullable=True)
    op.drop_column('users', 'collection_preferences')
    op.drop_column('users', 'external_account_config')
    op.drop_column('users', 'external_payment_processor')
    op.drop_column('users', 'payment_mode')
    op.alter_column('refunds', 'amount',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               nullable=False)
    op.drop_index(op.f('ix_platform_collections_id'), table_name='platform_collections')
    op.drop_index(op.f('ix_platform_collections_external_transaction_id'), table_name='platform_collections')
    op.drop_index(op.f('ix_platform_collections_connection_id'), table_name='platform_collections')
    op.drop_index(op.f('ix_platform_collections_barber_id'), table_name='platform_collections')
    op.create_index(op.f('idx_platform_collections_type_status'), 'platform_collections', ['collection_type', 'status'], unique=False)
    op.create_index(op.f('idx_platform_collections_due_date'), 'platform_collections', ['due_date'], unique=False)
    op.create_index(op.f('idx_platform_collections_barber_status'), 'platform_collections', ['barber_id', 'status'], unique=False)
    op.alter_column('platform_collections', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('platform_collections', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('platform_collections', 'retry_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('platform_collections', 'status',
               existing_type=sa.Enum('PENDING', 'DUE', 'PROCESSING', 'COLLECTED', 'FAILED', 'DISPUTED', 'WAIVED', name='collectionstatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('platform_collections', 'grace_period_days',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('7'))
    op.alter_column('platform_collections', 'currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=False,
               existing_server_default=sa.text("'USD'"))
    op.alter_column('platform_collections', 'amount',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('platform_collections', 'collection_type',
               existing_type=sa.Enum('COMMISSION', 'BOOTH_RENT', 'PLATFORM_FEE', 'LATE_FEE', 'ADJUSTMENT', name='collectiontype'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('platform_collections', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.alter_column('payouts', 'amount',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               nullable=False)
    op.create_index(op.f('idx_payments_status_date'), 'payments', ['status', 'created_at'], unique=False)
    op.create_index(op.f('idx_payments_appointment'), 'payments', ['appointment_id', 'status'], unique=False)
    op.alter_column('payments', 'gift_certificate_amount_used',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('payments', 'refund_amount',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('payments', 'commission_rate',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=5, scale=4),
               existing_nullable=True)
    op.alter_column('payments', 'barber_amount',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('payments', 'platform_fee',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('payments', 'amount',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               nullable=False)
    op.drop_index(op.f('ix_payment_processor_connections_id'), table_name='payment_processor_connections')
    op.drop_index(op.f('ix_payment_processor_connections_barber_id'), table_name='payment_processor_connections')
    op.create_index(op.f('idx_processor_connections_barber_status'), 'payment_processor_connections', ['barber_id', 'status'], unique=False)
    op.alter_column('payment_processor_connections', 'error_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('payment_processor_connections', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('payment_processor_connections', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('payment_processor_connections', 'total_volume',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=False,
               existing_server_default=sa.text('(0.0)'))
    op.alter_column('payment_processor_connections', 'total_transactions',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('payment_processor_connections', 'default_currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=False,
               existing_server_default=sa.text("'USD'"))
    op.alter_column('payment_processor_connections', 'supports_recurring',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('payment_processor_connections', 'supports_refunds',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('payment_processor_connections', 'supports_payments',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('payment_processor_connections', 'status',
               existing_type=sa.Enum('PENDING', 'CONNECTED', 'EXPIRED', 'DISCONNECTED', 'ERROR', name='connectionstatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('payment_processor_connections', 'processor_type',
               existing_type=sa.Enum('STRIPE', 'SQUARE', 'PAYPAL', 'CLOVER', 'TOAST', 'SHOPIFY', 'CUSTOM', name='externalpaymentprocessor'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('payment_processor_connections', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_payment_mode_history_id'), table_name='payment_mode_history')
    op.drop_index(op.f('ix_payment_mode_history_barber_id'), table_name='payment_mode_history')
    op.create_index(op.f('idx_payment_mode_history_barber'), 'payment_mode_history', ['barber_id'], unique=False)
    op.alter_column('payment_mode_history', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('payment_mode_history', 'active_connections_affected',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('payment_mode_history', 'pending_collections_affected',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('payment_mode_history', 'effective_date',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('payment_mode_history', 'new_mode',
               existing_type=sa.Enum('CENTRALIZED', 'DECENTRALIZED', 'HYBRID', name='paymentmode'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('payment_mode_history', 'previous_mode',
               existing_type=sa.Enum('CENTRALIZED', 'DECENTRALIZED', 'HYBRID', name='paymentmode'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('payment_mode_history', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index(op.f('ix_hybrid_payment_configs_id'), table_name='hybrid_payment_configs')
    op.drop_index(op.f('ix_hybrid_payment_configs_barber_id'), table_name='hybrid_payment_configs')
    op.create_index(op.f('idx_hybrid_payment_configs_barber'), 'hybrid_payment_configs', ['barber_id'], unique=False)
    op.alter_column('hybrid_payment_configs', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('hybrid_payment_configs', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('hybrid_payment_configs', 'early_payment_discount_rate',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=False,
               existing_server_default=sa.text('(0.02)'))
    op.alter_column('hybrid_payment_configs', 'enable_early_payment_discount',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('hybrid_payment_configs', 'enable_installments',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('hybrid_payment_configs', 'notification_days_ahead',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('2'))
    op.alter_column('hybrid_payment_configs', 'notify_before_collection',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('hybrid_payment_configs', 'maximum_outstanding',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=False,
               existing_server_default=sa.text('(1000.0)'))
    op.alter_column('hybrid_payment_configs', 'collection_buffer_days',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('3'))
    op.alter_column('hybrid_payment_configs', 'minimum_collection_amount',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=False,
               existing_server_default=sa.text('(10.0)'))
    op.alter_column('hybrid_payment_configs', 'auto_collection',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('hybrid_payment_configs', 'collection_frequency',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'weekly'"))
    op.alter_column('hybrid_payment_configs', 'collection_method',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'ach'"))
    op.alter_column('hybrid_payment_configs', 'fallback_to_platform',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('hybrid_payment_configs', 'primary_processor',
               existing_type=sa.Enum('STRIPE', 'SQUARE', 'PAYPAL', 'CLOVER', 'TOAST', 'SHOPIFY', 'CUSTOM', name='externalpaymentprocessor'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.alter_column('hybrid_payment_configs', 'payment_mode',
               existing_type=sa.Enum('CENTRALIZED', 'DECENTRALIZED', 'HYBRID', name='paymentmode'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False,
               existing_server_default=sa.text("'centralized'"))
    op.alter_column('hybrid_payment_configs', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.alter_column('gift_certificates', 'balance',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               nullable=False)
    op.alter_column('gift_certificates', 'amount',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               nullable=False)
    op.drop_index(op.f('ix_external_transactions_id'), table_name='external_transactions')
    op.drop_index(op.f('ix_external_transactions_external_transaction_id'), table_name='external_transactions')
    op.drop_index(op.f('ix_external_transactions_connection_id'), table_name='external_transactions')
    op.drop_index(op.f('ix_external_transactions_appointment_id'), table_name='external_transactions')
    op.create_index(op.f('idx_external_transactions_connection_status'), 'external_transactions', ['connection_id', 'status'], unique=False)
    op.create_index(op.f('idx_external_transactions_appointment'), 'external_transactions', ['appointment_id'], unique=False)
    op.alter_column('external_transactions', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('external_transactions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('external_transactions', 'commission_collected',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('external_transactions', 'commission_amount',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=False,
               existing_server_default=sa.text('(0.0)'))
    op.alter_column('external_transactions', 'commission_rate',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=True)
    op.alter_column('external_transactions', 'refund_amount',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=False,
               existing_server_default=sa.text('(0.0)'))
    op.alter_column('external_transactions', 'net_amount',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('external_transactions', 'processing_fee',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=False,
               existing_server_default=sa.text('(0.0)'))
    op.alter_column('external_transactions', 'currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=False,
               existing_server_default=sa.text("'USD'"))
    op.alter_column('external_transactions', 'amount',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('external_transactions', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index('ix_barber_profiles_user_id', table_name='barber_profiles')
    op.create_index(op.f('ix_barber_profiles_user_id'), 'barber_profiles', ['user_id'], unique=1)
    op.create_index(op.f('idx_barber_profiles_active'), 'barber_profiles', ['is_active', 'user_id'], unique=False)
    op.create_index(op.f('idx_appointments_user_history'), 'appointments', ['user_id', 'start_time', 'status'], unique=False)
    op.create_index(op.f('idx_appointments_time_range'), 'appointments', ['start_time', 'duration_minutes'], unique=False)
    op.create_index(op.f('idx_appointments_created_status'), 'appointments', ['created_at', 'status'], unique=False)
    op.create_index(op.f('idx_appointments_availability_lookup'), 'appointments', ['barber_id', 'start_time', 'status'], unique=False)
    op.alter_column('appointments', 'price',
               existing_type=sa.Float(),
               type_=sa.DECIMAL(precision=10, scale=2),
               nullable=False)
    op.create_table('tracking_configurations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('gtm_container_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('gtm_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('gtm_server_url', sa.VARCHAR(length=255), nullable=True),
    sa.Column('meta_pixel_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('meta_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('meta_test_event_code', sa.VARCHAR(length=50), nullable=True),
    sa.Column('google_ads_conversion_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('google_ads_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('google_ads_conversion_labels', sqlite.JSON(), nullable=True),
    sa.Column('attribution_window_days', sa.INTEGER(), nullable=True),
    sa.Column('view_attribution_window_days', sa.INTEGER(), nullable=True),
    sa.Column('default_attribution_model', sa.VARCHAR(length=14), nullable=True),
    sa.Column('conversion_value_rules', sqlite.JSON(), nullable=True),
    sa.Column('excluded_domains', sqlite.JSON(), nullable=True),
    sa.Column('custom_channel_rules', sqlite.JSON(), nullable=True),
    sa.Column('enable_enhanced_conversions', sa.BOOLEAN(), nullable=True),
    sa.Column('hash_user_data', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_tracking_configurations_id'), 'tracking_configurations', ['id'], unique=False)
    op.create_table('conversion_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('organization_id', sa.INTEGER(), nullable=True),
    sa.Column('event_id', sa.VARCHAR(length=255), nullable=True),
    sa.Column('event_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=12), nullable=False),
    sa.Column('event_value', sa.FLOAT(), nullable=True),
    sa.Column('event_currency', sa.VARCHAR(length=3), nullable=True),
    sa.Column('event_data', sqlite.JSON(), nullable=True),
    sa.Column('source_url', sa.TEXT(), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=64), nullable=True),
    sa.Column('client_id', sa.VARCHAR(length=255), nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=255), nullable=True),
    sa.Column('channel', sa.VARCHAR(length=50), nullable=True),
    sa.Column('utm_source', sa.VARCHAR(length=255), nullable=True),
    sa.Column('utm_medium', sa.VARCHAR(length=255), nullable=True),
    sa.Column('utm_campaign', sa.VARCHAR(length=255), nullable=True),
    sa.Column('utm_term', sa.VARCHAR(length=255), nullable=True),
    sa.Column('utm_content', sa.VARCHAR(length=255), nullable=True),
    sa.Column('referrer', sa.TEXT(), nullable=True),
    sa.Column('gtm_synced', sa.BOOLEAN(), nullable=True),
    sa.Column('gtm_sync_time', sa.DATETIME(), nullable=True),
    sa.Column('meta_synced', sa.BOOLEAN(), nullable=True),
    sa.Column('meta_sync_time', sa.DATETIME(), nullable=True),
    sa.Column('google_ads_synced', sa.BOOLEAN(), nullable=True),
    sa.Column('google_ads_sync_time', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversion_events_user_id'), 'conversion_events', ['user_id'], unique=False)
    op.create_index(op.f('ix_conversion_events_session_id'), 'conversion_events', ['session_id'], unique=False)
    op.create_index(op.f('ix_conversion_events_organization_id'), 'conversion_events', ['organization_id'], unique=False)
    op.create_index(op.f('ix_conversion_events_id'), 'conversion_events', ['id'], unique=False)
    op.create_index(op.f('ix_conversion_events_event_type'), 'conversion_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_conversion_events_event_name'), 'conversion_events', ['event_name'], unique=False)
    op.create_index(op.f('ix_conversion_events_event_id'), 'conversion_events', ['event_id'], unique=1)
    op.create_index(op.f('ix_conversion_events_client_id'), 'conversion_events', ['client_id'], unique=False)
    op.create_index(op.f('ix_conversion_events_channel'), 'conversion_events', ['channel'], unique=False)
    op.create_index(op.f('idx_conversion_events_user_date'), 'conversion_events', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('idx_conversion_events_type_date'), 'conversion_events', ['event_type', 'created_at'], unique=False)
    op.create_index(op.f('idx_conversion_events_channel_date'), 'conversion_events', ['channel', 'created_at'], unique=False)
    op.create_index(op.f('idx_conversion_events_campaign'), 'conversion_events', ['utm_campaign', 'created_at'], unique=False)
    op.create_table('campaign_tracking',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('campaign_id', sa.VARCHAR(length=100), nullable=False),
    sa.Column('campaign_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('campaign_source', sa.VARCHAR(length=50), nullable=False),
    sa.Column('campaign_medium', sa.VARCHAR(length=50), nullable=False),
    sa.Column('start_date', sa.DATETIME(), nullable=False),
    sa.Column('end_date', sa.DATETIME(), nullable=True),
    sa.Column('total_cost', sa.FLOAT(), nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), nullable=True),
    sa.Column('impressions', sa.INTEGER(), nullable=True),
    sa.Column('clicks', sa.INTEGER(), nullable=True),
    sa.Column('conversions', sa.INTEGER(), nullable=True),
    sa.Column('conversion_value', sa.FLOAT(), nullable=True),
    sa.Column('ctr', sa.FLOAT(), nullable=True),
    sa.Column('conversion_rate', sa.FLOAT(), nullable=True),
    sa.Column('cpc', sa.FLOAT(), nullable=True),
    sa.Column('cpa', sa.FLOAT(), nullable=True),
    sa.Column('roas', sa.FLOAT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('last_sync_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'campaign_id', 'campaign_source', name=op.f('uq_user_campaign'))
    )
    op.create_index(op.f('ix_campaign_tracking_user_id'), 'campaign_tracking', ['user_id'], unique=False)
    op.create_index(op.f('ix_campaign_tracking_id'), 'campaign_tracking', ['id'], unique=False)
    op.create_index(op.f('ix_campaign_tracking_campaign_id'), 'campaign_tracking', ['campaign_id'], unique=False)
    op.create_index(op.f('idx_campaign_tracking_dates'), 'campaign_tracking', ['start_date', 'end_date'], unique=False)
    op.create_index(op.f('idx_campaign_tracking_active'), 'campaign_tracking', ['user_id', 'is_active'], unique=False)
    op.create_table('attribution_paths',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('conversion_event_id', sa.INTEGER(), nullable=False),
    sa.Column('touchpoints', sqlite.JSON(), nullable=False),
    sa.Column('first_touch_channel', sa.VARCHAR(length=50), nullable=True),
    sa.Column('last_touch_channel', sa.VARCHAR(length=50), nullable=True),
    sa.Column('path_length', sa.INTEGER(), nullable=True),
    sa.Column('attribution_model', sa.VARCHAR(length=14), nullable=True),
    sa.Column('attribution_weights', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['conversion_event_id'], ['conversion_events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('conversion_event_id')
    )
    op.create_index(op.f('ix_attribution_paths_user_id'), 'attribution_paths', ['user_id'], unique=False)
    op.create_index(op.f('ix_attribution_paths_id'), 'attribution_paths', ['id'], unique=False)
    op.create_table('short_urls',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('short_code', sa.VARCHAR(length=10), nullable=False),
    sa.Column('original_url', sa.TEXT(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), nullable=True),
    sa.Column('description', sa.VARCHAR(length=500), nullable=True),
    sa.Column('click_count', sa.INTEGER(), nullable=True),
    sa.Column('last_clicked', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=100), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_short_urls_short_code'), 'short_urls', ['short_code'], unique=1)
    op.create_index(op.f('ix_short_urls_id'), 'short_urls', ['id'], unique=False)
    op.create_table('conversion_goals',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('event_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=12), nullable=False),
    sa.Column('value', sa.FLOAT(), nullable=True),
    sa.Column('value_expression', sa.TEXT(), nullable=True),
    sa.Column('conditions', sqlite.JSON(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('total_conversions', sa.INTEGER(), nullable=True),
    sa.Column('total_value', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name=op.f('uq_user_goal_name'))
    )
    op.create_index(op.f('ix_conversion_goals_user_id'), 'conversion_goals', ['user_id'], unique=False)
    op.create_index(op.f('ix_conversion_goals_id'), 'conversion_goals', ['id'], unique=False)
    op.create_index(op.f('idx_conversion_goals_user_active'), 'conversion_goals', ['user_id', 'is_active'], unique=False)
    # ### end Alembic commands ###
