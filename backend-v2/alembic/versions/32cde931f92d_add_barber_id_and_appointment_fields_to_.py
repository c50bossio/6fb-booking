"""Add barber_id and appointment fields to appointments

Revision ID: 32cde931f92d
Revises: cf5e9fcb7f0c
Create Date: 2025-06-28 17:26:28.935010

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '32cde931f92d'
down_revision: Union[str, Sequence[str], None] = 'cf5e9fcb7f0c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('appointments', sa.Column('barber_id', sa.Integer(), nullable=True))
    op.add_column('appointments', sa.Column('buffer_time_before', sa.Integer(), nullable=True))
    op.add_column('appointments', sa.Column('buffer_time_after', sa.Integer(), nullable=True))
    op.add_column('appointments', sa.Column('notes', sa.Text(), nullable=True))
    op.alter_column('appointments', 'google_event_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index(op.f('idx_appointments_client_id_status'), table_name='appointments')
    op.drop_index(op.f('idx_appointments_completed_duration'), table_name='appointments', sqlite_where=sa.text("status = 'completed'"))
    op.drop_index(op.f('idx_appointments_created_at'), table_name='appointments')
    op.drop_index(op.f('idx_appointments_no_show_time'), table_name='appointments', sqlite_where=sa.text("status = 'no_show'"))
    op.drop_index(op.f('idx_appointments_start_time_service'), table_name='appointments')
    op.drop_index(op.f('idx_appointments_status_start_time'), table_name='appointments')
    op.drop_index(op.f('idx_appointments_user_id_status'), table_name='appointments')
    op.drop_index(op.f('idx_appointments_user_time_status'), table_name='appointments')
    op.create_foreign_key(None, 'appointments', 'users', ['barber_id'], ['id'])
    op.drop_index(op.f('idx_barber_availability_barber_day'), table_name='barber_availability')
    op.drop_index(op.f('idx_barber_time_off_barber_dates'), table_name='barber_time_off')
    op.drop_index(op.f('idx_clients_created_at'), table_name='clients')
    op.drop_index(op.f('idx_clients_customer_type'), table_name='clients')
    op.drop_index(op.f('idx_clients_first_visit_date'), table_name='clients')
    op.drop_index(op.f('idx_clients_last_visit_date'), table_name='clients')
    op.drop_index(op.f('idx_clients_total_spent'), table_name='clients')
    op.drop_index(op.f('idx_clients_total_visits'), table_name='clients')
    op.drop_index(op.f('idx_payments_barber_id_status'), table_name='payments')
    op.drop_index(op.f('idx_payments_barber_time_status'), table_name='payments')
    op.drop_index(op.f('idx_payments_completed_amount'), table_name='payments', sqlite_where=sa.text("status = 'completed'"))
    op.drop_index(op.f('idx_payments_created_at_amount'), table_name='payments')
    op.drop_index(op.f('idx_payments_status_created_at'), table_name='payments')
    op.drop_index(op.f('idx_payments_user_id_status'), table_name='payments')
    op.drop_index(op.f('idx_payments_user_time_status'), table_name='payments')
    op.drop_index(op.f('idx_services_bookable_active'), table_name='services')
    op.drop_index(op.f('idx_services_category_active'), table_name='services')
    op.drop_index(op.f('idx_users_role_active'), table_name='users')
    op.drop_index(op.f('idx_users_role_created_at'), table_name='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_users_role_created_at'), 'users', ['role', 'created_at'], unique=False)
    op.create_index(op.f('idx_users_role_active'), 'users', ['role', 'is_active'], unique=False)
    op.create_index(op.f('idx_services_category_active'), 'services', ['category', 'is_active'], unique=False)
    op.create_index(op.f('idx_services_bookable_active'), 'services', ['is_bookable_online', 'is_active'], unique=False)
    op.create_index(op.f('idx_payments_user_time_status'), 'payments', ['user_id', 'created_at', 'status'], unique=False)
    op.create_index(op.f('idx_payments_user_id_status'), 'payments', ['user_id', 'status'], unique=False)
    op.create_index(op.f('idx_payments_status_created_at'), 'payments', ['status', 'created_at'], unique=False)
    op.create_index(op.f('idx_payments_created_at_amount'), 'payments', ['created_at', 'amount'], unique=False)
    op.create_index(op.f('idx_payments_completed_amount'), 'payments', ['created_at', 'amount'], unique=False, sqlite_where=sa.text("status = 'completed'"))
    op.create_index(op.f('idx_payments_barber_time_status'), 'payments', ['barber_id', 'created_at', 'status'], unique=False)
    op.create_index(op.f('idx_payments_barber_id_status'), 'payments', ['barber_id', 'status'], unique=False)
    op.create_index(op.f('idx_clients_total_visits'), 'clients', ['total_visits'], unique=False)
    op.create_index(op.f('idx_clients_total_spent'), 'clients', ['total_spent'], unique=False)
    op.create_index(op.f('idx_clients_last_visit_date'), 'clients', ['last_visit_date'], unique=False)
    op.create_index(op.f('idx_clients_first_visit_date'), 'clients', ['first_visit_date'], unique=False)
    op.create_index(op.f('idx_clients_customer_type'), 'clients', ['customer_type'], unique=False)
    op.create_index(op.f('idx_clients_created_at'), 'clients', ['created_at'], unique=False)
    op.create_index(op.f('idx_barber_time_off_barber_dates'), 'barber_time_off', ['barber_id', 'start_date', 'end_date'], unique=False)
    op.create_index(op.f('idx_barber_availability_barber_day'), 'barber_availability', ['barber_id', 'day_of_week', 'is_active'], unique=False)
    op.drop_constraint(None, 'appointments', type_='foreignkey')
    op.create_index(op.f('idx_appointments_user_time_status'), 'appointments', ['user_id', 'start_time', 'status'], unique=False)
    op.create_index(op.f('idx_appointments_user_id_status'), 'appointments', ['user_id', 'status'], unique=False)
    op.create_index(op.f('idx_appointments_status_start_time'), 'appointments', ['status', 'start_time'], unique=False)
    op.create_index(op.f('idx_appointments_start_time_service'), 'appointments', ['start_time', 'service_name'], unique=False)
    op.create_index(op.f('idx_appointments_no_show_time'), 'appointments', ['start_time'], unique=False, sqlite_where=sa.text("status = 'no_show'"))
    op.create_index(op.f('idx_appointments_created_at'), 'appointments', ['created_at'], unique=False)
    op.create_index(op.f('idx_appointments_completed_duration'), 'appointments', ['start_time', 'duration_minutes'], unique=False, sqlite_where=sa.text("status = 'completed'"))
    op.create_index(op.f('idx_appointments_client_id_status'), 'appointments', ['client_id', 'status'], unique=False)
    op.alter_column('appointments', 'google_event_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('appointments', 'notes')
    op.drop_column('appointments', 'buffer_time_after')
    op.drop_column('appointments', 'buffer_time_before')
    op.drop_column('appointments', 'barber_id')
    # ### end Alembic commands ###
