apiVersion: v1
kind: ServiceMonitor
metadata:
  name: bookedbarber-metrics
  namespace: bookedbarber-v2
  labels:
    app: bookedbarber-backend
spec:
  selector:
    matchLabels:
      app: bookedbarber-backend
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: bookedbarber-v2
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
    - job_name: 'bookedbarber-backend'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - bookedbarber-v2
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: bookedbarber-backend-service
    - job_name: 'postgres'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - bookedbarber-v2
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: postgres-service
    - job_name: 'redis'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - bookedbarber-v2
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: redis-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: bookedbarber-v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: bookedbarber-v2
spec:
  selector:
    app: prometheus
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: bookedbarber-v2
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard