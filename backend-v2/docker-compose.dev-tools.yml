# =============================================================================
# BookedBarber V2 - Development Tools Stack
# =============================================================================
# üõ†Ô∏è Essential development and debugging tools
# üîç Database administration and monitoring interfaces
# üìä Development analytics and debugging utilities
# =============================================================================

services:
  # =============================================================================
  # Redis Commander - Redis Management Interface
  # =============================================================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: bookedbarber-redis-commander
    environment:
      REDIS_HOSTS: "local:redis:6379:0:${REDIS_PASSWORD}"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: admin
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-admin123}
      PORT: 8081
      URL_PREFIX: /redis-commander
    ports:
      - "127.0.0.1:8081:8081"
    networks:
      - bookedbarber-network
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - dev-tools
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/redis-commander"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # pgAdmin - PostgreSQL Administration Interface
  # =============================================================================
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bookedbarber-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bookedbarber.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_LISTEN_PORT: 8082
    ports:
      - "127.0.0.1:8082:8082"
    networks:
      - bookedbarber-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./config/pgadmin-servers.json:/pgadmin4/servers.json:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - dev-tools
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8082"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # MailHog - Email Testing and Debugging
  # =============================================================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: bookedbarber-mailhog
    ports:
      - "127.0.0.1:1025:1025"  # SMTP server
      - "127.0.0.1:8025:8025"  # Web interface
    networks:
      - bookedbarber-network
    restart: unless-stopped
    profiles:
      - dev-tools
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # Adminer - Lightweight Database Management
  # =============================================================================
  adminer:
    image: adminer:latest
    container_name: bookedbarber-adminer
    ports:
      - "127.0.0.1:8083:8080"
    networks:
      - bookedbarber-network
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: hydra
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - dev-tools
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # Swagger UI - API Documentation Interface
  # =============================================================================
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: bookedbarber-swagger-ui
    environment:
      SWAGGER_JSON_URL: http://backend:8000/openapi.json
      BASE_URL: /swagger
      DISPLAY_REQUEST_DURATION: 'true'
      SHOW_EXTENSIONS: 'true'
      SHOW_COMMON_EXTENSIONS: 'true'
    ports:
      - "127.0.0.1:8084:8080"
    networks:
      - bookedbarber-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - dev-tools

  # =============================================================================
  # Development File Browser
  # =============================================================================
  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: bookedbarber-filebrowser
    ports:
      - "127.0.0.1:8085:80"
    networks:
      - bookedbarber-network
    volumes:
      - .:/srv
      - ./config/filebrowser.json:/config/settings.json
    environment:
      FB_DATABASE: /config/filebrowser.db
      FB_CONFIG: /config/settings.json
    restart: unless-stopped
    profiles:
      - dev-tools
    command: --config /config/settings.json

  # =============================================================================
  # Development Dashboard - Unified Interface
  # =============================================================================
  dev-dashboard:
    image: nginx:alpine
    container_name: bookedbarber-dev-dashboard
    ports:
      - "127.0.0.1:9000:80"
    networks:
      - bookedbarber-network
    volumes:
      - ./config/dev-dashboard.html:/usr/share/nginx/html/index.html:ro
      - ./config/nginx-dev-dashboard.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    profiles:
      - dev-tools
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  bookedbarber-network:
    external: true

volumes:
  pgadmin_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/pgadmin