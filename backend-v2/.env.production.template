# BookedBarber V2 Production Environment Configuration
# =====================================================
# Copy this file to .env.production and fill in all values
# NEVER commit .env.production to version control

# Application Settings
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO
PORT=8000

# Security Keys (REQUIRED - Generate with generate_production_keys.py)
SECRET_KEY=  # Your generated SECRET_KEY here
JWT_SECRET_KEY=  # Your generated JWT_SECRET_KEY here

# Database (REQUIRED - PostgreSQL for production)
DATABASE_URL=postgresql://username:password@hostname:5432/database_name

# Frontend URL (REQUIRED)
FRONTEND_URL=https://app.bookedbarber.com
ALLOWED_ORIGINS=https://app.bookedbarber.com

# Stripe (REQUIRED for payments)
STRIPE_SECRET_KEY=sk_live_...  # Your live Stripe secret key
STRIPE_PUBLISHABLE_KEY=pk_live_...  # Your live Stripe publishable key
STRIPE_WEBHOOK_SECRET=whsec_...  # From Stripe webhook configuration

# Email Service - SendGrid (REQUIRED for notifications)
SENDGRID_API_KEY=SG.  # Your SendGrid API key
EMAIL_FROM_ADDRESS=notifications@bookedbarber.com
EMAIL_FROM_NAME=BookedBarber

# SMS Service - Twilio (REQUIRED for SMS)
TWILIO_ACCOUNT_SID=AC...  # Your Twilio Account SID
TWILIO_AUTH_TOKEN=  # Your Twilio Auth Token
TWILIO_PHONE_NUMBER=+1...  # Your Twilio phone number

# Google Calendar Integration (OPTIONAL)
GOOGLE_CLIENT_ID=  # From Google Cloud Console
GOOGLE_CLIENT_SECRET=  # From Google Cloud Console
GOOGLE_REDIRECT_URI=https://api.bookedbarber.com/api/google-calendar/callback

# Google My Business (OPTIONAL - for review management)
GOOGLE_MY_BUSINESS_ACCOUNT_ID=
GOOGLE_MY_BUSINESS_LOCATION_ID=

# Error Tracking - Sentry (HIGHLY RECOMMENDED)
SENTRY_DSN=https://...@sentry.io/...
SENTRY_ENVIRONMENT=production
SENTRY_TRACES_SAMPLE_RATE=0.1

# Redis Cache (RECOMMENDED for performance)
REDIS_URL=redis://username:password@hostname:6379/0

# File Storage (OPTIONAL - for profile images, etc.)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET=
AWS_S3_REGION=us-east-1

# Analytics & Conversion Tracking (REQUIRED for marketing features)
# Google Analytics 4
GA4_MEASUREMENT_ID=G-...  # Your GA4 measurement ID
GA4_API_SECRET=  # For server-side tracking (optional)

# Google Tag Manager
GTM_CONTAINER_ID=GTM-...  # Your GTM container ID
GTM_SERVER_CONTAINER_URL=  # For server-side GTM (optional)

# Meta/Facebook Pixel
META_PIXEL_ID=  # Your Meta Pixel ID
META_ACCESS_TOKEN=  # For Conversions API (optional)

# Google Ads Conversion Tracking
GOOGLE_ADS_CONVERSION_ID=AW-...  # Your Google Ads conversion ID
GOOGLE_ADS_CONVERSION_LABEL=  # Default conversion label

# Google OAuth (for GMB and other Google services)
GOOGLE_CLIENT_ID=  # From Google Cloud Console
GOOGLE_CLIENT_SECRET=  # From Google Cloud Console

# Meta Business OAuth (for advanced Meta features)
META_APP_ID=  # Your Meta App ID
META_APP_SECRET=  # Your Meta App Secret

# =============================================================================
# REDIS CONFIGURATION (REQUIRED for production)
# =============================================================================
# Redis is required for caching, rate limiting, and background jobs
# 
# AWS ElastiCache Setup (RECOMMENDED):
# 1. Create ElastiCache cluster using scripts/setup_aws_elasticache.py
# 2. Configure security groups using scripts/configure_elasticache_security.py
# 3. Update REDIS_URL with ElastiCache primary endpoint
# 4. Enable SSL and AUTH for production security
#
# Alternative providers:
# - Google Memorystore: redis://your-instance.memorystore.googleusercontent.com:6379
# - Azure Cache: your-cache.redis.cache.windows.net:6380
# - Redis Cloud: redis://username:password@host:port
# - Self-hosted: redis://username:password@your-server:6379

# Basic Redis Connection
REDIS_URL=redis://localhost:6379/0  # REQUIRED: Update for production
REDIS_PASSWORD=  # REQUIRED for production Redis instances
REDIS_SSL=false  # Set to true for cloud Redis with SSL (REQUIRED for ElastiCache)

# AWS ElastiCache Specific Settings (Enable for production)
AWS_ELASTICACHE_ENABLED=false  # Set to true when using ElastiCache
AWS_ELASTICACHE_CLUSTER_ID=  # Your ElastiCache cluster ID
AWS_ELASTICACHE_PRIMARY_ENDPOINT=  # Primary endpoint from ElastiCache
AWS_ELASTICACHE_READER_ENDPOINT=  # Reader endpoint for read operations
AWS_ELASTICACHE_PORT=6379  # ElastiCache port (default 6379)
AWS_ELASTICACHE_SSL_CERT_REQS=required  # SSL certificate requirements
AWS_ELASTICACHE_SSL_CA_CERTS=/etc/ssl/certs/ca-certificates.crt  # CA bundle path

# Connection Pool Configuration
REDIS_MAX_CONNECTIONS=50  # Increase for high traffic (ElastiCache supports 65,000)
REDIS_MIN_IDLE_CONNECTIONS=10  # Minimum idle connections in pool
REDIS_CONNECTION_TIMEOUT=20  # Connection timeout in seconds
REDIS_SOCKET_TIMEOUT=5  # Socket timeout in seconds
REDIS_SOCKET_KEEPALIVE=true  # Enable TCP keepalive
REDIS_RETRY_ON_TIMEOUT=true  # Retry on timeout errors
REDIS_HEALTH_CHECK_INTERVAL=30  # Health check interval in seconds

# Performance Optimization
REDIS_CONNECTION_POOL_BLOCKING=true  # Block when pool is exhausted
REDIS_CONNECTION_POOL_TIMEOUT=20  # Pool blocking timeout
REDIS_DECODE_RESPONSES=true  # Decode responses to strings
REDIS_ENCODING=utf-8  # Character encoding

# Rate Limiting (Redis-backed for distributed rate limiting)
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000
RATE_LIMIT_PER_DAY=10000
RATE_LIMIT_REDIS_KEY_PREFIX=rate:  # Prefix for rate limit keys
RATE_LIMIT_SLIDING_WINDOW=true  # Use sliding window algorithm

# Caching Configuration
CACHE_ENABLED=true
CACHE_TTL_DEFAULT=300  # 5 minutes
CACHE_TTL_BOOKINGS=60  # 1 minute for real-time booking data
CACHE_TTL_ANALYTICS=1800  # 30 minutes for analytics
CACHE_TTL_STATIC=3600  # 1 hour for static content
CACHE_TTL_USER_SESSIONS=86400  # 24 hours for user sessions
CACHE_KEY_PREFIX=6fb:  # Prefix for cache keys
CACHE_COMPRESSION=true  # Enable cache compression

# Redis Monitoring and Alerting
REDIS_MONITORING_ENABLED=true  # Enable Redis performance monitoring
REDIS_SLOW_LOG_ENABLED=true  # Enable slow query logging
REDIS_SLOW_LOG_THRESHOLD=10000  # Slow query threshold in microseconds
REDIS_MAX_MEMORY_POLICY=allkeys-lru  # Memory eviction policy
REDIS_NOTIFY_KEYSPACE_EVENTS=Ex  # Enable keyspace notifications

# CloudWatch Integration (AWS only)
CLOUDWATCH_ENABLED=false  # Enable CloudWatch metrics
CLOUDWATCH_NAMESPACE=BookedBarber/Redis  # CloudWatch namespace
CLOUDWATCH_REGION=us-east-1  # AWS region for CloudWatch

# Security Headers
SECURE_HEADERS_ENABLED=true
HSTS_ENABLED=true
CONTENT_SECURITY_POLICY_ENABLED=true

# Backup Configuration (RECOMMENDED)
BACKUP_ENABLED=true
BACKUP_RETENTION_DAYS=30

# Monitoring
HEALTH_CHECK_ENABLED=true
METRICS_ENABLED=true

# Feature Flags
ENABLE_MFA=true
ENABLE_WEBHOOKS=true
ENABLE_AI_FEATURES=false
ENABLE_DEMO_MODE=false

# Performance
WORKER_COUNT=4
CONNECTION_POOL_SIZE=20
REQUEST_TIMEOUT=30

# Notes:
# 1. All REQUIRED fields must be filled before deployment
# 2. Use generate_production_keys.py to create secure keys
# 3. Test all integrations before going live
# 4. Monitor error rates and performance after deployment
# 5. Set up automated backups immediately after deployment