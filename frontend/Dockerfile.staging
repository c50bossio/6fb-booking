# 6FB Booking Platform Frontend - Staging Dockerfile
# Optimized for staging environment with development tools

FROM node:18-alpine as base

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV GENERATE_SOURCEMAP=true

# Install system dependencies
RUN apk add --no-cache libc6-compat curl git

# Set work directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production --silent

# Install development dependencies for staging
RUN npm install --save-dev \
    @types/node \
    @types/react \
    @types/react-dom \
    eslint \
    prettier \
    typescript

# Copy application code
COPY . .

# Build args for staging-specific configuration
ARG BUILD_ENV=staging
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_ENVIRONMENT=staging

# Set build environment variables
ENV BUILD_ENV=$BUILD_ENV
ENV NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_ENVIRONMENT=$NEXT_PUBLIC_ENVIRONMENT

# Build the application
RUN npm run build

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Expose port
EXPOSE 3000

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Set ownership
RUN chown -R nextjs:nodejs /app
USER nextjs

# Start the application
CMD ["npm", "start"]
