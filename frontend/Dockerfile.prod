# =============================================================================
# 6FB Booking Platform - Production Frontend Dockerfile
# =============================================================================

# Use Node.js 18 Alpine for smaller image size
FROM node:18-alpine as base

# Set environment variables
ENV NODE_ENV=production \
    NEXT_TELEMETRY_DISABLED=1 \
    NPM_CONFIG_CACHE=/tmp/.npm

# Install dependencies for building
RUN apk add --no-cache \
    libc6-compat \
    curl

# Create app user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Set working directory
WORKDIR /app

# =============================================================================
# DEPENDENCY INSTALLATION STAGE
# =============================================================================
FROM base as dependencies

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# =============================================================================
# BUILD STAGE
# =============================================================================
FROM base as builder

# Copy package files and install all dependencies (including dev)
COPY package*.json ./
RUN npm ci

# Copy source code
COPY . .

# Copy production environment
COPY .env.production .env.production.local

# Build the application
RUN npm run build

# =============================================================================
# PRODUCTION STAGE
# =============================================================================
FROM base as production

# Copy built application
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

# Copy production environment
COPY --from=builder /app/.env.production.local ./.env.production.local

# Create necessary directories
RUN mkdir -p /app/.next/logs && \
    chown -R nextjs:nodejs /app

# Switch to app user
USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Expose port
EXPOSE 3000

# Production startup command
CMD ["node", "server.js"]
