# =============================================================================
# 6FB Booking Platform - Production Nginx Configuration
# Optimized for performance, security, and scalability
# =============================================================================

# Worker configuration
worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;

# Error log
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # =============================================================================
    # BASIC CONFIGURATION
    # =============================================================================
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Charset
    charset utf-8;
    source_charset utf-8;
    
    # =============================================================================
    # PERFORMANCE OPTIMIZATION
    # =============================================================================
    
    # Sendfile and TCP optimization
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Timeouts
    keepalive_timeout 65;
    keepalive_requests 1000;
    client_header_timeout 20;
    client_body_timeout 20;
    reset_timedout_connection on;
    send_timeout 20;
    
    # Buffers
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    
    # Hash table sizes
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    server_names_hash_bucket_size 128;
    server_names_hash_max_size 512;
    
    # =============================================================================
    # COMPRESSION
    # =============================================================================
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # =============================================================================
    # SECURITY HEADERS (Global)
    # =============================================================================
    
    # Hide Nginx version
    server_tokens off;
    
    # Security headers (will be overridden in specific locations as needed)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # =============================================================================
    # RATE LIMITING
    # =============================================================================
    
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=3r/m;
    limit_req_zone $binary_remote_addr zone=booking_limit:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=payment_limit:10m rate=2r/m;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=20r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;
    
    # =============================================================================
    # LOGGING
    # =============================================================================
    
    # Log format
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        '"$host" sn="$server_name" '
                        'rt=$request_time '
                        'ua="$upstream_addr" us="$upstream_status" '
                        'ut="$upstream_response_time" ul="$upstream_response_length" '
                        'cs=$upstream_cache_status';
    
    # Access log
    access_log /var/log/nginx/access.log main_ext;
    
    # =============================================================================
    # CACHING
    # =============================================================================
    
    # Proxy cache path
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=app_cache:10m max_size=1g 
                     inactive=60m use_temp_path=off;
    
    # Cache for static files
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # =============================================================================
    # UPSTREAM SERVERS
    # =============================================================================
    
    upstream backend {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream frontend {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # =============================================================================
    # GEO AND MAP CONFIGURATION
    # =============================================================================
    
    # Define real IP from trusted proxies
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from 127.0.0.1;
    
    # Map for determining if request is from mobile
    map $http_user_agent $is_mobile {
        default 0;
        "~*android|iphone|ipad|ipod|blackberry|windows phone" 1;
    }
    
    # =============================================================================
    # HTTP TO HTTPS REDIRECT
    # =============================================================================
    
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Security headers for HTTP
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Health check endpoint (allow HTTP for load balancer)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Let's Encrypt ACME challenge
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            try_files $uri =404;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # =============================================================================
    # HTTPS SERVER
    # =============================================================================
    
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;
        
        # =============================================================================
        # SSL CONFIGURATION
        # =============================================================================
        
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL protocols and ciphers
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # SSL session caching
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # SSL stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # =============================================================================
        # SECURITY HEADERS (HTTPS)
        # =============================================================================
        
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://m.stripe.network https://www.google-analytics.com https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https:; frame-src 'self' https://js.stripe.com https://hooks.stripe.com; object-src 'none'; base-uri 'self'; form-action 'self';" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # =============================================================================
        # CONNECTION LIMITS
        # =============================================================================
        
        limit_conn conn_limit_per_ip 10;
        limit_conn conn_limit_per_server 100;
        
        # =============================================================================
        # HEALTH CHECK ENDPOINTS
        # =============================================================================
        
        location /health {
            access_log off;
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/health {
            access_log off;
            proxy_pass http://frontend/api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # =============================================================================
        # API ROUTES (Backend)
        # =============================================================================
        
        # Authentication endpoints (strict rate limiting)
        location ~ ^/api/v1/auth/(login|token|register) {
            limit_req zone=auth_limit burst=5 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age "86400" always;
            
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
        
        # Payment endpoints (very strict rate limiting)
        location ~ ^/api/v1/(payments|webhooks) {
            limit_req zone=payment_limit burst=3 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for payment processing
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Booking endpoints (moderate rate limiting)
        location ~ ^/api/v1/(appointments|booking) {
            limit_req zone=booking_limit burst=10 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
        
        # General API endpoints
        location /api/v1/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
        
        # =============================================================================
        # STATIC FILES AND ASSETS
        # =============================================================================
        
        # Next.js static files
        location /_next/static {
            proxy_pass http://frontend;
            proxy_cache app_cache;
            proxy_cache_valid 200 1y;
            proxy_cache_valid 404 1m;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header X-Cache-Status $upstream_cache_status;
            
            # Compression for static assets
            gzip_static on;
            
            expires 1y;
        }
        
        # Images and media files
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
            proxy_pass http://frontend;
            proxy_cache app_cache;
            proxy_cache_valid 200 30d;
            proxy_cache_valid 404 1m;
            add_header Cache-Control "public, max-age=2592000";
            add_header X-Cache-Status $upstream_cache_status;
            
            expires 30d;
        }
        
        # CSS and JavaScript files
        location ~* \.(css|js|mjs)$ {
            proxy_pass http://frontend;
            proxy_cache app_cache;
            proxy_cache_valid 200 1d;
            proxy_cache_valid 404 1m;
            add_header Cache-Control "public, max-age=86400";
            add_header X-Cache-Status $upstream_cache_status;
            
            gzip_static on;
            expires 1d;
        }
        
        # Font files
        location ~* \.(woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            proxy_cache app_cache;
            proxy_cache_valid 200 1y;
            add_header Cache-Control "public, max-age=31536000";
            add_header Access-Control-Allow-Origin "*";
            
            expires 1y;
        }
        
        # =============================================================================
        # FRONTEND ROUTES (Next.js)
        # =============================================================================
        
        location / {
            limit_req zone=general_limit burst=50 nodelay;
            
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Next.js
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Proxy timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # =============================================================================
        # SPECIAL ROUTES
        # =============================================================================
        
        # Robots.txt
        location = /robots.txt {
            proxy_pass http://frontend;
            proxy_cache app_cache;
            proxy_cache_valid 200 1d;
            add_header Cache-Control "public, max-age=86400";
            
            expires 1d;
        }
        
        # Sitemap
        location = /sitemap.xml {
            proxy_pass http://frontend;
            proxy_cache app_cache;
            proxy_cache_valid 200 1h;
            add_header Cache-Control "public, max-age=3600";
            
            expires 1h;
        }
        
        # Favicon
        location = /favicon.ico {
            proxy_pass http://frontend;
            proxy_cache app_cache;
            proxy_cache_valid 200 30d;
            add_header Cache-Control "public, max-age=2592000";
            
            expires 30d;
        }
        
        # =============================================================================
        # ERROR PAGES
        # =============================================================================
        
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}