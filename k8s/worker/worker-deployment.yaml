apiVersion: v1
kind: ConfigMap
metadata:
  name: worker-config
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: worker
    app.kubernetes.io/component: background-tasks
data:
  ENVIRONMENT: "production"
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"
  C_FORCE_ROOT: "1"
  CELERY_WORKER_CONCURRENCY: "2"
  CELERY_WORKER_MAX_TASKS_PER_CHILD: "1000"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: worker
    app.kubernetes.io/component: background-tasks
    app.kubernetes.io/version: "2.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: worker
        app.kubernetes.io/component: background-tasks
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9540"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: worker
        image: bookedbarber/worker:latest  # Update with your registry
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        command:
        - celery
        - -A
        - workers.celery_app
        - worker
        - --loglevel=info
        - --concurrency=2
        - --max-tasks-per-child=1000
        env:
        # Configuration from ConfigMap
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: worker-config
              key: ENVIRONMENT
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: worker-config
              key: PYTHONUNBUFFERED
        - name: C_FORCE_ROOT
          valueFrom:
            configMapKeyRef:
              name: worker-config
              key: C_FORCE_ROOT
        # Secrets
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: REDIS_URL
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: SENDGRID_API_KEY
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: TWILIO_ACCOUNT_SID
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: TWILIO_AUTH_TOKEN
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: SENTRY_DSN
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        livenessProbe:
          exec:
            command:
            - python
            - /app/worker_healthcheck.py
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 20
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - /app/worker_healthcheck.py
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 3
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 60

---
# Celery Beat Scheduler (for periodic tasks)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: celery-beat
    app.kubernetes.io/component: scheduler
    app.kubernetes.io/version: "2.0"
spec:
  replicas: 1  # Only one beat scheduler should run
  strategy:
    type: Recreate  # Ensure only one beat scheduler runs at a time
  selector:
    matchLabels:
      app.kubernetes.io/name: celery-beat
  template:
    metadata:
      labels:
        app.kubernetes.io/name: celery-beat
        app.kubernetes.io/component: scheduler
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: celery-beat
        image: bookedbarber/worker:latest  # Same image as worker
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        command:
        - celery
        - -A
        - workers.celery_app
        - beat
        - --loglevel=info
        - --schedule=/tmp/celerybeat-schedule
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: worker-config
              key: ENVIRONMENT
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: worker-config
              key: PYTHONUNBUFFERED
        - name: C_FORCE_ROOT
          valueFrom:
            configMapKeyRef:
              name: worker-config
              key: C_FORCE_ROOT
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: REDIS_URL
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: worker-hpa
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: worker
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: worker
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30