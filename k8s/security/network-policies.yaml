# Network Policies for BookedBarber V2 Security
# Default deny all traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: security
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Allow frontend to communicate with backend
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-to-backend
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: frontend
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: backend
    ports:
    - protocol: TCP
      port: 8000
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow external HTTPS for Stripe, Google APIs, etc.
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
# Allow backend to communicate with database and cache
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-to-data-stores
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: backend
  policyTypes:
  - Egress
  egress:
  # PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Redis
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow external HTTPS for Stripe, SendGrid, Twilio, Google APIs, etc.
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 587  # SMTP TLS
    - protocol: TCP
      port: 25   # SMTP

---
# Allow workers to communicate with database, cache, and external services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: worker-to-data-stores
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: worker
  policyTypes:
  - Egress
  egress:
  # PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Redis
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow external HTTPS and SMTP for email/SMS services
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 587  # SMTP TLS
    - protocol: TCP
      port: 25   # SMTP

---
# Allow Celery Beat scheduler to communicate with Redis and database
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: celery-beat-to-data-stores
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: celery-beat
  policyTypes:
  - Egress
  egress:
  # PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Redis
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
# Allow ingress traffic to frontend and backend
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-traffic
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: web
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000

---
# Allow ingress traffic to backend API
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-api-ingress-traffic
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: api
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  # Allow frontend to access backend
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: frontend
    ports:
    - protocol: TCP
      port: 8000

---
# Allow monitoring access to all services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-access
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: monitoring
  policyTypes:
  - Egress
  egress:
  # Allow access to all pods for metrics collection
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 3000  # Frontend metrics
    - protocol: TCP
      port: 8000  # Backend metrics
    - protocol: TCP
      port: 9540  # Worker metrics
    - protocol: TCP
      port: 5432  # Postgres metrics
    - protocol: TCP
      port: 6379  # Redis metrics
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
# Allow pods to receive monitoring traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-metrics-scraping
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: security
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: monitoring
    ports:
    - protocol: TCP
      port: 3000  # Frontend metrics
    - protocol: TCP
      port: 8000  # Backend metrics
    - protocol: TCP
      port: 9540  # Worker metrics