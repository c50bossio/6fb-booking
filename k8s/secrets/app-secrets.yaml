# BookedBarber V2 Application Secrets
# NOTE: This is a template. In production, use external secret management
# like AWS Secrets Manager, Azure Key Vault, or Kubernetes External Secrets

apiVersion: v1
kind: Secret
metadata:
  name: bookedbarber-secrets
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database credentials
  DATABASE_URL: "postgresql://bookedbarber:CHANGE_ME@postgres:5432/bookedbarber"
  POSTGRES_USER: "bookedbarber"
  POSTGRES_PASSWORD: "CHANGE_ME"
  POSTGRES_DB: "bookedbarber"
  
  # Redis connection
  REDIS_URL: "redis://redis:6379/0"
  
  # JWT signing key
  JWT_SECRET_KEY: "CHANGE_ME_TO_SECURE_RANDOM_KEY"
  
  # Stripe configuration
  STRIPE_SECRET_KEY: "sk_test_CHANGE_ME"
  STRIPE_PUBLISHABLE_KEY: "pk_test_CHANGE_ME"
  STRIPE_WEBHOOK_SECRET: "whsec_CHANGE_ME"
  
  # Email service (SendGrid)
  SENDGRID_API_KEY: "SG.CHANGE_ME"
  
  # SMS service (Twilio)
  TWILIO_ACCOUNT_SID: "CHANGE_ME"
  TWILIO_AUTH_TOKEN: "CHANGE_ME"
  
  # Google services
  GOOGLE_CLIENT_ID: "CHANGE_ME.apps.googleusercontent.com"
  GOOGLE_CLIENT_SECRET: "CHANGE_ME"
  
  # Monitoring (Sentry)
  SENTRY_DSN: "https://CHANGE_ME@sentry.io/PROJECT_ID"
  NEXT_PUBLIC_SENTRY_DSN: "https://CHANGE_ME@sentry.io/PROJECT_ID"
  
  # Grafana admin password
  GRAFANA_ADMIN_PASSWORD: "CHANGE_ME_SECURE_PASSWORD"

---
# TLS Secret for ingress (placeholder)
apiVersion: v1
kind: Secret
metadata:
  name: bookedbarber-tls
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: bookedbarber
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  # In production, use cert-manager for automatic certificate management
  tls.crt: LS0tLS1CRUdJTi... # Your certificate
  tls.key: LS0tLS1CRUdJTi... # Your private key