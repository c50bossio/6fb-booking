# ConfigMaps for Application Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: bookedbarber-v2
  labels:
    app: backend
    tier: config
data:
  # Six Figure Barber Methodology Configuration
  SIX_FIGURE_BARBER_MODE: "enterprise"
  FRANCHISE_MODE: "enabled"
  MULTI_TENANT_SUPPORT: "true"
  
  # Application Settings
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  DEBUG: "false"
  API_VERSION: "v2"
  
  # Database Configuration
  DB_POOL_SIZE: "20"
  DB_MAX_CONNECTIONS: "100"
  DB_CONNECTION_TIMEOUT: "30"
  DB_QUERY_TIMEOUT: "60"
  
  # Redis Configuration
  REDIS_CLUSTER_MODE: "enabled"
  REDIS_CACHE_TTL: "3600"
  REDIS_SESSION_TTL: "86400"
  
  # API Rate Limiting
  RATE_LIMIT_REQUESTS_PER_MINUTE: "1000"
  RATE_LIMIT_BURST: "100"
  
  # Payment Processing
  STRIPE_WEBHOOK_TOLERANCE: "300"
  PAYMENT_RETRY_ATTEMPTS: "3"
  PAYMENT_TIMEOUT: "30"
  
  # Email Service
  EMAIL_PROVIDER: "sendgrid"
  EMAIL_TEMPLATE_VERSION: "v2"
  
  # SMS Service
  SMS_PROVIDER: "twilio"
  SMS_RATE_LIMIT: "10"
  
  # File Upload
  MAX_FILE_SIZE: "50MB"
  ALLOWED_FILE_TYPES: "jpg,jpeg,png,pdf,doc,docx"
  
  # Security
  JWT_EXPIRATION: "3600"
  REFRESH_TOKEN_EXPIRATION: "2592000"
  PASSWORD_RESET_EXPIRATION: "1800"
  
  # Monitoring
  METRICS_ENABLED: "true"
  TRACING_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: bookedbarber-v2
  labels:
    app: frontend
    tier: config
data:
  # Six Figure Barber Methodology Frontend Settings
  NEXT_PUBLIC_SIX_FIGURE_BARBER_MODE: "enterprise"
  NEXT_PUBLIC_FRANCHISE_FEATURES: "enabled"
  NEXT_PUBLIC_MULTI_LOCATION_SUPPORT: "true"
  
  # Application Configuration
  NEXT_PUBLIC_APP_NAME: "BookedBarber V2"
  NEXT_PUBLIC_APP_VERSION: "2.0.0"
  NEXT_PUBLIC_ENVIRONMENT: "production"
  
  # API Configuration
  NEXT_PUBLIC_API_VERSION: "v2"
  NEXT_PUBLIC_API_TIMEOUT: "30000"
  
  # Feature Flags
  NEXT_PUBLIC_ENABLE_ANALYTICS: "true"
  NEXT_PUBLIC_ENABLE_CHAT_SUPPORT: "true"
  NEXT_PUBLIC_ENABLE_NOTIFICATIONS: "true"
  NEXT_PUBLIC_ENABLE_DARK_MODE: "true"
  
  # Payment Configuration
  NEXT_PUBLIC_STRIPE_CONNECT_ENABLED: "true"
  NEXT_PUBLIC_PAYMENT_METHODS: "card,ach,apple_pay,google_pay"
  
  # Google Services
  NEXT_PUBLIC_GOOGLE_ANALYTICS_ID: "G-XXXXXXXXXX"
  NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID: "GTM-XXXXXXX"
  
  # Social Media Integration
  NEXT_PUBLIC_FACEBOOK_APP_ID: "your-facebook-app-id"
  NEXT_PUBLIC_INSTAGRAM_INTEGRATION: "enabled"
  
  # Cache Configuration
  NEXT_PUBLIC_CACHE_STRATEGY: "swr"
  NEXT_PUBLIC_CACHE_TTL: "300000"
  
  # UI Configuration
  NEXT_PUBLIC_THEME: "six-figure-barber"
  NEXT_PUBLIC_DEFAULT_LOCALE: "en-US"
  NEXT_PUBLIC_SUPPORTED_LOCALES: "en-US,es-ES,fr-FR"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: bookedbarber-v2
  labels:
    app: postgres
    tier: config
data:
  postgresql.conf: |
    # PostgreSQL Enterprise Configuration for Six Figure Barber Platform
    
    # Connection Settings
    listen_addresses = '*'
    port = 5432
    max_connections = 200
    superuser_reserved_connections = 3
    
    # Memory Settings (Optimized for Enterprise Load)
    shared_buffers = 4GB
    effective_cache_size = 12GB
    maintenance_work_mem = 512MB
    work_mem = 32MB
    
    # Checkpoint Settings
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    
    # Query Planner
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
    # Write Ahead Log
    wal_level = replica
    max_wal_senders = 3
    hot_standby = on
    
    # Logging (for Franchise Operations Monitoring)
    log_destination = 'stderr'
    logging_collector = on
    log_directory = 'log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_rotation_age = 1d
    log_rotation_size = 100MB
    log_min_duration_statement = 1000
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    log_checkpoints = on
    log_connections = on
    log_disconnections = on
    log_lock_waits = on
    
    # Statistics
    track_activities = on
    track_counts = on
    track_io_timing = on
    track_functions = all
    
    # Autovacuum (Critical for High-Volume Booking Operations)
    autovacuum = on
    autovacuum_max_workers = 6
    autovacuum_naptime = 30s
    autovacuum_vacuum_threshold = 50
    autovacuum_analyze_threshold = 50
    autovacuum_vacuum_scale_factor = 0.1
    autovacuum_analyze_scale_factor = 0.05
    
    # Lock Management
    deadlock_timeout = 1s
    max_locks_per_transaction = 256
    
    # Background Writer
    bgwriter_delay = 200ms
    bgwriter_lru_maxpages = 100
    bgwriter_lru_multiplier = 2.0
    
    # Statement Timeout (Prevent Long-Running Queries)
    statement_timeout = 300000
    idle_in_transaction_session_timeout = 600000
    
    # SSL Configuration
    ssl = on
    ssl_cert_file = 'server.crt'
    ssl_key_file = 'server.key'
    ssl_protocols = 'TLSv1.2,TLSv1.3'
    
    # Replication Settings
    archive_mode = on
    archive_command = 'cp %p /var/lib/postgresql/archive/%f'
    max_replication_slots = 3
    wal_keep_segments = 32
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: bookedbarber-v2
  labels:
    app: redis-cluster
    tier: config
data:
  redis.conf: |
    # Redis Cluster Configuration for Six Figure Barber Platform
    
    # Network
    bind 0.0.0.0
    protected-mode no
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    
    # General
    daemonize no
    supervised no
    pidfile /data/redis.pid
    loglevel notice
    logfile ""
    databases 1
    
    # Cluster Configuration
    cluster-enabled yes
    cluster-config-file /data/nodes.conf
    cluster-node-timeout 5000
    cluster-announce-ip 0.0.0.0
    cluster-announce-port 6379
    cluster-announce-bus-port 16379
    cluster-migration-barrier 1
    cluster-require-full-coverage no
    
    # Memory Management (Optimized for Booking Sessions)
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5
    
    # Persistence (for Session Storage)
    save 900 1
    save 300 10
    save 60 10000
    
    # AOF Configuration
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    
    # Security
    requirepass "your-redis-password"
    
    # Performance Tuning
    hz 10
    dynamic-hz yes
    
    # Client Output Buffer Limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    
    # Slow Log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Latency Monitoring
    latency-monitor-threshold 100
    
    # Key Eviction Notifications (for Session Management)
    notify-keyspace-events Ex
    
    # Threading (Redis 6.0+)
    io-threads 4
    io-threads-do-reads yes
---
# Secrets for Sensitive Configuration
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: bookedbarber-v2
  labels:
    app: bookedbarber
    tier: secrets
type: Opaque
stringData:
  # Application Secret Keys
  secret-key: "your-secret-key-change-in-production"
  nextauth-secret: "your-nextauth-secret-change-in-production"
  jwt-secret: "your-jwt-secret-change-in-production"
  encryption-key: "your-encryption-key-change-in-production"
  
  # API Keys for Six Figure Barber Integrations
  google-calendar-client-secret: "your-google-calendar-client-secret"
  webhook-secret: "your-webhook-secret-change-in-production"
---
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: bookedbarber-v2
  labels:
    app: postgres
    tier: secrets
type: Opaque
stringData:
  username: "bookedbarber_user"
  password: "your-database-password-change-in-production"
  url: "postgresql://bookedbarber_user:your-database-password-change-in-production@postgres-service:5432/bookedbarber_v2"
  readonly-username: "bookedbarber_readonly"
  readonly-password: "your-readonly-password-change-in-production"
  readonly-url: "postgresql://bookedbarber_readonly:your-readonly-password-change-in-production@postgres-service:5432/bookedbarber_v2"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: bookedbarber-v2
  labels:
    app: redis-cluster
    tier: secrets
type: Opaque
stringData:
  password: "your-redis-password-change-in-production"
  url: "redis://:your-redis-password-change-in-production@redis-cluster-service:6379"
  cluster-url: "redis://:your-redis-password-change-in-production@redis-cluster-service:6379/0"
---
apiVersion: v1
kind: Secret
metadata:
  name: stripe-secrets
  namespace: bookedbarber-v2
  labels:
    app: bookedbarber
    tier: secrets
type: Opaque
stringData:
  secret-key: "sk_live_your_stripe_secret_key"
  publishable-key: "pk_live_your_stripe_publishable_key"
  webhook-secret: "whsec_your_stripe_webhook_secret"
  connect-client-id: "ca_your_stripe_connect_client_id"
  connect-client-secret: "sk_live_your_stripe_connect_secret"
---
apiVersion: v1
kind: Secret
metadata:
  name: sendgrid-secrets
  namespace: bookedbarber-v2
  labels:
    app: bookedbarber
    tier: secrets
type: Opaque
stringData:
  api-key: "SG.your_sendgrid_api_key"
  from-email: "noreply@bookedbarber.com"
  from-name: "BookedBarber V2"
---
apiVersion: v1
kind: Secret
metadata:
  name: twilio-secrets
  namespace: bookedbarber-v2
  labels:
    app: bookedbarber
    tier: secrets
type: Opaque
stringData:
  account-sid: "your_twilio_account_sid"
  auth-token: "your_twilio_auth_token"
  phone-number: "+1234567890"
---
apiVersion: v1
kind: Secret
metadata:
  name: google-maps-secrets
  namespace: bookedbarber-v2
  labels:
    app: bookedbarber
    tier: secrets
type: Opaque
stringData:
  api-key: "your_google_maps_api_key"
  places-api-key: "your_google_places_api_key"
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-credentials
  namespace: monitoring
  labels:
    app: grafana
    tier: secrets
type: Opaque
stringData:
  admin-password: "your-grafana-admin-password-change-in-production"
  admin-user: "admin"