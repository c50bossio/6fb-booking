apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: api
data:
  ENVIRONMENT: "production"
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"
  NEXT_PUBLIC_API_URL: "https://api.bookedbarber.com"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "2.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: backend
        image: bookedbarber/backend:latest  # Update with your registry
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        # Configuration from ConfigMap
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: ENVIRONMENT
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: PYTHONUNBUFFERED
        # Secrets
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: REDIS_URL
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: JWT_SECRET_KEY
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: STRIPE_SECRET_KEY
        - name: STRIPE_PUBLISHABLE_KEY
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: STRIPE_PUBLISHABLE_KEY
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: STRIPE_WEBHOOK_SECRET
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: SENDGRID_API_KEY
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: TWILIO_ACCOUNT_SID
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: TWILIO_AUTH_TOKEN
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: GOOGLE_CLIENT_ID
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: GOOGLE_CLIENT_SECRET
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: bookedbarber-secrets
              key: SENTRY_DSN
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /app/temp
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      - name: temp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: api
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  selector:
    app.kubernetes.io/name: backend

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: bookedbarber
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 60