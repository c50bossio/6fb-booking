{
  "auto_fix_rules": {
    "database_schema": {
      "patterns": [
        "column.*does not exist",
        "relation.*does not exist",
        "table.*doesn't exist"
      ],
      "confidence": "safe",
      "auto_apply": true,
      "max_attempts": 3,
      "rollback_on_failure": true,
      "notification_channels": ["slack", "email"],
      "test_commands": [
        "python3 -m pytest tests/test_models.py -v"
      ]
    },
    "authentication": {
      "patterns": [
        "Could not validate credentials",
        "Token.*expired",
        "Invalid.*token",
        "Authentication.*failed"
      ],
      "confidence": "review",
      "auto_apply": false,
      "max_attempts": 1,
      "rollback_on_failure": true,
      "notification_channels": ["slack", "email", "sentry"],
      "test_commands": [
        "python3 -m pytest tests/test_auth.py -v"
      ]
    },
    "api_rate_limit": {
      "patterns": [
        "rate limit.*exceeded",
        "429.*Too Many Requests",
        "quota.*exceeded",
        "API.*limit.*reached"
      ],
      "confidence": "safe",
      "auto_apply": true,
      "max_attempts": 2,
      "rollback_on_failure": true,
      "notification_channels": ["slack"],
      "test_commands": [
        "python3 -m pytest tests/test_api.py -v"
      ]
    },
    "import_error": {
      "patterns": [
        "ModuleNotFoundError",
        "ImportError",
        "No module named",
        "cannot import name"
      ],
      "confidence": "safe",
      "auto_apply": true,
      "max_attempts": 2,
      "rollback_on_failure": true,
      "notification_channels": ["slack"],
      "test_commands": [
        "python3 -c 'import sys; print(sys.path)'",
        "python3 -m pytest tests/ -x --tb=short"
      ]
    },
    "undefined_variable": {
      "patterns": [
        "is not defined",
        "NameError",
        "UnboundLocalError"
      ],
      "confidence": "review",
      "auto_apply": false,
      "max_attempts": 1,
      "rollback_on_failure": true,
      "notification_channels": ["slack", "email"],
      "test_commands": [
        "python3 -m py_compile"
      ]
    },
    "type_error": {
      "patterns": [
        "TypeError",
        "AttributeError",
        "object has no attribute"
      ],
      "confidence": "manual",
      "auto_apply": false,
      "max_attempts": 0,
      "rollback_on_failure": true,
      "notification_channels": ["slack", "email", "pagerduty"],
      "test_commands": []
    }
  },
  "safety_rules": {
    "max_concurrent_fixes": 3,
    "max_fixes_per_hour": 10,
    "max_fixes_per_day": 50,
    "blacklist_files": [
      "migrations/",
      "production.py",
      "settings.py",
      ".env"
    ],
    "blacklist_patterns": [
      "DROP TABLE",
      "DELETE FROM",
      "rm -rf",
      "sudo"
    ],
    "required_approvals": {
      "database_changes": ["dba", "senior_dev"],
      "auth_changes": ["security_team", "senior_dev"],
      "critical_fixes": ["cto", "lead_dev"]
    }
  },
  "notifications": {
    "slack": {
      "webhook_url": "${SLACK_WEBHOOK_URL}",
      "channel": "#auto-fixes",
      "username": "SentryAutoFixer"
    },
    "email": {
      "smtp_server": "${SMTP_SERVER}",
      "from_email": "autofixer@yourcompany.com",
      "to_emails": ["dev-team@yourcompany.com"]
    },
    "sentry": {
      "project": "auto-fixer-notifications",
      "environment": "production"
    }
  },
  "monitoring": {
    "health_check_interval": 300,
    "metrics_collection": true,
    "log_level": "INFO",
    "success_rate_threshold": 0.8,
    "alert_on_failure_rate": 0.3
  },
  "claude_config": {
    "model": "claude-3-sonnet-20240229",
    "max_tokens": 2000,
    "temperature": 0.1,
    "system_prompt": "You are an expert software engineer specializing in automated error fixing. Always prioritize safety and provide detailed explanations for your fixes."
  }
}