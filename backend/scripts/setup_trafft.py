#!/usr/bin/env python3
"""
Interactive script to set up Trafft integration
"""
import os
import sys
import requests
import secrets
from pathlib import Path

# Add parent directory to path
sys.path.append(str(Path(__file__).parent.parent))

def generate_webhook_secret():
    """Generate a secure webhook secret"""
    return secrets.token_urlsafe(32)

def test_trafft_api(api_key):
    """Test if the Trafft API key is valid"""
    try:
        response = requests.get(
            "https://api.trafft.com/v1/employees",
            headers={"Authorization": f"Bearer {api_key}"}
        )
        return response.status_code == 200
    except Exception as e:
        print(f"Error testing API key: {e}")
        return False

def main():
    print("\n=== 6FB Platform - Trafft Integration Setup ===\n")
    
    # Get backend URL
    backend_url = input("Enter your backend URL (e.g., https://sixfb-backend.onrender.com): ").strip()
    if not backend_url.startswith("http"):
        backend_url = f"https://{backend_url}"
    
    # Get Trafft API key
    print("\nTo get your Trafft API key:")
    print("1. Log into Trafft admin panel")
    print("2. Go to Settings → Integrations → API")
    print("3. Copy your API key\n")
    
    api_key = input("Enter your Trafft API key: ").strip()
    
    # Test API key
    print("\nTesting API key...")
    if test_trafft_api(api_key):
        print("✅ API key is valid!")
    else:
        print("❌ API key appears to be invalid. Please check and try again.")
        return
    
    # Generate webhook secret
    webhook_secret = generate_webhook_secret()
    print(f"\n✅ Generated webhook secret: {webhook_secret}")
    
    # Display environment variables
    print("\n=== Environment Variables for Render ===")
    print("\nAdd these to your backend service on Render:\n")
    print(f"TRAFFT_API_URL=https://api.trafft.com")
    print(f"TRAFFT_API_KEY={api_key}")
    print(f"TRAFFT_WEBHOOK_SECRET={webhook_secret}")
    
    # Display webhook URL
    webhook_url = f"{backend_url}/api/v1/webhooks/trafft"
    print(f"\n=== Webhook Configuration ===")
    print(f"\nYour webhook URL: {webhook_url}")
    
    # Next steps
    print("\n=== Next Steps ===")
    print("\n1. Add the environment variables above to your Render backend service")
    print("2. Wait for the service to redeploy")
    print("3. Use your 6FB admin account to access the API docs:")
    print(f"   {backend_url}/docs")
    print("4. Use the /api/trafft/connect endpoint to connect Trafft")
    print("5. Use the /api/trafft/webhooks/register endpoint to register webhooks")
    print("6. Use the /api/trafft/sync/initial endpoint to import existing data")
    
    # Save configuration
    save_config = input("\nSave configuration to file? (y/n): ").lower()
    if save_config == 'y':
        config_content = f"""# Trafft Integration Configuration
# Generated by setup_trafft.py

BACKEND_URL={backend_url}
WEBHOOK_URL={webhook_url}

# Environment variables for Render:
TRAFFT_API_URL=https://api.trafft.com
TRAFFT_API_KEY={api_key}
TRAFFT_WEBHOOK_SECRET={webhook_secret}

# API Endpoints:
CONNECT_URL={backend_url}/api/v1/api/trafft/connect
REGISTER_WEBHOOKS_URL={backend_url}/api/v1/api/trafft/webhooks/register
INITIAL_SYNC_URL={backend_url}/api/v1/api/trafft/sync/initial
STATUS_URL={backend_url}/api/v1/api/trafft/status
"""
        
        with open("trafft_config.txt", "w") as f:
            f.write(config_content)
        
        print("\n✅ Configuration saved to trafft_config.txt")
        print("⚠️  Keep this file secure and do not commit it to git!")
    
    print("\n✅ Setup complete! Follow the next steps to complete the integration.")

if __name__ == "__main__":
    main()