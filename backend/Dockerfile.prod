# =============================================================================
# 6FB Booking Platform - Production Backend Dockerfile
# =============================================================================

# Use Python 3.11 slim image for better security and smaller size
FROM python:3.11-slim-bullseye as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    libpq-dev \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Create app user for security
RUN useradd --create-home --shell /bin/bash app

# Set working directory
WORKDIR /app

# =============================================================================
# DEPENDENCY INSTALLATION STAGE
# =============================================================================
FROM base as dependencies

# Copy requirements first for better caching
COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt

# =============================================================================
# PRODUCTION STAGE
# =============================================================================
FROM dependencies as production

# Copy application code
COPY . /app/

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/static && \
    chown -R app:app /app

# Remove development files
RUN rm -rf /app/tests/ /app/test_* /app/*test* /app/.pytest_cache/ || true

# Switch to app user
USER app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/health || exit 1

# Expose port
EXPOSE 8000

# Production startup command
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--access-log"]
