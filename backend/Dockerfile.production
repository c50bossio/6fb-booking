# ==============================================================================
# PRODUCTION DOCKERFILE FOR 6FB BOOKING PLATFORM
# ==============================================================================
# Multi-stage build for optimized production deployment
# Includes security hardening, performance optimizations, and health checks

# ==============================================================================
# STAGE 1: Build Dependencies
# ==============================================================================
FROM python:3.11-slim as builder

# Set environment variables for build stage
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt /tmp/
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r /tmp/requirements.txt

# Install additional production dependencies
RUN pip install --no-cache-dir \
    psycopg2-binary \
    gunicorn \
    uvicorn[standard] \
    redis \
    sentry-sdk[fastapi]

# ==============================================================================
# STAGE 2: Production Runtime
# ==============================================================================
FROM python:3.11-slim as production

# Set production environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH="/app" \
    ENVIRONMENT=production \
    PIP_NO_CACHE_DIR=1

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN groupadd -r appuser && \
    useradd -r -g appuser -d /app -s /bin/bash appuser

# Set working directory
WORKDIR /app

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create necessary directories with proper permissions
RUN mkdir -p logs uploads backups /tmp/app && \
    chown -R appuser:appuser /app logs uploads backups /tmp/app

# Copy application code
COPY --chown=appuser:appuser . .

# Remove development files from production image
RUN rm -rf \
    tests/ \
    .pytest_cache/ \
    __pycache__/ \
    *.pyc \
    .git/ \
    .gitignore \
    README.md \
    docs/ \
    scripts/seed_*.py \
    scripts/test_*.py

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/health || exit 1

# Production startup script
COPY --chown=appuser:appuser scripts/start-production.sh /app/
RUN chmod +x /app/start-production.sh

# Default command
CMD ["/app/start-production.sh"]

# ==============================================================================
# LABELS FOR METADATA
# ==============================================================================
LABEL maintainer="6FB Platform Team" \
      version="1.0.0" \
      description="Production-ready 6FB Booking Platform API" \
      environment="production"
