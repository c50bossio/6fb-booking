name: Code Quality

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  eslint:
    name: ESLint Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [frontend, backend, shared, mobile]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Install package dependencies
        run: |
          cd packages/${{ matrix.package }}
          npm ci
          
      - name: Run ESLint
        run: |
          cd packages/${{ matrix.package }}
          npm run lint:ci || true
          
      - name: Run ESLint with error exit code
        run: |
          cd packages/${{ matrix.package }}
          npm run lint:ci
          
      - name: Upload ESLint report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: eslint-report-${{ matrix.package }}
          path: packages/${{ matrix.package }}/eslint-report.json
          
  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [frontend, backend, shared, mobile]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Install package dependencies
        run: |
          cd packages/${{ matrix.package }}
          npm ci
          
      - name: Run TypeScript check
        run: |
          cd packages/${{ matrix.package }}
          npm run type-check
          
  prettier:
    name: Prettier Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Check Prettier formatting
        run: npm run format:check
        
  custom-rules:
    name: Custom ESLint Rules
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build ESLint plugin
        run: npm run build
        
      - name: Test custom rules
        run: npm test
        
      - name: Validate rule configurations
        run: npm run validate:rules