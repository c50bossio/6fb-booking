# Prometheus Configuration for BookingBridge
# Production monitoring setup with comprehensive metrics collection

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'bookingbridge-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load alerting rules
rule_files:
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # BookingBridge Backend
  - job_name: 'bookingbridge-backend'
    static_configs:
      - targets: ['bookingbridge-backend:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scheme: http
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: bookingbridge-backend:8000

  # BookingBridge Frontend (Node.js metrics)
  - job_name: 'bookingbridge-frontend'
    static_configs:
      - targets: ['bookingbridge-frontend:3000']
    scrape_interval: 30s
    metrics_path: /api/metrics
    scheme: http

  # PostgreSQL Database
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  # Nginx Reverse Proxy
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter (System metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # cAdvisor (Container metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Celery Worker Metrics
  - job_name: 'celery-worker'
    static_configs:
      - targets: ['bookingbridge-celery-worker:8000']
    scrape_interval: 30s
    metrics_path: /metrics

  # Blackbox Exporter for external endpoint monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://bookingbridge.com
        - https://staging.bookingbridge.com
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # API Endpoint Health Checks
  - job_name: 'api-health'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://bookingbridge.com/api/health
        - https://bookingbridge.com/api/v1/businesses
        - https://bookingbridge.com/api/v1/attribution/stats
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # External Service Monitoring
  - job_name: 'external-services'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://graph.facebook.com/v18.0/me
        - https://googleads.googleapis.com/v16/customers
        - https://connect.squareup.com/v2/locations
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
    scrape_interval: 60s

# Remote write configuration (for long-term storage)
remote_write:
  - url: "https://prometheus-remote-write.example.com/api/v1/write"
    # Configure based on your remote storage solution
    # Examples: Grafana Cloud, AWS Managed Prometheus, etc.
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500