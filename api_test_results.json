{
  "test_timestamp": "2025-06-23T15:51:18.280978",
  "base_url": "https://sixfb-backend.onrender.com",
  "tests": [
    {
      "name": "Root Endpoint",
      "method": "GET",
      "path": "/",
      "url": "https://sixfb-backend.onrender.com/",
      "status_code": 200,
      "response_time_ms": 1573.92,
      "success": true,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:51:19 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "791ff559-7ab1-4703",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.002449512481689453",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "6075e6c7-606d-4d79-9955-5c9a3e0d6532",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "954684fc6935cc79-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "message": "Welcome to 6FB Booking Platform API",
        "version": "1.0.0",
        "docs": "/docs",
        "health": "/health"
      }
    },
    {
      "name": "Health Check",
      "method": "GET",
      "path": "/health",
      "url": "https://sixfb-backend.onrender.com/health",
      "status_code": 200,
      "response_time_ms": 1068.25,
      "success": true,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:51:20 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "d1df1291-3973-4c9d",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-ratelimit-limit": "200",
        "x-ratelimit-remaining": "198",
        "x-ratelimit-reset": "1750708340",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "95468502dc1acc7a-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "status": "healthy",
        "timestamp": "2025-06-23T19:51:20.871385",
        "version": "1.0.0",
        "database": "connected"
      }
    },
    {
      "name": "API Health Check",
      "method": "GET",
      "path": "/api/v1/health",
      "url": "https://sixfb-backend.onrender.com/api/v1/health",
      "status_code": 404,
      "response_time_ms": 558.07,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:51:21 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "d8884396-80e9-4927",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.005686759948730469",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "100",
        "x-ratelimit-reset": "1750708341",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "e19ddd96-0354-4b72-8b8d-0231acb25532",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "954685064d74cc7a-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "ea87e97a-b092-41fa-a415-c5f322f9cc4c"
      }
    },
    {
      "name": "API Documentation",
      "method": "GET",
      "path": "/docs",
      "url": "https://sixfb-backend.onrender.com/docs",
      "status_code": 200,
      "response_time_ms": 790.1,
      "success": true,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:51:22 GMT",
        "Content-Type": "text/html; charset=utf-8",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "4bde5d5b-8ef2-447d",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-render-origin-server": "uvicorn",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "9546850bcd75cc72-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": "\n    <!DOCTYPE html>\n    <html>\n    <head>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui.css\">\n    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\n    <title>6FB Booking Platform API - Swagger UI</title>\n    </head>\n    <body>\n    <div id=\"swagger-ui\">\n    </div>\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui-bundle.js\"></script>\n    <!-- `SwaggerUIBundle` is now availa"
    },
    {
      "name": "Services List",
      "method": "GET",
      "path": "/api/v1/services",
      "url": "https://sixfb-backend.onrender.com/api/v1/services",
      "status_code": 404,
      "response_time_ms": 741.19,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:51:23 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "e2d478f8-b5a9-4a51",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.005021810531616211",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "99",
        "x-ratelimit-reset": "1750708342",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "e61bca04-0d7f-4463-8126-7273f1b051b7",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "954685106a6dcc72-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "6b1fa2e3-49ea-4c06-8bb7-1b00f829ab4d"
      }
    },
    {
      "name": "Service Categories",
      "method": "GET",
      "path": "/api/v1/services/categories",
      "url": "https://sixfb-backend.onrender.com/api/v1/services/categories",
      "status_code": 404,
      "response_time_ms": 581.07,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:51:23 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "543218bc-7c50-4b93",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.005632162094116211",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "98",
        "x-ratelimit-reset": "1750708343",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "1c11e2e8-c584-4f63-bfd6-bf2eb55a6f71",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "954685140bfdc82c-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "a27b9147-7975-4a5d-b297-acb7c9fba310"
      }
    },
    {
      "name": "Version Info",
      "method": "GET",
      "path": "/version",
      "url": "https://sixfb-backend.onrender.com/version",
      "status_code": 404,
      "response_time_ms": 505.18,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:51:24 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "9615380a-5b1c-4c6a",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.004933357238769531",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "97",
        "x-ratelimit-reset": "1750708344",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "e86581a7-37c2-4bb8-b3a1-97dd164dd6ae",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "954685172d4bc82c-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "9aeef09b-003e-42e1-a75e-80ed5b5fd2c0"
      }
    },
    {
      "name": "Users List (Auth Required)",
      "method": "GET",
      "path": "/api/v1/users",
      "url": "https://sixfb-backend.onrender.com/api/v1/users",
      "status_code": 401,
      "response_time_ms": 1444.76,
      "success": true,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:53:22 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "b36918be-cb82-4c49",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.008116483688354492",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "98",
        "x-ratelimit-reset": "1750708462",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "0352318a-f45d-4d79-9395-3a3b09098b91",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "954687fdd84ccc74-TPA",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not authenticated",
        "message": "Not authenticated",
        "request_id": "e3054977-b40c-4c94-a68f-8f8e1e6391a1"
      }
    },
    {
      "name": "Appointments List (Auth Required)",
      "method": "GET",
      "path": "/api/v1/appointments",
      "url": "https://sixfb-backend.onrender.com/api/v1/appointments",
      "status_code": 401,
      "response_time_ms": 861.14,
      "success": true,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:53:23 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "e6a00021-3586-44c1",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.00880575180053711",
        "x-ratelimit-limit": "50",
        "x-ratelimit-remaining": "49",
        "x-ratelimit-reset": "1750708463",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "44a86825-bb26-4455-93d4-d7c627448578",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "954688032e5d8b48-TPA",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not authenticated",
        "message": "Not authenticated",
        "request_id": "2f15235a-9e77-4352-aeea-855cdc3f06e0"
      }
    },
    {
      "name": "Current User (Auth Required)",
      "method": "GET",
      "path": "/api/v1/auth/me",
      "url": "https://sixfb-backend.onrender.com/api/v1/auth/me",
      "status_code": 401,
      "response_time_ms": 844.9,
      "success": true,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:53:24 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "2041f674-c699-44e1",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.008328676223754883",
        "x-ratelimit-limit": "5",
        "x-ratelimit-remaining": "5",
        "x-ratelimit-reset": "1750708704",
        "x-ratelimit-window": "300",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "1f50037c-755e-43d1-aaba-13fa1cf5100c",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "95468807adcecc72-TPA",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not authenticated",
        "message": "Not authenticated",
        "request_id": "3d9aff38-1e83-4043-be9a-d08723f183de"
      }
    },
    {
      "name": "Detailed Health Check",
      "method": "GET",
      "path": "/api/v1/health/detailed",
      "url": "https://sixfb-backend.onrender.com/api/v1/health/detailed",
      "status_code": 404,
      "response_time_ms": 664.29,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:53:25 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "ba35789b-a0ed-4315",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.0049321651458740234",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "97",
        "x-ratelimit-reset": "1750708465",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "432c5beb-7613-4be0-a173-da1158fd2f92",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "9546880d9f99cc71-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "ff72bda3-7dca-4b9d-90e2-4bd3c7287b3a"
      }
    },
    {
      "name": "Health Metrics",
      "method": "GET",
      "path": "/api/v1/health/metrics",
      "url": "https://sixfb-backend.onrender.com/api/v1/health/metrics",
      "status_code": 404,
      "response_time_ms": 677.1,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:53:26 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "197c0ebf-295d-4aff",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.005220890045166016",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "96",
        "x-ratelimit-reset": "1750708466",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "109ad2dd-fc0e-45d9-9d2a-6948faa6c3b3",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "954688124d4fcc72-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "2189d7e9-8d5f-42f7-bf67-613813351b96"
      }
    },
    {
      "name": "Uptime Status",
      "method": "GET",
      "path": "/api/v1/uptime",
      "url": "https://sixfb-backend.onrender.com/api/v1/uptime",
      "status_code": 404,
      "response_time_ms": 453.29,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:53:26 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "73952c6a-56cb-485a",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.006489276885986328",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "95",
        "x-ratelimit-reset": "1750708466",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "a9b70288-a0b0-41f4-b18b-be0af0190f5a",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "954688151835cc71-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "b2dce70f-6b12-468d-800e-04ade52351c0"
      }
    },
    {
      "name": "OpenAPI Schema",
      "method": "GET",
      "path": "/openapi.json",
      "url": "https://sixfb-backend.onrender.com/openapi.json",
      "status_code": 200,
      "response_time_ms": 1866.13,
      "success": true,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:58:34 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "68f713f7-19d4-4de1",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-render-origin-server": "uvicorn",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "95468f977c9ccc79-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "openapi": "3.1.0",
        "info": {
          "title": "6FB Booking Platform API",
          "description": "Six Figure Barber booking and analytics platform",
          "version": "1.0.0"
        },
        "paths": {
          "/api/v1/auth/register": {
            "post": {
              "tags": [
                "Authentication"
              ],
              "summary": "Register",
              "description": "Register a new user",
              "operationId": "register_api_v1_auth_register_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/UserCreate"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/api__v1__auth__UserResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/auth/token": {
            "post": {
              "tags": [
                "Authentication"
              ],
              "summary": "Login",
              "description": "Login and get access token",
              "operationId": "login_api_v1_auth_token_post",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "$ref": "#/components/schemas/Body_login_api_v1_auth_token_post"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Token"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/auth/me": {
            "get": {
              "tags": [
                "Authentication"
              ],
              "summary": "Get Current User Info",
              "description": "Get current user information",
              "operationId": "get_current_user_info_api_v1_auth_me_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/api__v1__auth__UserResponse"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/auth/logout": {
            "post": {
              "tags": [
                "Authentication"
              ],
              "summary": "Logout",
              "description": "Logout user (client should discard token)",
              "operationId": "logout_api_v1_auth_logout_post",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/auth/change-password": {
            "post": {
              "tags": [
                "Authentication"
              ],
              "summary": "Change Password",
              "description": "Change user password",
              "operationId": "change_password_api_v1_auth_change_password_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "old_password",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Old Password"
                  }
                },
                {
                  "name": "new_password",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "New Password"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/users/": {
            "get": {
              "tags": [
                "Users"
              ],
              "summary": "Get Users",
              "description": "Get list of users with optional filters",
              "operationId": "get_users_api_v1_users__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "skip",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0,
                    "title": "Skip"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "default": 100,
                    "title": "Limit"
                  }
                },
                {
                  "name": "role",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Role"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                },
                {
                  "name": "is_active",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Is Active"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/api__v1__users__UserResponse"
                        },
                        "title": "Response Get Users Api V1 Users  Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/users/{user_id}": {
            "get": {
              "tags": [
                "Users"
              ],
              "summary": "Get User",
              "description": "Get specific user by ID",
              "operationId": "get_user_api_v1_users__user_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "user_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "User Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/api__v1__users__UserResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "tags": [
                "Users"
              ],
              "summary": "Update User",
              "description": "Update user information",
              "operationId": "update_user_api_v1_users__user_id__put",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "user_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "User Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/UserUpdate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/api__v1__users__UserResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "delete": {
              "tags": [
                "Users"
              ],
              "summary": "Delete User",
              "description": "Delete user (soft delete by deactivating)",
              "operationId": "delete_user_api_v1_users__user_id__delete",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "user_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "User Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/users/{user_id}/barber-info": {
            "get": {
              "tags": [
                "Users"
              ],
              "summary": "Get User Barber Info",
              "description": "Get barber information for a user",
              "operationId": "get_user_barber_info_api_v1_users__user_id__barber_info_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "user_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "User Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BarberInfo"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/users/{user_id}/assign-role": {
            "post": {
              "tags": [
                "Users"
              ],
              "summary": "Assign User Role",
              "description": "Assign role to user",
              "operationId": "assign_user_role_api_v1_users__user_id__assign_role_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "user_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "User Id"
                  }
                },
                {
                  "name": "new_role",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "New Role"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/users/{user_id}/grant-permission": {
            "post": {
              "tags": [
                "Users"
              ],
              "summary": "Grant Permission",
              "description": "Grant custom permission to user",
              "operationId": "grant_permission_api_v1_users__user_id__grant_permission_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "user_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "User Id"
                  }
                },
                {
                  "name": "permission",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Permission"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/locations/": {
            "get": {
              "tags": [
                "Locations"
              ],
              "summary": "Get Locations",
              "description": "Get list of locations",
              "operationId": "get_locations_api_v1_locations__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "skip",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0,
                    "title": "Skip"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "default": 100,
                    "title": "Limit"
                  }
                },
                {
                  "name": "is_active",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Is Active"
                  }
                },
                {
                  "name": "franchise_type",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Franchise Type"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/LocationResponse"
                        },
                        "title": "Response Get Locations Api V1 Locations  Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "post": {
              "tags": [
                "Locations"
              ],
              "summary": "Create Location",
              "description": "Create new location",
              "operationId": "create_location_api_v1_locations__post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LocationCreate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LocationResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/locations/{location_id}": {
            "get": {
              "tags": [
                "Locations"
              ],
              "summary": "Get Location",
              "description": "Get specific location",
              "operationId": "get_location_api_v1_locations__location_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "location_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LocationResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "tags": [
                "Locations"
              ],
              "summary": "Update Location",
              "description": "Update location information",
              "operationId": "update_location_api_v1_locations__location_id__put",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "location_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Location Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LocationUpdate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LocationResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/locations/{location_id}/analytics": {
            "get": {
              "tags": [
                "Locations"
              ],
              "summary": "Get Location Analytics",
              "description": "Get location analytics",
              "operationId": "get_location_analytics_api_v1_locations__location_id__analytics_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "location_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Location Id"
                  }
                },
                {
                  "name": "period_days",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 365,
                    "minimum": 1,
                    "default": 30,
                    "title": "Period Days"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LocationAnalyticsResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/locations/{location_id}/barbers": {
            "get": {
              "tags": [
                "Locations"
              ],
              "summary": "Get Location Barbers",
              "description": "Get barbers for a location",
              "operationId": "get_location_barbers_api_v1_locations__location_id__barbers_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "location_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/locations/{location_id}/assign-mentor": {
            "post": {
              "tags": [
                "Locations"
              ],
              "summary": "Assign Location Mentor",
              "description": "Assign mentor to location",
              "operationId": "assign_location_mentor_api_v1_locations__location_id__assign_mentor_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "location_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Location Id"
                  }
                },
                {
                  "name": "mentor_id",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Mentor Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/barbers/": {
            "get": {
              "tags": [
                "Barbers"
              ],
              "summary": "Get Barbers",
              "description": "Get list of barbers",
              "operationId": "get_barbers_api_v1_barbers__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "skip",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0,
                    "title": "Skip"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "default": 100,
                    "title": "Limit"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/BarberResponse"
                        },
                        "title": "Response Get Barbers Api V1 Barbers  Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "post": {
              "tags": [
                "Barbers"
              ],
              "summary": "Create Barber",
              "description": "Create new barber",
              "operationId": "create_barber_api_v1_barbers__post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BarberCreate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BarberResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/barbers/{barber_id}": {
            "get": {
              "tags": [
                "Barbers"
              ],
              "summary": "Get Barber",
              "description": "Get specific barber",
              "operationId": "get_barber_api_v1_barbers__barber_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Barber Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BarberResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "tags": [
                "Barbers"
              ],
              "summary": "Update Barber",
              "description": "Update barber information",
              "operationId": "update_barber_api_v1_barbers__barber_id__put",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Barber Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BarberUpdate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BarberResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/barbers/{barber_id}/schedule": {
            "get": {
              "tags": [
                "Barbers"
              ],
              "summary": "Get Barber Schedule",
              "description": "Get barber's schedule for a specific date",
              "operationId": "get_barber_schedule_api_v1_barbers__barber_id__schedule_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Barber Id"
                  }
                },
                {
                  "name": "date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "default": "2025-06-23",
                    "title": "Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/barbers/{barber_id}/performance": {
            "get": {
              "tags": [
                "Barbers"
              ],
              "summary": "Get Barber Performance",
              "description": "Get barber performance metrics",
              "operationId": "get_barber_performance_api_v1_barbers__barber_id__performance_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Barber Id"
                  }
                },
                {
                  "name": "period_days",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 365,
                    "minimum": 1,
                    "default": 30,
                    "title": "Period Days"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/appointments/": {
            "get": {
              "tags": [
                "Appointments"
              ],
              "summary": "Get Appointments",
              "description": "Get list of appointments with filters",
              "operationId": "get_appointments_api_v1_appointments__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "skip",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0,
                    "title": "Skip"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "default": 100,
                    "title": "Limit"
                  }
                },
                {
                  "name": "barber_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Barber Id"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                },
                {
                  "name": "status",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Status"
                  }
                },
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "End Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/AppointmentResponse"
                        },
                        "title": "Response Get Appointments Api V1 Appointments  Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "post": {
              "tags": [
                "Appointments"
              ],
              "summary": "Create Appointment",
              "description": "Create new appointment",
              "operationId": "create_appointment_api_v1_appointments__post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppointmentCreate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AppointmentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/appointments/{appointment_id}": {
            "get": {
              "tags": [
                "Appointments"
              ],
              "summary": "Get Appointment",
              "description": "Get specific appointment",
              "operationId": "get_appointment_api_v1_appointments__appointment_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "appointment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Appointment Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AppointmentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "tags": [
                "Appointments"
              ],
              "summary": "Update Appointment",
              "description": "Update appointment",
              "operationId": "update_appointment_api_v1_appointments__appointment_id__put",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "appointment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Appointment Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AppointmentUpdate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AppointmentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "delete": {
              "tags": [
                "Appointments"
              ],
              "summary": "Cancel Appointment",
              "description": "Cancel appointment",
              "operationId": "cancel_appointment_api_v1_appointments__appointment_id__delete",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "appointment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Appointment Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/appointments/availability/{barber_id}": {
            "get": {
              "tags": [
                "Appointments"
              ],
              "summary": "Get Barber Availability",
              "description": "Get available time slots for a barber on a specific date",
              "operationId": "get_barber_availability_api_v1_appointments_availability__barber_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Barber Id"
                  }
                },
                {
                  "name": "date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "default": "2025-06-23",
                    "title": "Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/sixfb-score/{barber_id}": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Barber Sixfb Score",
              "description": "Get 6FB score for a barber",
              "operationId": "get_barber_sixfb_score_api_v1_analytics_sixfb_score__barber_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Barber Id"
                  }
                },
                {
                  "name": "period",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "pattern": "^(weekly|monthly|quarterly|yearly)$",
                    "default": "weekly",
                    "title": "Period"
                  }
                },
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "End Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SixFBScoreResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/barber/{barber_id}/detailed": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Barber Detailed Analytics",
              "description": "Get detailed analytics for a barber",
              "operationId": "get_barber_detailed_analytics_api_v1_analytics_barber__barber_id__detailed_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Barber Id"
                  }
                },
                {
                  "name": "period_days",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 365,
                    "minimum": 1,
                    "default": 30,
                    "title": "Period Days"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BarberAnalyticsResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/team-comparison": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Team Comparison",
              "description": "Get team comparison analytics across locations",
              "operationId": "get_team_comparison_api_v1_analytics_team_comparison_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "location_ids",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Ids"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TeamComparisonResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/network-insights": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Network Insights",
              "description": "Get network-wide performance insights",
              "operationId": "get_network_insights_api_v1_analytics_network_insights_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/NetworkInsightsResponse"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/analytics/dashboard-summary": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Dashboard Summary",
              "description": "Get summary data for main dashboard",
              "operationId": "get_dashboard_summary_api_v1_analytics_dashboard_summary_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/analytics/trends/{metric}": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Metric Trends",
              "description": "Get trend data for specific metrics",
              "operationId": "get_metric_trends_api_v1_analytics_trends__metric__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "metric",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Metric"
                  }
                },
                {
                  "name": "period_days",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 365,
                    "minimum": 7,
                    "default": 90,
                    "title": "Period Days"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                },
                {
                  "name": "barber_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Barber Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/revenue": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Revenue Analytics",
              "description": "Get revenue analytics data",
              "operationId": "get_revenue_analytics_api_v1_analytics_revenue_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/bookings": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Booking Analytics",
              "description": "Get booking analytics data",
              "operationId": "get_booking_analytics_api_v1_analytics_bookings_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/metrics": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Performance Metrics",
              "description": "Get performance metrics",
              "operationId": "get_performance_metrics_api_v1_analytics_metrics_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/services": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Service Analytics",
              "description": "Get service analytics data",
              "operationId": "get_service_analytics_api_v1_analytics_services_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/retention": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Retention Analytics",
              "description": "Get client retention analytics",
              "operationId": "get_retention_analytics_api_v1_analytics_retention_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/peak-hours": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Peak Hours Analytics",
              "description": "Get peak hours heatmap data",
              "operationId": "get_peak_hours_analytics_api_v1_analytics_peak_hours_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/barber-comparison": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Get Barber Comparison",
              "description": "Get barber performance comparison",
              "operationId": "get_barber_comparison_api_v1_analytics_barber_comparison_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/export": {
            "get": {
              "tags": [
                "Analytics"
              ],
              "summary": "Export Analytics",
              "description": "Export analytics data in various formats",
              "operationId": "export_analytics_api_v1_analytics_export_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "format",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "pattern": "^(csv|pdf|excel)$",
                    "title": "Format"
                  }
                },
                {
                  "name": "start_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/training/modules": {
            "get": {
              "tags": [
                "Training"
              ],
              "summary": "Get Available Modules",
              "description": "Get available training modules for current user",
              "operationId": "get_available_modules_api_v1_training_modules_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "category",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Category"
                  }
                },
                {
                  "name": "difficulty",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Difficulty"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ModuleResponse"
                        },
                        "title": "Response Get Available Modules Api V1 Training Modules Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/training/modules/{module_id}/enroll": {
            "post": {
              "tags": [
                "Training"
              ],
              "summary": "Enroll In Module",
              "description": "Enroll current user in a training module",
              "operationId": "enroll_in_module_api_v1_training_modules__module_id__enroll_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "module_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Module Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/EnrollmentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/training/modules/{module_id}/start-attempt": {
            "post": {
              "tags": [
                "Training"
              ],
              "summary": "Start Module Attempt",
              "description": "Start a new attempt at a training module",
              "operationId": "start_module_attempt_api_v1_training_modules__module_id__start_attempt_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "module_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Module Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AttemptResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/training/attempts/{attempt_id}/complete": {
            "post": {
              "tags": [
                "Training"
              ],
              "summary": "Complete Module Attempt",
              "description": "Complete a training module attempt",
              "operationId": "complete_module_attempt_api_v1_training_attempts__attempt_id__complete_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "attempt_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Attempt Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AttemptCreate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AttemptResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/training/certifications": {
            "get": {
              "tags": [
                "Training"
              ],
              "summary": "Get Certifications",
              "description": "Get all available certifications",
              "operationId": "get_certifications_api_v1_training_certifications_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "items": {
                          "$ref": "#/components/schemas/CertificationResponse"
                        },
                        "type": "array",
                        "title": "Response Get Certifications Api V1 Training Certifications Get"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/training/my-certifications": {
            "get": {
              "tags": [
                "Training"
              ],
              "summary": "Get My Certifications",
              "description": "Get current user's certifications",
              "operationId": "get_my_certifications_api_v1_training_my_certifications_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "items": {
                          "$ref": "#/components/schemas/UserCertificationResponse"
                        },
                        "type": "array",
                        "title": "Response Get My Certifications Api V1 Training My Certifications Get"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/training/progress/{user_id}": {
            "get": {
              "tags": [
                "Training"
              ],
              "summary": "Get User Training Progress",
              "description": "Get training progress for a user",
              "operationId": "get_user_training_progress_api_v1_training_progress__user_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "user_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "User Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ProgressResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/training/skill-assessment": {
            "post": {
              "tags": [
                "Training"
              ],
              "summary": "Create Skill Assessment",
              "description": "Create a skill assessment for a user",
              "operationId": "create_skill_assessment_api_v1_training_skill_assessment_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SkillAssessmentCreate"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Response Create Skill Assessment Api V1 Training Skill Assessment Post"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/training/recommended-path": {
            "get": {
              "tags": [
                "Training"
              ],
              "summary": "Get Recommended Training Path",
              "description": "Get recommended training path for current user",
              "operationId": "get_recommended_training_path_api_v1_training_recommended_path_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/training/mentor-overview": {
            "get": {
              "tags": [
                "Training"
              ],
              "summary": "Get Mentor Training Overview",
              "description": "Get training overview for mentor's mentees",
              "operationId": "get_mentor_training_overview_api_v1_training_mentor_overview_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/revenue/commission/{barber_id}": {
            "get": {
              "tags": [
                "Revenue"
              ],
              "summary": "Calculate Barber Commission",
              "description": "Calculate commission for a barber for given period",
              "operationId": "calculate_barber_commission_api_v1_revenue_commission__barber_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Barber Id"
                  }
                },
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/CommissionCalculationResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/revenue/location/{location_id}/revenue": {
            "get": {
              "tags": [
                "Revenue"
              ],
              "summary": "Get Location Revenue Breakdown",
              "description": "Get revenue breakdown for a location",
              "operationId": "get_location_revenue_breakdown_api_v1_revenue_location__location_id__revenue_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "location_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Location Id"
                  }
                },
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/LocationRevenueResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/revenue/network/analytics": {
            "get": {
              "tags": [
                "Revenue"
              ],
              "summary": "Get Network Revenue Analytics",
              "description": "Get network-wide revenue analytics",
              "operationId": "get_network_revenue_analytics_api_v1_revenue_network_analytics_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/NetworkRevenueResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/revenue/payout-report/{barber_id}": {
            "get": {
              "tags": [
                "Revenue"
              ],
              "summary": "Generate Payout Report",
              "description": "Generate detailed payout report for a barber",
              "operationId": "generate_payout_report_api_v1_revenue_payout_report__barber_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Barber Id"
                  }
                },
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date",
                    "title": "End Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PayoutReportResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/revenue/process-payouts": {
            "post": {
              "tags": [
                "Revenue"
              ],
              "summary": "Process Bulk Payouts",
              "description": "Process bulk payouts for location or entire network",
              "operationId": "process_bulk_payouts_api_v1_revenue_process_payouts_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                },
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "End Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BulkPayoutResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/revenue/commission-structures": {
            "get": {
              "tags": [
                "Revenue"
              ],
              "summary": "Get Commission Structures",
              "description": "Get commission structure details",
              "operationId": "get_commission_structures_api_v1_revenue_commission_structures_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/revenue/revenue-trends": {
            "get": {
              "tags": [
                "Revenue"
              ],
              "summary": "Get Revenue Trends",
              "description": "Get revenue trend data",
              "operationId": "get_revenue_trends_api_v1_revenue_revenue_trends_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "period_months",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 24,
                    "minimum": 1,
                    "default": 6,
                    "title": "Period Months"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                },
                {
                  "name": "barber_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Barber Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/automation/rules": {
            "get": {
              "tags": [
                "Automation"
              ],
              "summary": "Get Automation Rules",
              "description": "Get list of automation rules",
              "operationId": "get_automation_rules_api_v1_automation_rules_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "skip",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0,
                    "title": "Skip"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "default": 100,
                    "title": "Limit"
                  }
                },
                {
                  "name": "rule_type",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Rule Type"
                  }
                },
                {
                  "name": "is_active",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Is Active"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/AutomationRuleResponse"
                        },
                        "title": "Response Get Automation Rules Api V1 Automation Rules Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "post": {
              "tags": [
                "Automation"
              ],
              "summary": "Create Automation Rule",
              "description": "Create new automation rule",
              "operationId": "create_automation_rule_api_v1_automation_rules_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AutomationRuleCreate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AutomationRuleResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/automation/rules/{rule_id}": {
            "get": {
              "tags": [
                "Automation"
              ],
              "summary": "Get Automation Rule",
              "description": "Get specific automation rule",
              "operationId": "get_automation_rule_api_v1_automation_rules__rule_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "rule_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Rule Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AutomationRuleResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "tags": [
                "Automation"
              ],
              "summary": "Update Automation Rule",
              "description": "Update automation rule",
              "operationId": "update_automation_rule_api_v1_automation_rules__rule_id__put",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "rule_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Rule Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AutomationRuleUpdate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AutomationRuleResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "delete": {
              "tags": [
                "Automation"
              ],
              "summary": "Delete Automation Rule",
              "description": "Delete automation rule",
              "operationId": "delete_automation_rule_api_v1_automation_rules__rule_id__delete",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "rule_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Rule Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/automation/logs": {
            "get": {
              "tags": [
                "Automation"
              ],
              "summary": "Get Automation Logs",
              "description": "Get automation execution logs",
              "operationId": "get_automation_logs_api_v1_automation_logs_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "skip",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0,
                    "title": "Skip"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "default": 100,
                    "title": "Limit"
                  }
                },
                {
                  "name": "rule_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Rule Id"
                  }
                },
                {
                  "name": "status",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Status"
                  }
                },
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date-time"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date-time"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "End Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/WorkflowLogResponse"
                        },
                        "title": "Response Get Automation Logs Api V1 Automation Logs Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/automation/rules/{rule_id}/test": {
            "post": {
              "tags": [
                "Automation"
              ],
              "summary": "Test Automation Rule",
              "description": "Test automation rule with sample data",
              "operationId": "test_automation_rule_api_v1_automation_rules__rule_id__test_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "rule_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Rule Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "additionalProperties": true,
                      "title": "Test Data"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/automation/stats": {
            "get": {
              "tags": [
                "Automation"
              ],
              "summary": "Get Automation Stats",
              "description": "Get automation statistics",
              "operationId": "get_automation_stats_api_v1_automation_stats_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "period_days",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 365,
                    "minimum": 1,
                    "default": 30,
                    "title": "Period Days"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/automation/trigger/{event_type}": {
            "post": {
              "tags": [
                "Automation"
              ],
              "summary": "Trigger Automation Event",
              "description": "Manually trigger automation event",
              "operationId": "trigger_automation_event_api_v1_automation_trigger__event_type__post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "event_type",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Event Type"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "additionalProperties": true,
                      "title": "Event Data"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/ws/status": {
            "get": {
              "tags": [
                "WebSocket"
              ],
              "summary": "Websocket Status",
              "description": "Get WebSocket connection statistics",
              "operationId": "websocket_status_api_v1_ws_status_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/v1/notifications/": {
            "get": {
              "tags": [
                "Notifications"
              ],
              "summary": "Get Notifications",
              "description": "Get user's notifications",
              "operationId": "get_notifications_api_v1_notifications__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "unread_only",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "boolean",
                    "default": false,
                    "title": "Unread Only"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "default": 50,
                    "title": "Limit"
                  }
                },
                {
                  "name": "offset",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 0,
                    "title": "Offset"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/NotificationResponse"
                        },
                        "title": "Response Get Notifications Api V1 Notifications  Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "delete": {
              "tags": [
                "Notifications"
              ],
              "summary": "Clear All Notifications",
              "description": "Clear all notifications for the user",
              "operationId": "clear_all_notifications_api_v1_notifications__delete",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/v1/notifications/unread": {
            "get": {
              "tags": [
                "Notifications"
              ],
              "summary": "Get Unread Notifications",
              "description": "Get unread notifications",
              "operationId": "get_unread_notifications_api_v1_notifications_unread_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "items": {
                          "$ref": "#/components/schemas/NotificationResponse"
                        },
                        "type": "array",
                        "title": "Response Get Unread Notifications Api V1 Notifications Unread Get"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/notifications/unread-count": {
            "get": {
              "tags": [
                "Notifications"
              ],
              "summary": "Get Unread Count",
              "description": "Get count of unread notifications",
              "operationId": "get_unread_count_api_v1_notifications_unread_count_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/notifications/{notification_id}/read": {
            "put": {
              "tags": [
                "Notifications"
              ],
              "summary": "Mark As Read",
              "description": "Mark a notification as read",
              "operationId": "mark_as_read_api_v1_notifications__notification_id__read_put",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "notification_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Notification Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/notifications/read-all": {
            "put": {
              "tags": [
                "Notifications"
              ],
              "summary": "Mark All As Read",
              "description": "Mark all notifications as read",
              "operationId": "mark_all_as_read_api_v1_notifications_read_all_put",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/notifications/{notification_id}": {
            "delete": {
              "tags": [
                "Notifications"
              ],
              "summary": "Delete Notification",
              "description": "Delete a notification",
              "operationId": "delete_notification_api_v1_notifications__notification_id__delete",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "notification_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Notification Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/payments/payment-methods": {
            "post": {
              "tags": [
                "Payments"
              ],
              "summary": "Add Payment Method",
              "description": "Add a new payment method for the current user.",
              "operationId": "add_payment_method_api_v1_payments_payment_methods_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PaymentMethodCreate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PaymentMethodResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "get": {
              "tags": [
                "Payments"
              ],
              "summary": "Get Payment Methods",
              "description": "Get all payment methods for the current user.",
              "operationId": "get_payment_methods_api_v1_payments_payment_methods_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "active_only",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "boolean",
                    "description": "Only return active payment methods",
                    "default": true,
                    "title": "Active Only"
                  },
                  "description": "Only return active payment methods"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/PaymentMethodResponse"
                        },
                        "title": "Response Get Payment Methods Api V1 Payments Payment Methods Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/payments/payment-methods/{payment_method_id}/default": {
            "put": {
              "tags": [
                "Payments"
              ],
              "summary": "Set Default Payment Method",
              "description": "Set a payment method as default.",
              "operationId": "set_default_payment_method_api_v1_payments_payment_methods__payment_method_id__default_put",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "payment_method_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Payment Method Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/payments/payment-methods/{payment_method_id}": {
            "delete": {
              "tags": [
                "Payments"
              ],
              "summary": "Remove Payment Method",
              "description": "Remove a payment method.",
              "operationId": "remove_payment_method_api_v1_payments_payment_methods__payment_method_id__delete",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "payment_method_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Payment Method Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/payments/payment-intents": {
            "post": {
              "tags": [
                "Payments"
              ],
              "summary": "Create Payment Intent",
              "description": "Create a payment intent for an appointment.",
              "operationId": "create_payment_intent_api_v1_payments_payment_intents_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PaymentIntentCreate"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PaymentIntentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/payments/payments/confirm": {
            "post": {
              "tags": [
                "Payments"
              ],
              "summary": "Confirm Payment",
              "description": "Confirm a payment intent.",
              "operationId": "confirm_payment_api_v1_payments_payments_confirm_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PaymentConfirm"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PaymentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/payments/payments/{payment_id}/cancel": {
            "post": {
              "tags": [
                "Payments"
              ],
              "summary": "Cancel Payment",
              "description": "Cancel a payment intent.",
              "operationId": "cancel_payment_api_v1_payments_payments__payment_id__cancel_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "payment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Payment Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PaymentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/payments/refunds": {
            "post": {
              "tags": [
                "Payments"
              ],
              "summary": "Create Refund",
              "description": "Create a refund for a payment. Requires admin or mentor role.",
              "operationId": "create_refund_api_v1_payments_refunds_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/RefundCreate"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/RefundResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/payments/refunds/{refund_id}": {
            "get": {
              "tags": [
                "Payments"
              ],
              "summary": "Get Refund",
              "description": "Get refund details.",
              "operationId": "get_refund_api_v1_payments_refunds__refund_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "refund_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Refund Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/RefundResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/payments/payments": {
            "get": {
              "tags": [
                "Payments"
              ],
              "summary": "Get Payment History",
              "description": "Get payment history for the current user.",
              "operationId": "get_payment_history_api_v1_payments_payments_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "status",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/PaymentStatus"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Status"
                  }
                },
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "End Date"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 50,
                    "title": "Limit"
                  }
                },
                {
                  "name": "offset",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 0,
                    "title": "Offset"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/PaymentResponse"
                        },
                        "title": "Response Get Payment History Api V1 Payments Payments Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/payments/payments/{payment_id}": {
            "get": {
              "tags": [
                "Payments"
              ],
              "summary": "Get Payment",
              "description": "Get payment details.",
              "operationId": "get_payment_api_v1_payments_payments__payment_id__get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "payment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Payment Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PaymentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/payments/reports": {
            "post": {
              "tags": [
                "Payments"
              ],
              "summary": "Create Payment Report",
              "description": "Create a payment report. Requires admin or mentor role.",
              "operationId": "create_payment_report_api_v1_payments_reports_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PaymentReportCreate"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PaymentReportResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "get": {
              "tags": [
                "Payments"
              ],
              "summary": "Get Payment Reports",
              "description": "Get payment reports. Requires admin or mentor role.",
              "operationId": "get_payment_reports_api_v1_payments_reports_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "report_type",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^(daily|weekly|monthly|custom)$"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Report Type"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "default": 20,
                    "title": "Limit"
                  }
                },
                {
                  "name": "offset",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0,
                    "title": "Offset"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/PaymentReportResponse"
                        },
                        "title": "Response Get Payment Reports Api V1 Payments Reports Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/webhooks/stripe": {
            "post": {
              "tags": [
                "Webhooks"
              ],
              "summary": "Handle Stripe Webhook",
              "description": "Handle incoming Stripe webhook events.",
              "operationId": "handle_stripe_webhook_api_v1_webhooks_stripe_post",
              "parameters": [
                {
                  "name": "Stripe-Signature",
                  "in": "header",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "title": "Stripe-Signature"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/webhooks/trafft": {
            "post": {
              "tags": [
                "Webhooks"
              ],
              "summary": "Handle Trafft Webhook",
              "description": "Handle incoming Trafft webhook events.",
              "operationId": "handle_trafft_webhook_api_v1_webhooks_trafft_post",
              "parameters": [
                {
                  "name": "x-webhook-signature",
                  "in": "header",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "X-Webhook-Signature"
                  }
                },
                {
                  "name": "x-trafft-signature",
                  "in": "header",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "X-Trafft-Signature"
                  }
                },
                {
                  "name": "x-verification-token",
                  "in": "header",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "X-Verification-Token"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "get": {
              "tags": [
                "Webhooks"
              ],
              "summary": "Verify Trafft Webhook",
              "description": "Handle Trafft webhook verification (GET request)",
              "operationId": "verify_trafft_webhook_api_v1_webhooks_trafft_get",
              "parameters": [
                {
                  "name": "verification_token",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Verification Token"
                  }
                },
                {
                  "name": "token",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Token"
                  }
                },
                {
                  "name": "challenge",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Challenge"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/webhooks/trafft/setup": {
            "get": {
              "tags": [
                "Webhooks"
              ],
              "summary": "Trafft Webhook Setup",
              "description": "Return Trafft webhook setup instructions",
              "operationId": "trafft_webhook_setup_api_v1_webhooks_trafft_setup_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/v1/webhooks/trafft/logs": {
            "get": {
              "tags": [
                "Webhooks"
              ],
              "summary": "View Trafft Webhook Logs",
              "description": "View recent Trafft webhook logs for debugging",
              "operationId": "view_trafft_webhook_logs_api_v1_webhooks_trafft_logs_get",
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 10,
                    "title": "Limit"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/webhooks/trafft/debug": {
            "post": {
              "tags": [
                "Webhooks"
              ],
              "summary": "Debug Trafft Webhook",
              "description": "Debug endpoint to see exactly what Trafft sends",
              "operationId": "debug_trafft_webhook_api_v1_webhooks_trafft_debug_post",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/v1/communications/email/send": {
            "post": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Send Email",
              "description": "Send an email using a template",
              "operationId": "send_email_api_v1_communications_email_send_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "to_email",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "To Email"
                  }
                },
                {
                  "name": "subject",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Subject"
                  }
                },
                {
                  "name": "template",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Template"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "additionalProperties": true,
                      "title": "Context"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/communications/email/bulk": {
            "post": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Send Bulk Email",
              "description": "Send bulk emails to multiple recipients",
              "operationId": "send_bulk_email_api_v1_communications_email_bulk_post",
              "parameters": [
                {
                  "name": "subject",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Subject"
                  }
                },
                {
                  "name": "template",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Template"
                  }
                },
                {
                  "name": "func",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "title": "Func"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Body_send_bulk_email_api_v1_communications_email_bulk_post"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/communications/email/history": {
            "get": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Get Email History",
              "description": "Get email sending history",
              "operationId": "get_email_history_api_v1_communications_email_history_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 50,
                    "title": "Limit"
                  }
                },
                {
                  "name": "offset",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 0,
                    "title": "Offset"
                  }
                },
                {
                  "name": "status",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/EmailStatus"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Status"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/communications/sms/send": {
            "post": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Send Sms",
              "description": "Send an SMS message",
              "operationId": "send_sms_api_v1_communications_sms_send_post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "to_number",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "To Number"
                  }
                },
                {
                  "name": "message",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Message"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/communications/sms/bulk": {
            "post": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Send Bulk Sms",
              "description": "Send bulk SMS to multiple recipients",
              "operationId": "send_bulk_sms_api_v1_communications_sms_bulk_post",
              "parameters": [
                {
                  "name": "message_template",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Message Template"
                  }
                },
                {
                  "name": "func",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "title": "Func"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      },
                      "title": "Recipients"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/communications/sms/history": {
            "get": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Get Sms History",
              "description": "Get SMS sending history",
              "operationId": "get_sms_history_api_v1_communications_sms_history_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 50,
                    "title": "Limit"
                  }
                },
                {
                  "name": "offset",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 0,
                    "title": "Offset"
                  }
                },
                {
                  "name": "status",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/SMSStatus"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Status"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/communications/preferences": {
            "get": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Get Notification Preferences",
              "description": "Get user's notification preferences",
              "operationId": "get_notification_preferences_api_v1_communications_preferences_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            },
            "put": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Update Notification Preferences",
              "description": "Update user's notification preferences",
              "operationId": "update_notification_preferences_api_v1_communications_preferences_put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "additionalProperties": true,
                      "type": "object",
                      "title": "Preferences"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/communications/test/email": {
            "post": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Test Email",
              "description": "Send a test email to the current user",
              "operationId": "test_email_api_v1_communications_test_email_post",
              "parameters": [
                {
                  "name": "template",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "default": "welcome",
                    "title": "Template"
                  }
                },
                {
                  "name": "func",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "title": "Func"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/communications/test/sms": {
            "post": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Test Sms",
              "description": "Send a test SMS",
              "operationId": "test_sms_api_v1_communications_test_sms_post",
              "parameters": [
                {
                  "name": "phone_number",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Phone Number"
                  }
                },
                {
                  "name": "func",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "title": "Func"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/communications/templates": {
            "get": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Get Communication Templates",
              "description": "Get communication templates",
              "operationId": "get_communication_templates_api_v1_communications_templates_get",
              "parameters": [
                {
                  "name": "channel",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Channel"
                  }
                },
                {
                  "name": "func",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "title": "Func"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "post": {
              "tags": [
                "Communications",
                "communications"
              ],
              "summary": "Create Communication Template",
              "description": "Create a new communication template",
              "operationId": "create_communication_template_api_v1_communications_templates_post",
              "parameters": [
                {
                  "name": "func",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "title": "Func"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "additionalProperties": true,
                      "title": "Template Data"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/sync/dashboard": {
            "get": {
              "tags": [
                "Sync Status"
              ],
              "summary": "Get Sync Dashboard",
              "description": "Get comprehensive sync status dashboard",
              "operationId": "get_sync_dashboard_api_v1_sync_dashboard_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/sync/webhook-logs": {
            "get": {
              "tags": [
                "Sync Status"
              ],
              "summary": "Get Webhook Logs",
              "description": "Get recent webhook logs",
              "operationId": "get_webhook_logs_api_v1_sync_webhook_logs_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 50,
                    "title": "Limit"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/sync/sync-errors": {
            "get": {
              "tags": [
                "Sync Status"
              ],
              "summary": "Get Sync Errors",
              "description": "Get appointments with sync errors",
              "operationId": "get_sync_errors_api_v1_sync_sync_errors_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 20,
                    "title": "Limit"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/sync/resync/{appointment_id}": {
            "post": {
              "tags": [
                "Sync Status"
              ],
              "summary": "Resync Appointment",
              "description": "Manually trigger resync for a specific appointment",
              "operationId": "resync_appointment_api_v1_sync_resync__appointment_id__post",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "appointment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "title": "Appointment Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/sync/barber-sync-status": {
            "get": {
              "tags": [
                "Sync Status"
              ],
              "summary": "Get Barber Sync Status",
              "description": "Get sync status for all barbers",
              "operationId": "get_barber_sync_status_api_v1_sync_barber_sync_status_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              },
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ]
            }
          },
          "/api/v1/public/trafft-status": {
            "get": {
              "tags": [
                "Public Status"
              ],
              "summary": "Get Public Trafft Status",
              "description": "Public endpoint to check Trafft integration status",
              "operationId": "get_public_trafft_status_api_v1_public_trafft_status_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/v1/public/health-check": {
            "get": {
              "tags": [
                "Public Status"
              ],
              "summary": "Public Health Check",
              "description": "Simple health check with database status",
              "operationId": "public_health_check_api_v1_public_health_check_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/v1/dashboard/appointments/today": {
            "get": {
              "tags": [
                "Dashboard"
              ],
              "summary": "Get Todays Appointments",
              "description": "Get today's appointments with optional filters",
              "operationId": "get_todays_appointments_api_v1_dashboard_appointments_today_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Filter by specific barber",
                    "title": "Barber Id"
                  },
                  "description": "Filter by specific barber"
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Filter by specific location",
                    "title": "Location Id"
                  },
                  "description": "Filter by specific location"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/dashboard/appointments/week": {
            "get": {
              "tags": [
                "Dashboard"
              ],
              "summary": "Get Week Appointments",
              "description": "Get appointments for the current week",
              "operationId": "get_week_appointments_api_v1_dashboard_appointments_week_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "barber_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Barber Id"
                  }
                },
                {
                  "name": "location_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Location Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/dashboard/appointments/upcoming": {
            "get": {
              "tags": [
                "Dashboard"
              ],
              "summary": "Get Upcoming Appointments",
              "description": "Get upcoming appointments",
              "operationId": "get_upcoming_appointments_api_v1_dashboard_appointments_upcoming_get",
              "security": [
                {
                  "OAuth2PasswordBearer": []
                }
              ],
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "description": "Number of appointments to return",
                    "default": 10,
                    "title": "Limit"
                  },
                  "description": "Number of appointments to return"
                },
                {
                  "name": "barber_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Barber Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/temp/reset-admin-password": {
            "get": {
              "tags": [
                "Temp"
              ],
              "summary": "Reset Admin Password",
              "description": "One-time password reset - REMOVE THIS ENDPOINT AFTER USE",
              "operationId": "reset_admin_password_api_v1_temp_reset_admin_password_get",
              "parameters": [
                {
                  "name": "secret",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Secret"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/debug/database-test": {
            "get": {
              "tags": [
                "Debug"
              ],
              "summary": "Test Database Connection",
              "description": "Test database connection and table creation",
              "operationId": "test_database_connection_api_v1_debug_database_test_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/v1/debug/trafft-webhook-test": {
            "get": {
              "tags": [
                "Debug"
              ],
              "summary": "Test Trafft Webhook Processing",
              "description": "Test if Trafft webhook processing components are working",
              "operationId": "test_trafft_webhook_processing_api_v1_debug_trafft_webhook_test_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/status": {
            "get": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Get Trafft Status",
              "description": "Get Trafft integration status",
              "operationId": "get_trafft_status_api_trafft_status_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/connect": {
            "post": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Connect Trafft",
              "description": "Connect to Trafft with API key",
              "operationId": "connect_trafft_api_trafft_connect_post",
              "parameters": [
                {
                  "name": "api_key",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Api Key"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/disconnect": {
            "post": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Disconnect Trafft",
              "description": "Disconnect from Trafft",
              "operationId": "disconnect_trafft_api_trafft_disconnect_post",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/sync/initial": {
            "post": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Initial Import Endpoint",
              "description": "Perform initial import of data from Trafft",
              "operationId": "initial_import_endpoint_api_trafft_sync_initial_post",
              "parameters": [
                {
                  "name": "days_back",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 30,
                    "title": "Days Back"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/sync/manual": {
            "post": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Manual Sync Endpoint",
              "description": "Perform manual sync of recent changes",
              "operationId": "manual_sync_endpoint_api_trafft_sync_manual_post",
              "parameters": [
                {
                  "name": "hours_back",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 24,
                    "title": "Hours Back"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/webhooks/register": {
            "post": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Register Webhooks Endpoint",
              "description": "Register webhooks with Trafft for real-time sync",
              "operationId": "register_webhooks_endpoint_api_trafft_webhooks_register_post",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/webhooks/status": {
            "get": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Get Webhook Status",
              "description": "Get webhook registration status",
              "operationId": "get_webhook_status_api_trafft_webhooks_status_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/appointments/recent": {
            "get": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Get Recent Appointments",
              "description": "Get recent appointments from Trafft",
              "operationId": "get_recent_appointments_api_trafft_appointments_recent_get",
              "parameters": [
                {
                  "name": "hours_back",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 24,
                    "title": "Hours Back"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/customers": {
            "get": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Get Trafft Customers",
              "description": "Get customers from Trafft",
              "operationId": "get_trafft_customers_api_trafft_customers_get",
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 50,
                    "title": "Limit"
                  }
                },
                {
                  "name": "offset",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 0,
                    "title": "Offset"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/services": {
            "get": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Get Trafft Services",
              "description": "Get services from Trafft",
              "operationId": "get_trafft_services_api_trafft_services_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/employees": {
            "get": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Get Trafft Employees",
              "description": "Get employees/barbers from Trafft",
              "operationId": "get_trafft_employees_api_trafft_employees_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/reports/revenue": {
            "get": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Get Trafft Revenue Report",
              "description": "Get revenue report from Trafft",
              "operationId": "get_trafft_revenue_report_api_trafft_reports_revenue_get",
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "End Date"
                  }
                },
                {
                  "name": "employee_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Employee Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/sync/history": {
            "get": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Get Sync History",
              "description": "Get synchronization history",
              "operationId": "get_sync_history_api_trafft_sync_history_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/trafft/health": {
            "get": {
              "tags": [
                "Trafft Sync",
                "trafft-sync"
              ],
              "summary": "Trafft Health Check",
              "description": "Health check for Trafft integration",
              "operationId": "trafft_health_check_api_trafft_health_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/": {
            "get": {
              "summary": "Read Root",
              "description": "Root endpoint",
              "operationId": "read_root__get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/health": {
            "get": {
              "summary": "Health Check",
              "description": "Health check endpoint",
              "operationId": "health_check_health_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/usage-summary": {
            "get": {
              "summary": "Get Usage Summary",
              "description": "API usage summary for dashboard",
              "operationId": "get_usage_summary_api_usage_summary_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/performance-stats": {
            "get": {
              "summary": "Get Performance Stats",
              "description": "Performance statistics for dashboard",
              "operationId": "get_performance_stats_api_performance_stats_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/cost-estimates": {
            "get": {
              "summary": "Get Cost Estimates",
              "description": "API cost estimates",
              "operationId": "get_cost_estimates_api_cost_estimates_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/sentry-debug": {
            "get": {
              "summary": "Trigger Error",
              "description": "Sentry debug endpoint - triggers a test error",
              "operationId": "trigger_error_sentry_debug_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          }
        },
        "components": {
          "schemas": {
            "AppointmentCreate": {
              "properties": {
                "barber_id": {
                  "type": "integer",
                  "title": "Barber Id"
                },
                "client_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Client Id"
                },
                "client_name": {
                  "type": "string",
                  "title": "Client Name"
                },
                "client_email": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Client Email"
                },
                "client_phone": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Client Phone"
                },
                "appointment_date": {
                  "type": "string",
                  "format": "date",
                  "title": "Appointment Date"
                },
                "appointment_time": {
                  "type": "string",
                  "format": "time",
                  "title": "Appointment Time"
                },
                "service_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Service Id"
                },
                "service_name": {
                  "type": "string",
                  "title": "Service Name"
                },
                "service_duration": {
                  "type": "integer",
                  "title": "Service Duration",
                  "default": 30
                },
                "service_price": {
                  "type": "number",
                  "title": "Service Price"
                },
                "notes": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Notes"
                }
              },
              "type": "object",
              "required": [
                "barber_id",
                "client_name",
                "appointment_date",
                "appointment_time",
                "service_name",
                "service_price"
              ],
              "title": "AppointmentCreate"
            },
            "AppointmentResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "barber_id": {
                  "type": "integer",
                  "title": "Barber Id"
                },
                "barber_name": {
                  "type": "string",
                  "title": "Barber Name"
                },
                "client_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Client Id"
                },
                "client_name": {
                  "type": "string",
                  "title": "Client Name"
                },
                "client_email": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Client Email"
                },
                "client_phone": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Client Phone"
                },
                "appointment_date": {
                  "type": "string",
                  "format": "date",
                  "title": "Appointment Date"
                },
                "appointment_time": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Appointment Time"
                },
                "status": {
                  "type": "string",
                  "title": "Status"
                },
                "service_name": {
                  "type": "string",
                  "title": "Service Name"
                },
                "service_duration": {
                  "type": "integer",
                  "title": "Service Duration"
                },
                "service_price": {
                  "type": "number",
                  "title": "Service Price"
                },
                "service_revenue": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Service Revenue"
                },
                "tip_amount": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Tip Amount"
                },
                "product_revenue": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Product Revenue"
                },
                "total_amount": {
                  "type": "number",
                  "title": "Total Amount"
                },
                "customer_type": {
                  "type": "string",
                  "title": "Customer Type"
                },
                "source": {
                  "type": "string",
                  "title": "Source"
                },
                "notes": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Notes"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                }
              },
              "type": "object",
              "required": [
                "id",
                "barber_id",
                "barber_name",
                "client_id",
                "client_name",
                "client_email",
                "client_phone",
                "appointment_date",
                "appointment_time",
                "status",
                "service_name",
                "service_duration",
                "service_price",
                "service_revenue",
                "tip_amount",
                "product_revenue",
                "total_amount",
                "customer_type",
                "source",
                "notes",
                "created_at"
              ],
              "title": "AppointmentResponse"
            },
            "AppointmentUpdate": {
              "properties": {
                "appointment_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Appointment Date"
                },
                "appointment_time": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Appointment Time"
                },
                "status": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Status"
                },
                "service_revenue": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Service Revenue"
                },
                "tip_amount": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Tip Amount"
                },
                "product_revenue": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Product Revenue"
                },
                "notes": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Notes"
                }
              },
              "type": "object",
              "title": "AppointmentUpdate"
            },
            "AttemptCreate": {
              "properties": {
                "answers": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Answers"
                }
              },
              "type": "object",
              "required": [
                "answers"
              ],
              "title": "AttemptCreate"
            },
            "AttemptResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "enrollment_id": {
                  "type": "integer",
                  "title": "Enrollment Id"
                },
                "attempt_number": {
                  "type": "integer",
                  "title": "Attempt Number"
                },
                "score": {
                  "type": "number",
                  "title": "Score"
                },
                "passed": {
                  "type": "boolean",
                  "title": "Passed"
                },
                "started_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Started At"
                },
                "completed_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Completed At"
                },
                "time_taken": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Time Taken"
                }
              },
              "type": "object",
              "required": [
                "id",
                "enrollment_id",
                "attempt_number",
                "score",
                "passed",
                "started_at",
                "completed_at",
                "time_taken"
              ],
              "title": "AttemptResponse"
            },
            "AutomationRuleCreate": {
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "description": {
                  "type": "string",
                  "title": "Description"
                },
                "rule_type": {
                  "type": "string",
                  "title": "Rule Type"
                },
                "trigger_event": {
                  "type": "string",
                  "title": "Trigger Event"
                },
                "trigger_conditions": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Trigger Conditions"
                },
                "action_type": {
                  "type": "string",
                  "title": "Action Type"
                },
                "action_config": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Action Config"
                },
                "is_active": {
                  "type": "boolean",
                  "title": "Is Active",
                  "default": true
                },
                "priority": {
                  "type": "integer",
                  "title": "Priority",
                  "default": 10
                }
              },
              "type": "object",
              "required": [
                "name",
                "description",
                "rule_type",
                "trigger_event",
                "trigger_conditions",
                "action_type",
                "action_config"
              ],
              "title": "AutomationRuleCreate"
            },
            "AutomationRuleResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "description": {
                  "type": "string",
                  "title": "Description"
                },
                "rule_type": {
                  "type": "string",
                  "title": "Rule Type"
                },
                "trigger_event": {
                  "type": "string",
                  "title": "Trigger Event"
                },
                "trigger_conditions": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Trigger Conditions"
                },
                "action_type": {
                  "type": "string",
                  "title": "Action Type"
                },
                "action_config": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Action Config"
                },
                "is_active": {
                  "type": "boolean",
                  "title": "Is Active"
                },
                "priority": {
                  "type": "integer",
                  "title": "Priority"
                },
                "execution_count": {
                  "type": "integer",
                  "title": "Execution Count"
                },
                "last_executed": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Last Executed"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "created_by": {
                  "type": "integer",
                  "title": "Created By"
                }
              },
              "type": "object",
              "required": [
                "id",
                "name",
                "description",
                "rule_type",
                "trigger_event",
                "trigger_conditions",
                "action_type",
                "action_config",
                "is_active",
                "priority",
                "execution_count",
                "last_executed",
                "created_at",
                "created_by"
              ],
              "title": "AutomationRuleResponse"
            },
            "AutomationRuleUpdate": {
              "properties": {
                "name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "trigger_conditions": {
                  "anyOf": [
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Trigger Conditions"
                },
                "action_config": {
                  "anyOf": [
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Action Config"
                },
                "is_active": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Is Active"
                },
                "priority": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Priority"
                }
              },
              "type": "object",
              "title": "AutomationRuleUpdate"
            },
            "BarberAnalyticsResponse": {
              "properties": {
                "barber_info": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Barber Info"
                },
                "period": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Period"
                },
                "performance_scores": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Performance Scores"
                },
                "revenue_analysis": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Revenue Analysis"
                },
                "client_analysis": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Client Analysis"
                },
                "efficiency_metrics": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Efficiency Metrics"
                },
                "comparative_rankings": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Comparative Rankings"
                },
                "improvement_recommendations": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Improvement Recommendations"
                }
              },
              "type": "object",
              "required": [
                "barber_info",
                "period",
                "performance_scores",
                "revenue_analysis",
                "client_analysis",
                "efficiency_metrics",
                "comparative_rankings",
                "improvement_recommendations"
              ],
              "title": "BarberAnalyticsResponse"
            },
            "BarberCreate": {
              "properties": {
                "first_name": {
                  "type": "string",
                  "title": "First Name"
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "Email"
                },
                "phone": {
                  "type": "string",
                  "title": "Phone"
                },
                "location_id": {
                  "type": "integer",
                  "title": "Location Id"
                },
                "user_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "User Id"
                },
                "commission_rate": {
                  "type": "number",
                  "title": "Commission Rate",
                  "default": 50.0
                }
              },
              "type": "object",
              "required": [
                "first_name",
                "last_name",
                "email",
                "phone",
                "location_id"
              ],
              "title": "BarberCreate"
            },
            "BarberInfo": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "user_id": {
                  "type": "integer",
                  "title": "User Id"
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name"
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name"
                },
                "email": {
                  "type": "string",
                  "title": "Email"
                },
                "phone": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Phone"
                },
                "location_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Location Id"
                },
                "location_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Location Name"
                },
                "sixfb_score": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Sixfb Score"
                },
                "hire_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Hire Date"
                }
              },
              "type": "object",
              "required": [
                "id",
                "user_id",
                "first_name",
                "last_name",
                "email",
                "phone",
                "location_id",
                "location_name",
                "sixfb_score",
                "hire_date"
              ],
              "title": "BarberInfo"
            },
            "BarberResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name"
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name"
                },
                "email": {
                  "type": "string",
                  "title": "Email"
                },
                "phone": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Phone"
                },
                "location_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Location Id"
                },
                "location_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Location Name"
                },
                "user_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "User Id"
                },
                "commission_rate": {
                  "type": "number",
                  "title": "Commission Rate"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "sixfb_score": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Sixfb Score"
                },
                "monthly_revenue": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Monthly Revenue"
                },
                "appointments_this_week": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Appointments This Week"
                }
              },
              "type": "object",
              "required": [
                "id",
                "first_name",
                "last_name",
                "email",
                "phone",
                "location_id",
                "location_name",
                "user_id",
                "commission_rate",
                "created_at"
              ],
              "title": "BarberResponse"
            },
            "BarberUpdate": {
              "properties": {
                "first_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "First Name"
                },
                "last_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Last Name"
                },
                "email": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "email"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Email"
                },
                "phone": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Phone"
                },
                "location_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Location Id"
                },
                "commission_rate": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Commission Rate"
                }
              },
              "type": "object",
              "title": "BarberUpdate"
            },
            "Body_login_api_v1_auth_token_post": {
              "properties": {
                "grant_type": {
                  "anyOf": [
                    {
                      "type": "string",
                      "pattern": "password"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Grant Type"
                },
                "username": {
                  "type": "string",
                  "title": "Username"
                },
                "password": {
                  "type": "string",
                  "title": "Password"
                },
                "scope": {
                  "type": "string",
                  "title": "Scope",
                  "default": ""
                },
                "client_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Client Id"
                },
                "client_secret": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Client Secret"
                }
              },
              "type": "object",
              "required": [
                "username",
                "password"
              ],
              "title": "Body_login_api_v1_auth_token_post"
            },
            "Body_send_bulk_email_api_v1_communications_email_bulk_post": {
              "properties": {
                "recipients": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Recipients"
                },
                "common_context": {
                  "anyOf": [
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Common Context"
                }
              },
              "type": "object",
              "required": [
                "recipients"
              ],
              "title": "Body_send_bulk_email_api_v1_communications_email_bulk_post"
            },
            "BulkPayoutResponse": {
              "properties": {
                "period": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Period"
                },
                "processed_count": {
                  "type": "integer",
                  "title": "Processed Count"
                },
                "total_amount": {
                  "type": "number",
                  "title": "Total Amount"
                },
                "barber_payouts": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Barber Payouts"
                },
                "errors": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Errors"
                }
              },
              "type": "object",
              "required": [
                "period",
                "processed_count",
                "total_amount",
                "barber_payouts",
                "errors"
              ],
              "title": "BulkPayoutResponse"
            },
            "CertificationResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "level": {
                  "type": "string",
                  "title": "Level"
                },
                "description": {
                  "type": "string",
                  "title": "Description"
                },
                "required_score_average": {
                  "type": "number",
                  "title": "Required Score Average"
                },
                "required_experience_months": {
                  "type": "integer",
                  "title": "Required Experience Months"
                },
                "validity_period": {
                  "type": "integer",
                  "title": "Validity Period"
                },
                "commission_bonus": {
                  "type": "number",
                  "title": "Commission Bonus"
                },
                "mentor_eligibility": {
                  "type": "boolean",
                  "title": "Mentor Eligibility"
                },
                "is_active": {
                  "type": "boolean",
                  "title": "Is Active"
                }
              },
              "type": "object",
              "required": [
                "id",
                "name",
                "level",
                "description",
                "required_score_average",
                "required_experience_months",
                "validity_period",
                "commission_bonus",
                "mentor_eligibility",
                "is_active"
              ],
              "title": "CertificationResponse"
            },
            "CommissionCalculationResponse": {
              "properties": {
                "barber_id": {
                  "type": "integer",
                  "title": "Barber Id"
                },
                "barber_name": {
                  "type": "string",
                  "title": "Barber Name"
                },
                "period_start": {
                  "type": "string",
                  "format": "date",
                  "title": "Period Start"
                },
                "period_end": {
                  "type": "string",
                  "format": "date",
                  "title": "Period End"
                },
                "gross_revenue": {
                  "type": "number",
                  "title": "Gross Revenue"
                },
                "base_commission": {
                  "type": "number",
                  "title": "Base Commission"
                },
                "certification_bonus": {
                  "type": "number",
                  "title": "Certification Bonus"
                },
                "performance_bonus": {
                  "type": "number",
                  "title": "Performance Bonus"
                },
                "total_commission": {
                  "type": "number",
                  "title": "Total Commission"
                },
                "franchise_fee": {
                  "type": "number",
                  "title": "Franchise Fee"
                },
                "mentor_override": {
                  "type": "number",
                  "title": "Mentor Override"
                },
                "net_payout": {
                  "type": "number",
                  "title": "Net Payout"
                },
                "tax_withholding": {
                  "type": "number",
                  "title": "Tax Withholding"
                },
                "final_payout": {
                  "type": "number",
                  "title": "Final Payout"
                }
              },
              "type": "object",
              "required": [
                "barber_id",
                "barber_name",
                "period_start",
                "period_end",
                "gross_revenue",
                "base_commission",
                "certification_bonus",
                "performance_bonus",
                "total_commission",
                "franchise_fee",
                "mentor_override",
                "net_payout",
                "tax_withholding",
                "final_payout"
              ],
              "title": "CommissionCalculationResponse"
            },
            "EmailStatus": {
              "type": "string",
              "enum": [
                "sent",
                "delivered",
                "opened",
                "clicked",
                "bounced",
                "failed",
                "spam"
              ],
              "title": "EmailStatus",
              "description": "Email delivery status"
            },
            "EnrollmentResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "user_id": {
                  "type": "integer",
                  "title": "User Id"
                },
                "module_id": {
                  "type": "integer",
                  "title": "Module Id"
                },
                "status": {
                  "type": "string",
                  "title": "Status"
                },
                "progress_percentage": {
                  "type": "number",
                  "title": "Progress Percentage"
                },
                "attempts": {
                  "type": "integer",
                  "title": "Attempts"
                },
                "best_score": {
                  "type": "number",
                  "title": "Best Score"
                },
                "enrolled_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Enrolled At"
                },
                "completed_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Completed At"
                }
              },
              "type": "object",
              "required": [
                "id",
                "user_id",
                "module_id",
                "status",
                "progress_percentage",
                "attempts",
                "best_score",
                "enrolled_at",
                "completed_at"
              ],
              "title": "EnrollmentResponse"
            },
            "HTTPValidationError": {
              "properties": {
                "detail": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "type": "array",
                  "title": "Detail"
                }
              },
              "type": "object",
              "title": "HTTPValidationError"
            },
            "LocationAnalyticsResponse": {
              "properties": {
                "location_id": {
                  "type": "integer",
                  "title": "Location Id"
                },
                "location_name": {
                  "type": "string",
                  "title": "Location Name"
                },
                "period_start": {
                  "type": "string",
                  "format": "date",
                  "title": "Period Start"
                },
                "period_end": {
                  "type": "string",
                  "format": "date",
                  "title": "Period End"
                },
                "total_revenue": {
                  "type": "number",
                  "title": "Total Revenue"
                },
                "total_appointments": {
                  "type": "integer",
                  "title": "Total Appointments"
                },
                "avg_6fb_score": {
                  "type": "number",
                  "title": "Avg 6Fb Score"
                },
                "client_retention_rate": {
                  "type": "number",
                  "title": "Client Retention Rate"
                },
                "booking_efficiency": {
                  "type": "number",
                  "title": "Booking Efficiency"
                },
                "barber_count": {
                  "type": "integer",
                  "title": "Barber Count"
                },
                "revenue_per_barber": {
                  "type": "number",
                  "title": "Revenue Per Barber"
                },
                "top_services": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Top Services"
                }
              },
              "type": "object",
              "required": [
                "location_id",
                "location_name",
                "period_start",
                "period_end",
                "total_revenue",
                "total_appointments",
                "avg_6fb_score",
                "client_retention_rate",
                "booking_efficiency",
                "barber_count",
                "revenue_per_barber",
                "top_services"
              ],
              "title": "LocationAnalyticsResponse"
            },
            "LocationCreate": {
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "location_code": {
                  "type": "string",
                  "title": "Location Code"
                },
                "address": {
                  "type": "string",
                  "title": "Address"
                },
                "city": {
                  "type": "string",
                  "title": "City"
                },
                "state": {
                  "type": "string",
                  "title": "State"
                },
                "zip_code": {
                  "type": "string",
                  "title": "Zip Code"
                },
                "phone": {
                  "type": "string",
                  "title": "Phone"
                },
                "email": {
                  "type": "string",
                  "title": "Email"
                },
                "franchise_type": {
                  "type": "string",
                  "title": "Franchise Type",
                  "default": "company_owned"
                },
                "operating_hours": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Operating Hours"
                },
                "mentor_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Mentor Id"
                },
                "capacity": {
                  "type": "integer",
                  "title": "Capacity",
                  "default": 10
                }
              },
              "type": "object",
              "required": [
                "name",
                "location_code",
                "address",
                "city",
                "state",
                "zip_code",
                "phone",
                "email",
                "operating_hours"
              ],
              "title": "LocationCreate"
            },
            "LocationResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "location_code": {
                  "type": "string",
                  "title": "Location Code"
                },
                "address": {
                  "type": "string",
                  "title": "Address"
                },
                "city": {
                  "type": "string",
                  "title": "City"
                },
                "state": {
                  "type": "string",
                  "title": "State"
                },
                "zip_code": {
                  "type": "string",
                  "title": "Zip Code"
                },
                "phone": {
                  "type": "string",
                  "title": "Phone"
                },
                "email": {
                  "type": "string",
                  "title": "Email"
                },
                "franchise_type": {
                  "type": "string",
                  "title": "Franchise Type"
                },
                "is_active": {
                  "type": "boolean",
                  "title": "Is Active"
                },
                "mentor_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Mentor Id"
                },
                "mentor_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Mentor Name"
                },
                "operating_hours": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Operating Hours"
                },
                "capacity": {
                  "type": "integer",
                  "title": "Capacity"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                }
              },
              "type": "object",
              "required": [
                "id",
                "name",
                "location_code",
                "address",
                "city",
                "state",
                "zip_code",
                "phone",
                "email",
                "franchise_type",
                "is_active",
                "mentor_id",
                "mentor_name",
                "operating_hours",
                "capacity",
                "created_at"
              ],
              "title": "LocationResponse"
            },
            "LocationRevenueResponse": {
              "properties": {
                "location_info": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Location Info"
                },
                "period": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Period"
                },
                "totals": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Totals"
                },
                "barber_breakdowns": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Barber Breakdowns"
                },
                "revenue_streams": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Revenue Streams"
                }
              },
              "type": "object",
              "required": [
                "location_info",
                "period",
                "totals",
                "barber_breakdowns",
                "revenue_streams"
              ],
              "title": "LocationRevenueResponse"
            },
            "LocationUpdate": {
              "properties": {
                "name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Name"
                },
                "address": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Address"
                },
                "phone": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Phone"
                },
                "email": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Email"
                },
                "operating_hours": {
                  "anyOf": [
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Operating Hours"
                },
                "mentor_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Mentor Id"
                },
                "is_active": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Is Active"
                },
                "capacity": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Capacity"
                }
              },
              "type": "object",
              "title": "LocationUpdate"
            },
            "ModuleResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "title": {
                  "type": "string",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "title": "Description"
                },
                "category": {
                  "type": "string",
                  "title": "Category"
                },
                "difficulty_level": {
                  "type": "string",
                  "title": "Difficulty Level"
                },
                "content_type": {
                  "type": "string",
                  "title": "Content Type"
                },
                "estimated_duration": {
                  "type": "integer",
                  "title": "Estimated Duration"
                },
                "passing_score": {
                  "type": "number",
                  "title": "Passing Score"
                },
                "required_for_certification": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Required For Certification"
                },
                "is_mandatory": {
                  "type": "boolean",
                  "title": "Is Mandatory"
                },
                "can_access": {
                  "type": "boolean",
                  "title": "Can Access"
                },
                "enrollment_status": {
                  "type": "string",
                  "title": "Enrollment Status"
                },
                "progress": {
                  "type": "number",
                  "title": "Progress"
                },
                "best_score": {
                  "type": "number",
                  "title": "Best Score"
                }
              },
              "type": "object",
              "required": [
                "id",
                "title",
                "description",
                "category",
                "difficulty_level",
                "content_type",
                "estimated_duration",
                "passing_score",
                "required_for_certification",
                "is_mandatory",
                "can_access",
                "enrollment_status",
                "progress",
                "best_score"
              ],
              "title": "ModuleResponse"
            },
            "NetworkInsightsResponse": {
              "properties": {
                "network_overview": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Network Overview"
                },
                "performance_distribution": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Performance Distribution"
                },
                "benchmarks": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Benchmarks"
                },
                "trends": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Trends"
                },
                "improvement_opportunities": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Improvement Opportunities"
                }
              },
              "type": "object",
              "required": [
                "network_overview",
                "performance_distribution",
                "benchmarks",
                "trends",
                "improvement_opportunities"
              ],
              "title": "NetworkInsightsResponse"
            },
            "NetworkRevenueResponse": {
              "properties": {
                "period": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Period"
                },
                "network_totals": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Network Totals"
                },
                "location_performance": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Location Performance"
                },
                "commission_distribution": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Commission Distribution"
                },
                "top_earners": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Top Earners"
                }
              },
              "type": "object",
              "required": [
                "period",
                "network_totals",
                "location_performance",
                "commission_distribution",
                "top_earners"
              ],
              "title": "NetworkRevenueResponse"
            },
            "NotificationResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "type": {
                  "type": "string",
                  "title": "Type"
                },
                "priority": {
                  "type": "string",
                  "title": "Priority"
                },
                "title": {
                  "type": "string",
                  "title": "Title"
                },
                "message": {
                  "type": "string",
                  "title": "Message"
                },
                "data": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Data"
                },
                "is_read": {
                  "type": "boolean",
                  "title": "Is Read"
                },
                "read_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Read At"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "action_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Action Url"
                }
              },
              "type": "object",
              "required": [
                "id",
                "type",
                "priority",
                "title",
                "message",
                "data",
                "is_read",
                "read_at",
                "created_at",
                "action_url"
              ],
              "title": "NotificationResponse"
            },
            "PaymentConfirm": {
              "properties": {
                "payment_intent_id": {
                  "type": "string",
                  "title": "Payment Intent Id"
                },
                "payment_method_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Payment Method Id",
                  "description": "Payment method ID if not already attached"
                }
              },
              "type": "object",
              "required": [
                "payment_intent_id"
              ],
              "title": "PaymentConfirm",
              "description": "Schema for confirming a payment."
            },
            "PaymentIntentCreate": {
              "properties": {
                "appointment_id": {
                  "type": "integer",
                  "title": "Appointment Id"
                },
                "amount": {
                  "type": "integer",
                  "exclusiveMinimum": 0.0,
                  "title": "Amount",
                  "description": "Amount in cents"
                },
                "payment_method_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Payment Method Id",
                  "description": "ID of saved payment method"
                },
                "save_payment_method": {
                  "type": "boolean",
                  "title": "Save Payment Method",
                  "description": "Save payment method for future use",
                  "default": false
                },
                "metadata": {
                  "anyOf": [
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Metadata"
                }
              },
              "type": "object",
              "required": [
                "appointment_id",
                "amount"
              ],
              "title": "PaymentIntentCreate",
              "description": "Schema for creating a payment intent."
            },
            "PaymentIntentResponse": {
              "properties": {
                "payment_id": {
                  "type": "integer",
                  "title": "Payment Id"
                },
                "client_secret": {
                  "type": "string",
                  "title": "Client Secret"
                },
                "amount": {
                  "type": "integer",
                  "title": "Amount"
                },
                "status": {
                  "$ref": "#/components/schemas/PaymentStatus"
                },
                "requires_action": {
                  "type": "boolean",
                  "title": "Requires Action"
                }
              },
              "type": "object",
              "required": [
                "payment_id",
                "client_secret",
                "amount",
                "status",
                "requires_action"
              ],
              "title": "PaymentIntentResponse",
              "description": "Schema for payment intent response."
            },
            "PaymentMethodCreate": {
              "properties": {
                "payment_method_id": {
                  "type": "string",
                  "title": "Payment Method Id",
                  "description": "Stripe payment method ID from frontend"
                },
                "set_as_default": {
                  "type": "boolean",
                  "title": "Set As Default",
                  "description": "Set as default payment method",
                  "default": false
                }
              },
              "type": "object",
              "required": [
                "payment_method_id"
              ],
              "title": "PaymentMethodCreate",
              "description": "Schema for creating a payment method."
            },
            "PaymentMethodResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "type": {
                  "$ref": "#/components/schemas/PaymentMethodType"
                },
                "last_four": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Last Four"
                },
                "brand": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Brand"
                },
                "exp_month": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Exp Month"
                },
                "exp_year": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Exp Year"
                },
                "bank_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Bank Name"
                },
                "account_last_four": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Account Last Four"
                },
                "is_default": {
                  "type": "boolean",
                  "title": "Is Default"
                },
                "is_active": {
                  "type": "boolean",
                  "title": "Is Active"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                }
              },
              "type": "object",
              "required": [
                "id",
                "type",
                "last_four",
                "brand",
                "exp_month",
                "exp_year",
                "bank_name",
                "account_last_four",
                "is_default",
                "is_active",
                "created_at"
              ],
              "title": "PaymentMethodResponse",
              "description": "Schema for payment method response."
            },
            "PaymentMethodType": {
              "type": "string",
              "enum": [
                "card",
                "bank_account",
                "apple_pay",
                "google_pay"
              ],
              "title": "PaymentMethodType",
              "description": "Payment method type enumeration."
            },
            "PaymentReportCreate": {
              "properties": {
                "report_type": {
                  "type": "string",
                  "pattern": "^(daily|weekly|monthly|custom)$",
                  "title": "Report Type"
                },
                "start_date": {
                  "type": "string",
                  "format": "date",
                  "title": "Start Date"
                },
                "end_date": {
                  "type": "string",
                  "format": "date",
                  "title": "End Date"
                }
              },
              "type": "object",
              "required": [
                "report_type",
                "start_date",
                "end_date"
              ],
              "title": "PaymentReportCreate",
              "description": "Schema for creating a payment report."
            },
            "PaymentReportResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "report_type": {
                  "type": "string",
                  "title": "Report Type"
                },
                "start_date": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Start Date"
                },
                "end_date": {
                  "type": "string",
                  "format": "date-time",
                  "title": "End Date"
                },
                "total_revenue": {
                  "type": "integer",
                  "title": "Total Revenue"
                },
                "total_refunds": {
                  "type": "integer",
                  "title": "Total Refunds"
                },
                "net_revenue": {
                  "type": "integer",
                  "title": "Net Revenue"
                },
                "transaction_count": {
                  "type": "integer",
                  "title": "Transaction Count"
                },
                "refund_count": {
                  "type": "integer",
                  "title": "Refund Count"
                },
                "breakdown_by_barber": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Breakdown By Barber"
                },
                "breakdown_by_service": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Breakdown By Service"
                },
                "breakdown_by_payment_method": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Breakdown By Payment Method"
                },
                "file_path": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Path"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                }
              },
              "type": "object",
              "required": [
                "id",
                "report_type",
                "start_date",
                "end_date",
                "total_revenue",
                "total_refunds",
                "net_revenue",
                "transaction_count",
                "refund_count",
                "breakdown_by_barber",
                "breakdown_by_service",
                "breakdown_by_payment_method",
                "file_path",
                "created_at"
              ],
              "title": "PaymentReportResponse",
              "description": "Schema for payment report response."
            },
            "PaymentResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "appointment_id": {
                  "type": "integer",
                  "title": "Appointment Id"
                },
                "amount": {
                  "type": "integer",
                  "title": "Amount"
                },
                "amount_decimal": {
                  "type": "number",
                  "title": "Amount Decimal"
                },
                "currency": {
                  "type": "string",
                  "title": "Currency"
                },
                "status": {
                  "$ref": "#/components/schemas/PaymentStatus"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "paid_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Paid At"
                },
                "refunded_amount": {
                  "type": "integer",
                  "title": "Refunded Amount"
                },
                "refundable_amount": {
                  "type": "integer",
                  "title": "Refundable Amount"
                }
              },
              "type": "object",
              "required": [
                "id",
                "appointment_id",
                "amount",
                "amount_decimal",
                "currency",
                "status",
                "description",
                "created_at",
                "paid_at",
                "refunded_amount",
                "refundable_amount"
              ],
              "title": "PaymentResponse",
              "description": "Schema for payment response."
            },
            "PaymentStatus": {
              "type": "string",
              "enum": [
                "pending",
                "processing",
                "succeeded",
                "failed",
                "cancelled",
                "refunded",
                "partially_refunded",
                "requires_action"
              ],
              "title": "PaymentStatus",
              "description": "Payment status enumeration."
            },
            "PayoutReportResponse": {
              "properties": {
                "barber_info": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Barber Info"
                },
                "period": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Period"
                },
                "summary": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Summary"
                },
                "commission_structure": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Commission Structure"
                },
                "appointment_details": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Appointment Details"
                },
                "statistics": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Statistics"
                }
              },
              "type": "object",
              "required": [
                "barber_info",
                "period",
                "summary",
                "commission_structure",
                "appointment_details",
                "statistics"
              ],
              "title": "PayoutReportResponse"
            },
            "ProgressResponse": {
              "properties": {
                "user_info": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "User Info"
                },
                "overall_progress": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Overall Progress"
                },
                "module_progress": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Module Progress"
                },
                "certifications": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Certifications"
                },
                "skill_assessments": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Skill Assessments"
                }
              },
              "type": "object",
              "required": [
                "user_info",
                "overall_progress",
                "module_progress",
                "certifications",
                "skill_assessments"
              ],
              "title": "ProgressResponse"
            },
            "RefundCreate": {
              "properties": {
                "payment_id": {
                  "type": "integer",
                  "title": "Payment Id"
                },
                "amount": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "exclusiveMinimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Amount",
                  "description": "Amount to refund in cents (None for full refund)"
                },
                "reason": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 255
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Reason"
                }
              },
              "type": "object",
              "required": [
                "payment_id"
              ],
              "title": "RefundCreate",
              "description": "Schema for creating a refund."
            },
            "RefundResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "payment_id": {
                  "type": "integer",
                  "title": "Payment Id"
                },
                "amount": {
                  "type": "integer",
                  "title": "Amount"
                },
                "reason": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Reason"
                },
                "status": {
                  "$ref": "#/components/schemas/RefundStatus"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "refunded_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Refunded At"
                }
              },
              "type": "object",
              "required": [
                "id",
                "payment_id",
                "amount",
                "reason",
                "status",
                "created_at",
                "refunded_at"
              ],
              "title": "RefundResponse",
              "description": "Schema for refund response."
            },
            "RefundStatus": {
              "type": "string",
              "enum": [
                "pending",
                "succeeded",
                "failed",
                "cancelled"
              ],
              "title": "RefundStatus",
              "description": "Refund status enumeration."
            },
            "SMSStatus": {
              "type": "string",
              "enum": [
                "sent",
                "delivered",
                "failed",
                "undelivered"
              ],
              "title": "SMSStatus",
              "description": "SMS delivery status"
            },
            "SixFBScoreResponse": {
              "properties": {
                "barber_id": {
                  "type": "integer",
                  "title": "Barber Id"
                },
                "barber_name": {
                  "type": "string",
                  "title": "Barber Name"
                },
                "period": {
                  "type": "string",
                  "title": "Period"
                },
                "start_date": {
                  "type": "string",
                  "format": "date",
                  "title": "Start Date"
                },
                "end_date": {
                  "type": "string",
                  "format": "date",
                  "title": "End Date"
                },
                "overall_score": {
                  "type": "number",
                  "title": "Overall Score"
                },
                "components": {
                  "additionalProperties": {
                    "type": "number"
                  },
                  "type": "object",
                  "title": "Components"
                },
                "improvements_needed": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Improvements Needed"
                }
              },
              "type": "object",
              "required": [
                "barber_id",
                "barber_name",
                "period",
                "start_date",
                "end_date",
                "overall_score",
                "components",
                "improvements_needed"
              ],
              "title": "SixFBScoreResponse"
            },
            "SkillAssessmentCreate": {
              "properties": {
                "user_id": {
                  "type": "integer",
                  "title": "User Id"
                },
                "assessment_type": {
                  "type": "string",
                  "title": "Assessment Type"
                },
                "skill_category": {
                  "type": "string",
                  "title": "Skill Category"
                },
                "technical_skill": {
                  "type": "number",
                  "title": "Technical Skill"
                },
                "customer_interaction": {
                  "type": "number",
                  "title": "Customer Interaction"
                },
                "business_acumen": {
                  "type": "number",
                  "title": "Business Acumen"
                },
                "sixfb_methodology": {
                  "type": "number",
                  "title": "Sixfb Methodology"
                },
                "strengths": {
                  "type": "string",
                  "title": "Strengths"
                },
                "areas_for_improvement": {
                  "type": "string",
                  "title": "Areas For Improvement"
                },
                "recommendations": {
                  "type": "string",
                  "title": "Recommendations"
                },
                "follow_up_required": {
                  "type": "boolean",
                  "title": "Follow Up Required",
                  "default": false
                },
                "location_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Location Id"
                }
              },
              "type": "object",
              "required": [
                "user_id",
                "assessment_type",
                "skill_category",
                "technical_skill",
                "customer_interaction",
                "business_acumen",
                "sixfb_methodology",
                "strengths",
                "areas_for_improvement",
                "recommendations"
              ],
              "title": "SkillAssessmentCreate"
            },
            "TeamComparisonResponse": {
              "properties": {
                "summary": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Summary"
                },
                "location_comparisons": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Location Comparisons"
                },
                "top_performing_teams": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Top Performing Teams"
                },
                "improvement_opportunities": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Improvement Opportunities"
                },
                "network_benchmarks": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Network Benchmarks"
                }
              },
              "type": "object",
              "required": [
                "summary",
                "location_comparisons",
                "top_performing_teams",
                "improvement_opportunities",
                "network_benchmarks"
              ],
              "title": "TeamComparisonResponse"
            },
            "Token": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "title": "Access Token"
                },
                "token_type": {
                  "type": "string",
                  "title": "Token Type"
                },
                "user": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "User"
                }
              },
              "type": "object",
              "required": [
                "access_token",
                "token_type",
                "user"
              ],
              "title": "Token"
            },
            "UserCertificationResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "certification_id": {
                  "type": "integer",
                  "title": "Certification Id"
                },
                "certification_name": {
                  "type": "string",
                  "title": "Certification Name"
                },
                "certification_level": {
                  "type": "string",
                  "title": "Certification Level"
                },
                "earned_date": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Earned Date"
                },
                "expiry_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Expiry Date"
                },
                "final_score": {
                  "type": "number",
                  "title": "Final Score"
                },
                "status": {
                  "type": "string",
                  "title": "Status"
                }
              },
              "type": "object",
              "required": [
                "id",
                "certification_id",
                "certification_name",
                "certification_level",
                "earned_date",
                "expiry_date",
                "final_score",
                "status"
              ],
              "title": "UserCertificationResponse"
            },
            "UserCreate": {
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "Email"
                },
                "password": {
                  "type": "string",
                  "title": "Password"
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name"
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name"
                },
                "role": {
                  "type": "string",
                  "title": "Role",
                  "default": "barber"
                },
                "primary_location_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Primary Location Id"
                }
              },
              "type": "object",
              "required": [
                "email",
                "password",
                "first_name",
                "last_name"
              ],
              "title": "UserCreate"
            },
            "UserUpdate": {
              "properties": {
                "full_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Full Name"
                },
                "email": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "email"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Email"
                },
                "role": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Role"
                },
                "is_active": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Is Active"
                },
                "primary_location_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Primary Location Id"
                },
                "accessible_locations": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Accessible Locations"
                },
                "permissions": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Permissions"
                }
              },
              "type": "object",
              "title": "UserUpdate"
            },
            "ValidationError": {
              "properties": {
                "loc": {
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "type": "array",
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              },
              "type": "object",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "title": "ValidationError"
            },
            "WorkflowLogResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "rule_id": {
                  "type": "integer",
                  "title": "Rule Id"
                },
                "rule_name": {
                  "type": "string",
                  "title": "Rule Name"
                },
                "execution_time": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Execution Time"
                },
                "status": {
                  "type": "string",
                  "title": "Status"
                },
                "trigger_data": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Trigger Data"
                },
                "action_result": {
                  "anyOf": [
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Action Result"
                },
                "error_message": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error Message"
                }
              },
              "type": "object",
              "required": [
                "id",
                "rule_id",
                "rule_name",
                "execution_time",
                "status",
                "trigger_data",
                "action_result",
                "error_message"
              ],
              "title": "WorkflowLogResponse"
            },
            "api__v1__auth__UserResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "email": {
                  "type": "string",
                  "title": "Email"
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name"
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name"
                },
                "role": {
                  "type": "string",
                  "title": "Role"
                },
                "is_active": {
                  "type": "boolean",
                  "title": "Is Active"
                },
                "primary_location_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Primary Location Id"
                },
                "permissions": {
                  "anyOf": [
                    {
                      "items": {},
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Permissions"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                }
              },
              "type": "object",
              "required": [
                "id",
                "email",
                "first_name",
                "last_name",
                "role",
                "is_active",
                "primary_location_id",
                "permissions",
                "created_at"
              ],
              "title": "UserResponse"
            },
            "api__v1__users__UserResponse": {
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Id"
                },
                "email": {
                  "type": "string",
                  "title": "Email"
                },
                "full_name": {
                  "type": "string",
                  "title": "Full Name"
                },
                "role": {
                  "type": "string",
                  "title": "Role"
                },
                "is_active": {
                  "type": "boolean",
                  "title": "Is Active"
                },
                "primary_location_id": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Primary Location Id"
                },
                "accessible_locations": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Accessible Locations"
                },
                "permissions": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Permissions"
                },
                "sixfb_certification_level": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Sixfb Certification Level"
                },
                "certification_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Certification Date"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "last_login": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Last Login"
                }
              },
              "type": "object",
              "required": [
                "id",
                "email",
                "full_name",
                "role",
                "is_active",
                "primary_location_id",
                "accessible_locations",
                "permissions",
                "sixfb_certification_level",
                "certification_date",
                "created_at",
                "last_login"
              ],
              "title": "UserResponse"
            }
          },
          "securitySchemes": {
            "OAuth2PasswordBearer": {
              "type": "oauth2",
              "flows": {
                "password": {
                  "scopes": {},
                  "tokenUrl": "/api/v1/auth/token"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Services (Root Path)",
      "method": "GET",
      "path": "/services",
      "url": "https://sixfb-backend.onrender.com/services",
      "status_code": 404,
      "response_time_ms": 566.3,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:58:35 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "34d23ce5-30eb-471f",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.0047893524169921875",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "100",
        "x-ratelimit-reset": "1750708774",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "5322e5d8-33c4-4603-8f53-65a4d57f2516",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "95468f9c7d69cc76-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "66537aac-a269-4232-a91d-5a00ca114fff"
      }
    },
    {
      "name": "Login Endpoint (No Data)",
      "method": "POST",
      "path": "/api/v1/auth/login",
      "url": "https://sixfb-backend.onrender.com/api/v1/auth/login",
      "status_code": 404,
      "response_time_ms": 766.7,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:58:35 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "db273612-7652-428a",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.007437467575073242",
        "x-ratelimit-limit": "5",
        "x-ratelimit-remaining": "5",
        "x-ratelimit-reset": "1750709015",
        "x-ratelimit-window": "300",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "9c8cb9e5-4fe9-4867-8622-ae842e1e91ab",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "95468fa15d62cc76-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "b0d7ee32-c33d-455b-baf6-f0c844ae6d52"
      }
    },
    {
      "name": "Login Endpoint (Invalid Creds)",
      "method": "POST",
      "path": "/api/v1/auth/login",
      "url": "https://sixfb-backend.onrender.com/api/v1/auth/login",
      "status_code": 404,
      "response_time_ms": 562.02,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:58:36 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "1f3fc0d4-daf9-4638",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.00582432746887207",
        "x-ratelimit-limit": "5",
        "x-ratelimit-remaining": "4",
        "x-ratelimit-reset": "1750709016",
        "x-ratelimit-window": "300",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "7384b670-8278-457c-a46c-86c5d7e9dbdd",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "95468fa47ddacc72-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "132cd75f-9b91-4eeb-b8c6-b5d41c759ce5"
      }
    },
    {
      "name": "Barbers List",
      "method": "GET",
      "path": "/api/v1/barbers",
      "url": "https://sixfb-backend.onrender.com/api/v1/barbers",
      "status_code": 401,
      "response_time_ms": 725.49,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:58:37 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "e84cf96d-0e7f-4666",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.00843191146850586",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "98",
        "x-ratelimit-reset": "1750708777",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "8afdf2c1-d60e-4824-b722-cdc54ce93884",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "95468fa9bc26c82c-TPA",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not authenticated",
        "message": "Not authenticated",
        "request_id": "f2375173-91ad-4f8f-a48f-d4b6ca36d753"
      }
    },
    {
      "name": "Booking Availability",
      "method": "GET",
      "path": "/api/v1/booking/availability",
      "url": "https://sixfb-backend.onrender.com/api/v1/booking/availability",
      "status_code": 404,
      "response_time_ms": 399.26,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:58:37 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "9a488a16-58c4-450b",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.004945278167724609",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "97",
        "x-ratelimit-reset": "1750708777",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "05ab4b37-402c-4c77-bcc8-c105723b6bda",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "95468fac3c5acc72-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "6d195bf5-7c25-4943-a479-cf99109197ce"
      }
    },
    {
      "name": "Analytics (Auth Required)",
      "method": "GET",
      "path": "/api/v1/analytics",
      "url": "https://sixfb-backend.onrender.com/api/v1/analytics",
      "status_code": 404,
      "response_time_ms": 468.74,
      "success": false,
      "headers": {
        "Date": "Mon, 23 Jun 2025 19:58:37 GMT",
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Connection": "keep-alive",
        "referrer-policy": "strict-origin-when-cross-origin",
        "rndr-id": "872895a3-b1f7-4818",
        "strict-transport-security": "max-age=31536000; includeSubDomains",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-frame-options": "DENY",
        "x-process-time": "0.007147312164306641",
        "x-ratelimit-limit": "100",
        "x-ratelimit-remaining": "96",
        "x-ratelimit-reset": "1750708777",
        "x-ratelimit-window": "60",
        "x-render-origin-server": "uvicorn",
        "x-request-id": "d23109f3-2130-4941-9854-549becb6a0ce",
        "x-xss-protection": "1; mode=block",
        "cf-cache-status": "DYNAMIC",
        "Server": "cloudflare",
        "CF-RAY": "95468faedc54cc72-TPA",
        "Content-Encoding": "gzip",
        "alt-svc": "h3=\":443\"; ma=86400"
      },
      "response_body": {
        "error": "Not Found",
        "message": "The requested resource was not found",
        "request_id": "da952792-4c95-484c-a1e1-113184f3204a"
      }
    }
  ]
}
