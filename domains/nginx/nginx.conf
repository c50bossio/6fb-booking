# BookedBarber V2 Production Nginx Configuration
# Main configuration for load balancing and SSL termination

# Worker configuration
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;
    
    # Upstream backend servers
    upstream backend_api {
        least_conn;
        server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8001 max_fails=3 fail_timeout=30s backup;
        keepalive 32;
    }
    
    upstream frontend_app {
        least_conn;
        server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:3001 max_fails=3 fail_timeout=30s backup;
        keepalive 32;
    }
    
    # Cache configuration
    proxy_cache_path /var/cache/nginx/bookedbarber levels=1:2 keys_zone=bookedbarber:100m 
                     max_size=1g inactive=60m use_temp_path=off;
    
    # Main site - bookedbarber.com
    server {
        listen 80;
        server_name bookedbarber.com www.bookedbarber.com;
        return 301 https://bookedbarber.com$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name www.bookedbarber.com;
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/bookedbarber.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/bookedbarber.com/privkey.pem;
        include /etc/nginx/ssl-params.conf;
        
        return 301 https://bookedbarber.com$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name bookedbarber.com;
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/bookedbarber.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/bookedbarber.com/privkey.pem;
        include /etc/nginx/ssl-params.conf;
        
        # Security and performance headers
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://maps.googleapis.com https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.bookedbarber.com https://api.stripe.com; frame-src https://js.stripe.com;" always;
        
        # Rate limiting
        limit_req zone=general burst=50 nodelay;
        
        # Static files with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Compression
            gzip on;
            gzip_vary on;
            gzip_min_length 1024;
            gzip_comp_level 6;
            gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
            
            proxy_pass http://frontend_app;
            proxy_cache bookedbarber;
            proxy_cache_valid 200 1d;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        }
        
        # API proxy with health checks
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # All other requests to Next.js frontend
        location / {
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Rate limiting
            limit_req zone=general burst=30 nodelay;
        }
    }
    
    # API subdomain - api.bookedbarber.com
    server {
        listen 80;
        server_name api.bookedbarber.com;
        return 301 https://api.bookedbarber.com$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name api.bookedbarber.com;
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/api.bookedbarber.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.bookedbarber.com/privkey.pem;
        include /etc/nginx/ssl-params.conf;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://bookedbarber.com, https://app.bookedbarber.com, https://admin.bookedbarber.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Preflight requests
        location ~ ^/api/v1/.*$ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "https://bookedbarber.com, https://app.bookedbarber.com, https://admin.bookedbarber.com";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            
            # Rate limiting for API endpoints
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Auth endpoints with stricter rate limiting
        location ~ ^/api/v1/(auth|login|register) {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://backend_api/health;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # Documentation
        location /docs {
            proxy_pass http://backend_api/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # App subdomain - app.bookedbarber.com
    server {
        listen 80;
        server_name app.bookedbarber.com;
        return 301 https://app.bookedbarber.com$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name app.bookedbarber.com;
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/app.bookedbarber.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app.bookedbarber.com/privkey.pem;
        include /etc/nginx/ssl-params.conf;
        
        # App-specific security headers
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://maps.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; connect-src 'self' https://api.bookedbarber.com;" always;
        
        location / {
            proxy_pass http://frontend_app/dashboard;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Rate limiting
            limit_req zone=general burst=30 nodelay;
        }
    }
    
    # Admin subdomain - admin.bookedbarber.com
    server {
        listen 80;
        server_name admin.bookedbarber.com;
        return 301 https://admin.bookedbarber.com$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name admin.bookedbarber.com;
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/admin.bookedbarber.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/admin.bookedbarber.com/privkey.pem;
        include /etc/nginx/ssl-params.conf;
        
        # Admin security - IP allowlist
        # allow 192.168.1.0/24;  # Office network
        # allow 10.0.0.0/8;      # VPN network
        # deny all;
        
        location / {
            proxy_pass http://frontend_app/admin;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Stricter rate limiting for admin
            limit_req zone=login burst=10 nodelay;
        }
    }
}