# BookedBarber V2 Nginx Subdomain Configuration Template
# This template can be customized for different subdomain configurations

# Subdomain: {{SUBDOMAIN}}.bookedbarber.com
# Purpose: {{PURPOSE}}
# Backend: {{BACKEND_URL}}
# Special config: {{SPECIAL_CONFIG}}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name {{SUBDOMAIN}}.bookedbarber.com;
    return 301 https://{{SUBDOMAIN}}.bookedbarber.com$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl http2;
    server_name {{SUBDOMAIN}}.bookedbarber.com;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/{{SUBDOMAIN}}.bookedbarber.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{SUBDOMAIN}}.bookedbarber.com/privkey.pem;
    include /etc/nginx/ssl-params.conf;
    
    # Security headers
    add_header X-Frame-Options {{X_FRAME_OPTIONS}} always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "{{CSP_POLICY}}" always;
    
    # CORS headers (if needed)
    {{CORS_HEADERS}}
    
    # Rate limiting
    limit_req zone={{RATE_LIMIT_ZONE}} burst={{RATE_LIMIT_BURST}} nodelay;
    
    # Access control (if needed)
    {{ACCESS_CONTROL}}
    
    # Static files caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires {{STATIC_CACHE_TIME}};
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        proxy_pass {{BACKEND_URL}};
        proxy_cache bookedbarber;
        proxy_cache_valid 200 {{STATIC_CACHE_TIME}};
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass {{BACKEND_URL}}/health;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Custom location blocks
    {{CUSTOM_LOCATIONS}}
    
    # Default location
    location / {
        proxy_pass {{BACKEND_URL}};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout {{PROXY_TIMEOUT}};
        proxy_send_timeout {{PROXY_TIMEOUT}};
        proxy_read_timeout {{PROXY_TIMEOUT}};
        
        # Custom proxy settings
        {{CUSTOM_PROXY_SETTINGS}}
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/error-pages;
    }
    
    location = /50x.html {
        root /var/www/error-pages;
    }
}